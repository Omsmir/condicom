{
    "sourceFile": "backend/src/utils/backevents.ts",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 56,
            "patches": [
                {
                    "date": 1741040103027,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1741085237290,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -71,9 +71,9 @@\n };\r\n \r\n interface codeProps {\r\n   numbers: string[];\r\n-  fiveNumbers: number[];\r\n+  fiveNumbers: string[];\r\n   characters: string[];\r\n }\r\n \r\n export const generateCode = ({\r\n@@ -119,4 +119,9 @@\n   });\r\n \r\n   return role;\r\n };\r\n+\r\n+\r\n+\r\n+\r\n+export const generateE\n\\ No newline at end of file\n"
                },
                {
                    "date": 1741085244513,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -123,5 +123,7 @@\n \r\n \r\n \r\n \r\n-export const generateE\n\\ No newline at end of file\n+export const generateExpirationDate = () => {\r\n+  \r\n+}\n\\ No newline at end of file\n"
                },
                {
                    "date": 1741085277754,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -121,9 +121,9 @@\n   return role;\r\n };\r\n \r\n \r\n+c\r\n \r\n+export const generateExpirationDate = () => {\r\n \r\n-export const generateExpirationDate = () => {\r\n-  \r\n }\n\\ No newline at end of file\n"
                },
                {
                    "date": 1741085292344,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -121,9 +121,9 @@\n   return role;\r\n };\r\n \r\n \r\n-c\r\n+const plans = [\"30\",\"90\"]\r\n \r\n export const generateExpirationDate = () => {\r\n \r\n }\n\\ No newline at end of file\n"
                },
                {
                    "date": 1741085297456,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -121,9 +121,9 @@\n   return role;\r\n };\r\n \r\n \r\n-const plans = [\"30\",\"90\"]\r\n+const plans = [\"30\",\"90\",\"180\"]\r\n \r\n export const generateExpirationDate = () => {\r\n \r\n }\n\\ No newline at end of file\n"
                },
                {
                    "date": 1741085302633,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -121,9 +121,9 @@\n   return role;\r\n };\r\n \r\n \r\n-const plans = [\"30\",\"90\",\"180\"]\r\n+const plans = [\"30\",\"90\",\"180\",\"365\"]\r\n \r\n export const generateExpirationDate = () => {\r\n \r\n }\n\\ No newline at end of file\n"
                },
                {
                    "date": 1741085328610,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -121,9 +121,11 @@\n   return role;\r\n };\r\n \r\n \r\n-const plans = [\"30\",\"90\",\"180\",\"365\"]\r\n+const plans = [{\r\n+  \r\n+}\r\n \r\n export const generateExpirationDate = () => {\r\n \r\n }\n\\ No newline at end of file\n"
                },
                {
                    "date": 1741085335815,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -121,11 +121,11 @@\n   return role;\r\n };\r\n \r\n \r\n-const plans = [{\r\n-  \r\n-}\r\n+const plans = [\r\n+  {}\r\n+]\r\n \r\n export const generateExpirationDate = () => {\r\n \r\n }\n\\ No newline at end of file\n"
                },
                {
                    "date": 1741085342836,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -121,11 +121,11 @@\n   return role;\r\n };\r\n \r\n \r\n-const plans = [\r\n-  {}\r\n-]\r\n+const plans = {\r\n+  \"\"\r\n+}\r\n \r\n export const generateExpirationDate = () => {\r\n \r\n }\n\\ No newline at end of file\n"
                },
                {
                    "date": 1741085349484,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -122,9 +122,9 @@\n };\r\n \r\n \r\n const plans = {\r\n-  \"\"\r\n+  \"month\":30,\r\n }\r\n \r\n export const generateExpirationDate = () => {\r\n \r\n"
                },
                {
                    "date": 1741085355497,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -123,8 +123,9 @@\n \r\n \r\n const plans = {\r\n   \"month\":30,\r\n+  \"3month\"\r\n }\r\n \r\n export const generateExpirationDate = () => {\r\n \r\n"
                },
                {
                    "date": 1741085361713,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -123,9 +123,10 @@\n \r\n \r\n const plans = {\r\n   \"month\":30,\r\n-  \"3month\"\r\n+  \"3month\":90,\r\n+  \"6month\"\r\n }\r\n \r\n export const generateExpirationDate = () => {\r\n \r\n"
                },
                {
                    "date": 1741085368815,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -124,9 +124,10 @@\n \r\n const plans = {\r\n   \"month\":30,\r\n   \"3month\":90,\r\n-  \"6month\"\r\n+  \"6month\":180,\r\n+  \"1year\"\r\n }\r\n \r\n export const generateExpirationDate = () => {\r\n \r\n"
                },
                {
                    "date": 1741085378524,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -125,10 +125,10 @@\n const plans = {\r\n   \"month\":30,\r\n   \"3month\":90,\r\n   \"6month\":180,\r\n-  \"1year\"\r\n+  \"1year\":365\r\n }\r\n \r\n-export const generateExpirationDate = () => {\r\n+export const generateExpirationDate = ({}) => {\r\n \r\n }\n\\ No newline at end of file\n"
                },
                {
                    "date": 1741085385351,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -128,7 +128,7 @@\n   \"6month\":180,\r\n   \"1year\":365\r\n }\r\n \r\n-export const generateExpirationDate = ({}) => {\r\n+export const generateExpirationDate = ({month}:{month:string}) => {\r\n \r\n }\n\\ No newline at end of file\n"
                },
                {
                    "date": 1741085404410,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -129,6 +129,6 @@\n   \"1year\":365\r\n }\r\n \r\n export const generateExpirationDate = ({month}:{month:string}) => {\r\n-\r\n+const \r\n }\n\\ No newline at end of file\n"
                },
                {
                    "date": 1741085411457,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -129,6 +129,6 @@\n   \"1year\":365\r\n }\r\n \r\n export const generateExpirationDate = ({month}:{month:string}) => {\r\n-const \r\n+const plan = \r\n }\n\\ No newline at end of file\n"
                },
                {
                    "date": 1741085426122,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -129,6 +129,6 @@\n   \"1year\":365\r\n }\r\n \r\n export const generateExpirationDate = ({month}:{month:string}) => {\r\n-const plan = \r\n+const plan = Object.entries(plans).ma\r\n }\n\\ No newline at end of file\n"
                },
                {
                    "date": 1741085432339,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -129,6 +129,6 @@\n   \"1year\":365\r\n }\r\n \r\n export const generateExpirationDate = ({month}:{month:string}) => {\r\n-const plan = Object.entries(plans).ma\r\n+const plan = Object.entries(plans).map(([keyBy,value]))\r\n }\n\\ No newline at end of file\n"
                },
                {
                    "date": 1741085437513,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -129,6 +129,8 @@\n   \"1year\":365\r\n }\r\n \r\n export const generateExpirationDate = ({month}:{month:string}) => {\r\n-const plan = Object.entries(plans).map(([keyBy,value]))\r\n+const plan = Object.entries(plans).map(([keyBy,value]) => {\r\n+  \r\n+})\r\n }\n\\ No newline at end of file\n"
                },
                {
                    "date": 1741085445873,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -129,8 +129,8 @@\n   \"1year\":365\r\n }\r\n \r\n export const generateExpirationDate = ({month}:{month:string}) => {\r\n-const plan = Object.entries(plans).map(([keyBy,value]) => {\r\n-  \r\n+const plan = Object.entries(plans).map(([key,value]) => {\r\n+  return \r\n })\r\n }\n\\ No newline at end of file\n"
                },
                {
                    "date": 1741085473788,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -130,7 +130,7 @@\n }\r\n \r\n export const generateExpirationDate = ({month}:{month:string}) => {\r\n const plan = Object.entries(plans).map(([key,value]) => {\r\n-  return \r\n+  return value \r\n })\r\n }\n\\ No newline at end of file\n"
                },
                {
                    "date": 1741085480548,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -130,7 +130,7 @@\n }\r\n \r\n export const generateExpirationDate = ({month}:{month:string}) => {\r\n const plan = Object.entries(plans).map(([key,value]) => {\r\n-  return value \r\n+  return value && \r\n })\r\n }\n\\ No newline at end of file\n"
                },
                {
                    "date": 1741085488237,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -130,7 +130,7 @@\n }\r\n \r\n export const generateExpirationDate = ({month}:{month:string}) => {\r\n const plan = Object.entries(plans).map(([key,value]) => {\r\n-  return value && \r\n+  return key === m\r\n })\r\n }\n\\ No newline at end of file\n"
                },
                {
                    "date": 1741085497036,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -130,7 +130,7 @@\n }\r\n \r\n export const generateExpirationDate = ({month}:{month:string}) => {\r\n const plan = Object.entries(plans).map(([key,value]) => {\r\n-  return key === m\r\n+  return key === month && value\r\n })\r\n }\n\\ No newline at end of file\n"
                },
                {
                    "date": 1741085503639,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -132,5 +132,6 @@\n export const generateExpirationDate = ({month}:{month:string}) => {\r\n const plan = Object.entries(plans).map(([key,value]) => {\r\n   return key === month && value\r\n })\r\n+return plan\r\n }\n\\ No newline at end of file\n"
                },
                {
                    "date": 1741085511219,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -133,5 +133,9 @@\n const plan = Object.entries(plans).map(([key,value]) => {\r\n   return key === month && value\r\n })\r\n return plan\r\n-}\n\\ No newline at end of file\n+}\r\n+\r\n+\r\n+\r\n+console.log(gene)\n\\ No newline at end of file\n"
                },
                {
                    "date": 1741085516538,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -137,5 +137,5 @@\n }\r\n \r\n \r\n \r\n-console.log(gene)\n\\ No newline at end of file\n+console.log(generateExpirationDate({\"\"}))\n\\ No newline at end of file\n"
                },
                {
                    "date": 1741085533032,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -137,5 +137,5 @@\n }\r\n \r\n \r\n \r\n-console.log(generateExpirationDate({\"\"}))\n\\ No newline at end of file\n+console.log(generateExpirationDate({month:\"month\"}))\n\\ No newline at end of file\n"
                },
                {
                    "date": 1741085548841,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -129,9 +129,9 @@\n   \"1year\":365\r\n }\r\n \r\n export const generateExpirationDate = ({month}:{month:string}) => {\r\n-const plan = Object.entries(plans).map(([key,value]) => {\r\n+const plan = Object.entries(plans).fil(([key,value]) => {\r\n   return key === month && value\r\n })\r\n return plan\r\n }\r\n"
                },
                {
                    "date": 1741085557900,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -129,12 +129,12 @@\n   \"1year\":365\r\n }\r\n \r\n export const generateExpirationDate = ({month}:{month:string}) => {\r\n-const plan = Object.entries(plans).fil(([key,value]) => {\r\n+const plan = Object.entries(plans).filter(([key,value]) => {\r\n   return key === month && value\r\n })\r\n-return plan\r\n+return plan.\r\n }\r\n \r\n \r\n \r\n"
                },
                {
                    "date": 1741085580929,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -130,11 +130,11 @@\n }\r\n \r\n export const generateExpirationDate = ({month}:{month:string}) => {\r\n const plan = Object.entries(plans).filter(([key,value]) => {\r\n-  return key === month && value\r\n+  if()\r\n })\r\n-return plan.\r\n+return plan.join(\" \")\r\n }\r\n \r\n \r\n \r\n"
                },
                {
                    "date": 1741085587576,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -130,9 +130,9 @@\n }\r\n \r\n export const generateExpirationDate = ({month}:{month:string}) => {\r\n const plan = Object.entries(plans).filter(([key,value]) => {\r\n-  if()\r\n+  if(key ==== month)\r\n })\r\n return plan.join(\" \")\r\n }\r\n \r\n"
                },
                {
                    "date": 1741085594295,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -130,9 +130,9 @@\n }\r\n \r\n export const generateExpirationDate = ({month}:{month:string}) => {\r\n const plan = Object.entries(plans).filter(([key,value]) => {\r\n-  if(key ==== month)\r\n+  if(key ==== month) return value\r\n })\r\n return plan.join(\" \")\r\n }\r\n \r\n"
                },
                {
                    "date": 1741085606349,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -130,9 +130,9 @@\n }\r\n \r\n export const generateExpirationDate = ({month}:{month:string}) => {\r\n const plan = Object.entries(plans).filter(([key,value]) => {\r\n-  if(key ==== month) return value\r\n+  if(key === month) return value\r\n })\r\n return plan.join(\" \")\r\n }\r\n \r\n"
                },
                {
                    "date": 1741085622474,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -128,8 +128,9 @@\n   \"6month\":180,\r\n   \"1year\":365\r\n }\r\n \r\n+\r\n export const generateExpirationDate = ({month}:{month:string}) => {\r\n const plan = Object.entries(plans).filter(([key,value]) => {\r\n   if(key === month) return value\r\n })\r\n"
                },
                {
                    "date": 1741085654454,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -131,9 +131,9 @@\n \r\n \r\n export const generateExpirationDate = ({month}:{month:string}) => {\r\n const plan = Object.entries(plans).filter(([key,value]) => {\r\n-  if(key === month) return value\r\n+  plans\r\n })\r\n return plan.join(\" \")\r\n }\r\n \r\n"
                },
                {
                    "date": 1741085670188,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -131,9 +131,9 @@\n \r\n \r\n export const generateExpirationDate = ({month}:{month:string}) => {\r\n const plan = Object.entries(plans).filter(([key,value]) => {\r\n-  plans\r\n+  plans[month as ]\r\n })\r\n return plan.join(\" \")\r\n }\r\n \r\n"
                },
                {
                    "date": 1741085680661,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -131,9 +131,9 @@\n \r\n \r\n export const generateExpirationDate = ({month}:{month:string}) => {\r\n const plan = Object.entries(plans).filter(([key,value]) => {\r\n-  plans[month as ]\r\n+  plans[month as keyof keyob]\r\n })\r\n return plan.join(\" \")\r\n }\r\n \r\n"
                },
                {
                    "date": 1741085686486,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -131,9 +131,9 @@\n \r\n \r\n export const generateExpirationDate = ({month}:{month:string}) => {\r\n const plan = Object.entries(plans).filter(([key,value]) => {\r\n-  plans[month as keyof keyob]\r\n+  plans[month as keyof any]\r\n })\r\n return plan.join(\" \")\r\n }\r\n \r\n"
                },
                {
                    "date": 1741085695308,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -131,9 +131,9 @@\n \r\n \r\n export const generateExpirationDate = ({month}:{month:string}) => {\r\n const plan = Object.entries(plans).filter(([key,value]) => {\r\n-  plans[month as keyof any]\r\n+  plans[month as  any]\r\n })\r\n return plan.join(\" \")\r\n }\r\n \r\n"
                },
                {
                    "date": 1741085705490,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -131,9 +131,9 @@\n \r\n \r\n export const generateExpirationDate = ({month}:{month:string}) => {\r\n const plan = Object.entries(plans).filter(([key,value]) => {\r\n-  plans[month as  any]\r\n+  plans[month]\r\n })\r\n return plan.join(\" \")\r\n }\r\n \r\n"
                },
                {
                    "date": 1741085714512,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -131,9 +131,9 @@\n \r\n \r\n export const generateExpirationDate = ({month}:{month:string}) => {\r\n const plan = Object.entries(plans).filter(([key,value]) => {\r\n-  plans[month]\r\n+  plans.month\r\n })\r\n return plan.join(\" \")\r\n }\r\n \r\n"
                },
                {
                    "date": 1741085724071,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -131,9 +131,9 @@\n \r\n \r\n export const generateExpirationDate = ({month}:{month:string}) => {\r\n const plan = Object.entries(plans).filter(([key,value]) => {\r\n-  plans.month\r\n+  plans[]\r\n })\r\n return plan.join(\" \")\r\n }\r\n \r\n"
                },
                {
                    "date": 1741085729582,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -131,9 +131,9 @@\n \r\n \r\n export const generateExpirationDate = ({month}:{month:string}) => {\r\n const plan = Object.entries(plans).filter(([key,value]) => {\r\n-  plans[]\r\n+  plans[`${month}`]\r\n })\r\n return plan.join(\" \")\r\n }\r\n \r\n"
                },
                {
                    "date": 1741085762780,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -131,9 +131,9 @@\n \r\n \r\n export const generateExpirationDate = ({month}:{month:string}) => {\r\n const plan = Object.entries(plans).filter(([key,value]) => {\r\n-  plans[`${month}`]\r\n+  plans`]\r\n })\r\n return plan.join(\" \")\r\n }\r\n \r\n"
                },
                {
                    "date": 1741085768336,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -131,9 +131,9 @@\n \r\n \r\n export const generateExpirationDate = ({month}:{month:string}) => {\r\n const plan = Object.entries(plans).filter(([key,value]) => {\r\n-  plans`]\r\n+  plans[\"month\"]\r\n })\r\n return plan.join(\" \")\r\n }\r\n \r\n"
                },
                {
                    "date": 1741085781718,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -131,9 +131,9 @@\n \r\n \r\n export const generateExpirationDate = ({month}:{month:string}) => {\r\n const plan = Object.entries(plans).filter(([key,value]) => {\r\n-  plans[\"month\"]\r\n+  plans[month]\r\n })\r\n return plan.join(\" \")\r\n }\r\n \r\n"
                },
                {
                    "date": 1741085799169,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -131,9 +131,9 @@\n \r\n \r\n export const generateExpirationDate = ({month}:{month:string}) => {\r\n const plan = Object.entries(plans).filter(([key,value]) => {\r\n-  plans[month]\r\n+ return plans[month]\r\n })\r\n return plan.join(\" \")\r\n }\r\n \r\n"
                },
                {
                    "date": 1741085816005,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -131,9 +131,9 @@\n \r\n \r\n export const generateExpirationDate = ({month}:{month:string}) => {\r\n const plan = Object.entries(plans).filter(([key,value]) => {\r\n- return plans[month]\r\n+ return \r\n })\r\n return plan.join(\" \")\r\n }\r\n \r\n"
                },
                {
                    "date": 1741085827219,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -131,9 +131,9 @@\n \r\n \r\n export const generateExpirationDate = ({month}:{month:string}) => {\r\n const plan = Object.entries(plans).filter(([key,value]) => {\r\n- return \r\n+ return value \r\n })\r\n return plan.join(\" \")\r\n }\r\n \r\n"
                },
                {
                    "date": 1741085833363,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -131,9 +131,9 @@\n \r\n \r\n export const generateExpirationDate = ({month}:{month:string}) => {\r\n const plan = Object.entries(plans).filter(([key,value]) => {\r\n- return value \r\n+ return value && key === month\r\n })\r\n return plan.join(\" \")\r\n }\r\n \r\n"
                },
                {
                    "date": 1741085864699,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -131,9 +131,9 @@\n \r\n \r\n export const generateExpirationDate = ({month}:{month:string}) => {\r\n const plan = Object.entries(plans).filter(([key,value]) => {\r\n- return value && key === month\r\n+ return value\r\n })\r\n return plan.join(\" \")\r\n }\r\n \r\n"
                },
                {
                    "date": 1741085879081,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -130,9 +130,9 @@\n }\r\n \r\n \r\n export const generateExpirationDate = ({month}:{month:string}) => {\r\n-const plan = Object.entries(plans).filter(([key,value]) => {\r\n+const plan = Object.entries(plans).map(([key,value]) => {\r\n  return value\r\n })\r\n return plan.join(\" \")\r\n }\r\n"
                },
                {
                    "date": 1741085894492,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -130,9 +130,9 @@\n }\r\n \r\n \r\n export const generateExpirationDate = ({month}:{month:string}) => {\r\n-const plan = Object.entries(plans).fil(([key,value]) => {\r\n+const plan = Object.entries(plans).filter(([key,value]) => {\r\n  return value\r\n })\r\n return plan.join(\" \")\r\n }\r\n"
                },
                {
                    "date": 1741086112335,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -132,9 +132,9 @@\n \r\n export const generateExpirationDate = ({month}:{month:string}) => {\r\n const plan = Object.entries(plans).filter(([key,value]) => {\r\n  return value && key === month\r\n-}).filter((ele) => ele && ele === num)\r\n+}).filter((ele) => ele && ele === Number)\r\n return plan\r\n }\r\n \r\n \r\n"
                }
            ],
            "date": 1741040103027,
            "name": "Commit-0",
            "content": "import crypto from \"crypto\";\r\nimport { NotificationModel } from \"../models/notifications.model\";\r\nimport { MedicalStuffRegex } from \"./constants\";\r\nimport { UserDocument } from \"../models/user.model.js\";\r\n\r\ninterface Notification {\r\n  type: string;\r\n  description: string;\r\n  title: string;\r\n  assignedTo: string;\r\n  eventId?: string;\r\n}\r\n\r\n// Function to get system notifications based on event type\r\nexport const systemNotifications = (\r\n  title: \"newUserHasJoined\" | \"emailVerification\",\r\n  user: UserDocument,\r\n  newUser: UserDocument\r\n): Notification => {\r\n  const systemNotification: Record<string, Notification> = {\r\n    newUserHasJoined: {\r\n      type: \"New Member\",\r\n      description: `New Member (${newUser.name}) Has Joined Our Community`,\r\n      title: \"System Administration\",\r\n      assignedTo: \"AdminOnly\",\r\n    },\r\n    emailVerification: {\r\n      type: \"Email Verification\",\r\n      description: \"Please Verify Your Email\",\r\n      title: \"System Administration\",\r\n      assignedTo: \"All\",\r\n      eventId: user._id as string,\r\n    },\r\n  };\r\n\r\n  if (!systemNotification[title]) {\r\n    throw new Error(`Invalid notification type: ${title}`);\r\n  }\r\n\r\n  return systemNotification[title];\r\n};\r\n\r\nexport const generateRandomToken = (): string => {\r\n  return crypto.randomBytes(32).toString(\"hex\");\r\n};\r\n\r\nexport const getUserNotifications = async (user: UserDocument) => {\r\n  let notifications: Notification[] = [];\r\n\r\n  if (user.role === \"Admin\") {\r\n    notifications = await NotificationModel.find({\r\n      createdAt: { $gt: user.createdAt },\r\n      $or: [\r\n        { assignedTo: \"All\", eventId: user._id },\r\n        { assignedTo: \"AdminOnly\", user: { $ne: user._id } },\r\n        { assignedTo: \"AdminsFromAll\" },\r\n      ],\r\n    });\r\n  } else if (user.role === \"Resident Doctor\") {\r\n    notifications = await NotificationModel.find({\r\n      createdAt: { $gt: user.createdAt },\r\n      $or: [{ assignedTo: \"All\", eventId: user._id }],\r\n    });\r\n  }\r\n\r\n  return notifications;\r\n};\r\n\r\nexport const assignedNotifications = (user: UserDocument): string => {\r\n  return user.role === \"Admin\" ? \"AdminOnly\" : \"AdminsFromAll\";\r\n};\r\n\r\ninterface codeProps {\r\n  numbers: string[];\r\n  fiveNumbers: number[];\r\n  characters: string[];\r\n}\r\n\r\nexport const generateCode = ({\r\n  numbers,\r\n  fiveNumbers,\r\n  characters,\r\n}: codeProps) => {\r\n  let code;\r\n  const firstLetter = \"B\";\r\n\r\n  const lastFiveNumbers = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9];\r\n\r\n  code = firstLetter + numbers[Math.floor(Math.random() * numbers.length)];\r\n\r\n  code += fiveNumbers[Math.floor(Math.random() * fiveNumbers.length)];\r\n\r\n  code += characters[Math.floor(Math.random() * characters.length)];\r\n\r\n  for (let i = 5; i < lastFiveNumbers.length; i++) {\r\n    code += lastFiveNumbers[Math.floor(Math.random() * lastFiveNumbers.length)];\r\n  }\r\n  return code;\r\n};\r\n\r\nexport interface role {\r\n  role:\r\n    | \"Admin\"\r\n    | \"Senior Consultant\"\r\n    | \"Resident Doctor\"\r\n    | \"Intern Doctor\"\r\n    | \"Head Secretary\"\r\n    | \"Charge Secretary\"\r\n    | \"Head Nurse\"\r\n    | \"Charge Nurse\";\r\n}\r\n\r\nexport const signRole = (code: string): string => {\r\n  let role = \"\";\r\n  MedicalStuffRegex.map((prefix) => {\r\n    if (prefix.regex.test(code)) {\r\n      role = prefix.role;\r\n    }\r\n  });\r\n\r\n  return role;\r\n};\r\n"
        }
    ]
}