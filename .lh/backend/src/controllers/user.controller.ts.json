{
    "sourceFile": "backend/src/controllers/user.controller.ts",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 79,
            "patches": [
                {
                    "date": 1740834236981,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1740834251283,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -107,15 +107,15 @@\n   req: Request<AddAdditionalInterface[\"params\"], {}>,\r\n   res: Response\r\n ) => {\r\n   try {\r\n-    const exi = await findUser({ _id: req.params.id });\r\n+    const existingUser = await findUser({ _id: req.params.id });\r\n \r\n-    if (!user) {\r\n+    if (!existingUser) {\r\n       res.status(404).json({ message: \"user doesn't exist\" });\r\n     }\r\n \r\n-    res.status(200).json({ user });\r\n+    res.status(200).json({ existingUser });\r\n   } catch (error: any) {\r\n     res.status(500).json({ message: error.message });\r\n   }\r\n };\r\n"
                },
                {
                    "date": 1740881270438,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -149,4 +149,9 @@\n   } catch (error: any) {\r\n     res.status(500).json({ message: error.message });\r\n   }\r\n };\r\n+\r\n+\r\n+\r\n+\r\n+export const \n\\ No newline at end of file\n"
                },
                {
                    "date": 1740881280353,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -153,5 +153,5 @@\n \r\n \r\n \r\n \r\n-export const \n\\ No newline at end of file\n+export const ChangeUserInformationHandler = \n\\ No newline at end of file\n"
                },
                {
                    "date": 1740881288785,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -153,5 +153,7 @@\n \r\n \r\n \r\n \r\n-export const ChangeUserInformationHandler = \n\\ No newline at end of file\n+export const ChangeUserInformationHandler = async () => {\r\n+  \r\n+}\n\\ No newline at end of file\n"
                },
                {
                    "date": 1740881301844,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -153,7 +153,11 @@\n \r\n \r\n \r\n \r\n-export const ChangeUserInformationHandler = async () => {\r\n-  \r\n+export const ChangeUserInformationHandler = async (req: Request, res: Response) => {\r\n+  try {\r\n+    \r\n+  } catch (error) {\r\n+    \r\n+  }\r\n }\n\\ No newline at end of file\n"
                },
                {
                    "date": 1740881309442,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -153,9 +153,9 @@\n \r\n \r\n \r\n \r\n-export const ChangeUserInformationHandler = async (req: Request, res: Response) => {\r\n+export const ChangeUserInformationHandler = async (req: Request<C>, res: Response) => {\r\n   try {\r\n     \r\n   } catch (error) {\r\n     \r\n"
                },
                {
                    "date": 1740881315243,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -153,9 +153,9 @@\n \r\n \r\n \r\n \r\n-export const ChangeUserInformationHandler = async (req: Request<C>, res: Response) => {\r\n+export const ChangeUserInformationHandler = async (req: Request<ChangeUserInterface[]>, res: Response) => {\r\n   try {\r\n     \r\n   } catch (error) {\r\n     \r\n"
                },
                {
                    "date": 1740881324412,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,7 +1,8 @@\n import { NextFunction, Request, Response } from \"express\";\r\n import {\r\n   AddAdditionalInterface,\r\n+  ChangeUserInterface,\r\n   CreateUserInterface,\r\n } from \"../schemas/user.schema\";\r\n import { uploadImageToFirebase } from \"../utils/getPresignedUrl\";\r\n import {\r\n@@ -153,9 +154,9 @@\n \r\n \r\n \r\n \r\n-export const ChangeUserInformationHandler = async (req: Request<ChangeUserInterface[]>, res: Response) => {\r\n+export const ChangeUserInformationHandler = async (req: Request<ChangeUserInterface['params'],>, res: Response) => {\r\n   try {\r\n     \r\n   } catch (error) {\r\n     \r\n"
                },
                {
                    "date": 1740881331253,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -154,9 +154,9 @@\n \r\n \r\n \r\n \r\n-export const ChangeUserInformationHandler = async (req: Request<ChangeUserInterface['params'],>, res: Response) => {\r\n+export const ChangeUserInformationHandler = async (req: Request<ChangeUserInterface['params'],{},ChangeUserInterface[]>, res: Response) => {\r\n   try {\r\n     \r\n   } catch (error) {\r\n     \r\n"
                },
                {
                    "date": 1740881337267,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -135,11 +135,11 @@\n         $nin: [\r\n           \"Charge Nurse\",\r\n           \"Head Nurse\",\r\n           \"Head Secretary\",\r\n-          \"Charge Secretary\"\r\n-        ]\r\n-      }\r\n+          \"Charge Secretary\",\r\n+        ],\r\n+      },\r\n     });\r\n \r\n     if (users.length < 1) {\r\n       res.status(404).json({ message: \"No Doctors\" });\r\n@@ -151,14 +151,11 @@\n     res.status(500).json({ message: error.message });\r\n   }\r\n };\r\n \r\n-\r\n-\r\n-\r\n-export const ChangeUserInformationHandler = async (req: Request<ChangeUserInterface['params'],{},ChangeUserInterface[]>, res: Response) => {\r\n+export const ChangeUserInformationHandler = async (\r\n+  req: Request<ChangeUserInterface[\"params\"], {}, ChangeUserInterface[\"body\"]>,\r\n+  res: Response\r\n+) => {\r\n   try {\r\n-    \r\n\\ No newline at end of file\n-  } catch (error) {\r\n-    \r\n-  }\r\n-}\n+  } catch (error) {}\r\n+};\r\n"
                },
                {
                    "date": 1740881346933,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -156,6 +156,7 @@\n   req: Request<ChangeUserInterface[\"params\"], {}, ChangeUserInterface[\"body\"]>,\r\n   res: Response\r\n ) => {\r\n   try {\r\n+    const id = \r\n   } catch (error) {}\r\n };\r\n"
                },
                {
                    "date": 1740881352732,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -156,7 +156,9 @@\n   req: Request<ChangeUserInterface[\"params\"], {}, ChangeUserInterface[\"body\"]>,\r\n   res: Response\r\n ) => {\r\n   try {\r\n-    const id = \r\n+    const id = req.params.id\r\n+\r\n+    \r\n   } catch (error) {}\r\n };\r\n"
                },
                {
                    "date": 1740881363748,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -158,7 +158,7 @@\n ) => {\r\n   try {\r\n     const id = req.params.id\r\n \r\n-    \r\n+    const user = await findUser()\r\n   } catch (error) {}\r\n };\r\n"
                },
                {
                    "date": 1740881390473,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -158,7 +158,11 @@\n ) => {\r\n   try {\r\n     const id = req.params.id\r\n \r\n-    const user = await findUser()\r\n+    const user = await findUser({_id:id})\r\n+\r\n+    if(!user){\r\n+      res.status(404).json({message:\"user doesn't exist\"})\r\n+    }\r\n   } catch (error) {}\r\n };\r\n"
                },
                {
                    "date": 1740881409199,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -162,7 +162,10 @@\n     const user = await findUser({_id:id})\r\n \r\n     if(!user){\r\n       res.status(404).json({message:\"user doesn't exist\"})\r\n+      return\r\n     }\r\n+\r\n+    const update\r\n   } catch (error) {}\r\n };\r\n"
                },
                {
                    "date": 1740881420042,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -165,7 +165,7 @@\n       res.status(404).json({message:\"user doesn't exist\"})\r\n       return\r\n     }\r\n \r\n-    const update\r\n+    const updatedUser = await updateUser({})\r\n   } catch (error) {}\r\n };\r\n"
                },
                {
                    "date": 1740881425490,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -165,7 +165,7 @@\n       res.status(404).json({message:\"user doesn't exist\"})\r\n       return\r\n     }\r\n \r\n-    const updatedUser = await updateUser({})\r\n+    const updatedUser = await updateUser({_id:id})\r\n   } catch (error) {}\r\n };\r\n"
                },
                {
                    "date": 1740881431099,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -165,7 +165,7 @@\n       res.status(404).json({message:\"user doesn't exist\"})\r\n       return\r\n     }\r\n \r\n-    const updatedUser = await updateUser({_id:id})\r\n+    const updatedUser = await updateUser({_id:id},)\r\n   } catch (error) {}\r\n };\r\n"
                },
                {
                    "date": 1740881442088,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -165,7 +165,7 @@\n       res.status(404).json({message:\"user doesn't exist\"})\r\n       return\r\n     }\r\n \r\n-    const updatedUser = await updateUser({_id:id},)\r\n+    const updatedUser = await updateUser({_id:id,})\r\n   } catch (error) {}\r\n };\r\n"
                },
                {
                    "date": 1740881448750,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -165,7 +165,7 @@\n       res.status(404).json({message:\"user doesn't exist\"})\r\n       return\r\n     }\r\n \r\n-    const updatedUser = await updateUser({_id:id,})\r\n+    const updatedUser = await updateUser({_id:id,...req})\r\n   } catch (error) {}\r\n };\r\n"
                },
                {
                    "date": 1740881468333,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -165,7 +165,7 @@\n       res.status(404).json({message:\"user doesn't exist\"})\r\n       return\r\n     }\r\n \r\n-    const updatedUser = await updateUser({_id:id,...req})\r\n+    const updatedUser = await updateUser({_id:id},{})\r\n   } catch (error) {}\r\n };\r\n"
                },
                {
                    "date": 1740881475869,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -165,7 +165,7 @@\n       res.status(404).json({message:\"user doesn't exist\"})\r\n       return\r\n     }\r\n \r\n-    const updatedUser = await updateUser({_id:id},{})\r\n+    const updatedUser = await updateUser({_id:id},{...req.body},)\r\n   } catch (error) {}\r\n };\r\n"
                },
                {
                    "date": 1740881482220,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -165,7 +165,7 @@\n       res.status(404).json({message:\"user doesn't exist\"})\r\n       return\r\n     }\r\n \r\n-    const updatedUser = await updateUser({_id:id},{...req.body},)\r\n+    const updatedUser = await updateUser({_id:id},{...req.body},{new})\r\n   } catch (error) {}\r\n };\r\n"
                },
                {
                    "date": 1740881488984,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -165,7 +165,7 @@\n       res.status(404).json({message:\"user doesn't exist\"})\r\n       return\r\n     }\r\n \r\n-    const updatedUser = await updateUser({_id:id},{...req.body},{new})\r\n+    const updatedUser = await updateUser({_id:id},{...req.body},{new:true,runva})\r\n   } catch (error) {}\r\n };\r\n"
                },
                {
                    "date": 1740881497368,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -156,16 +156,22 @@\n   req: Request<ChangeUserInterface[\"params\"], {}, ChangeUserInterface[\"body\"]>,\r\n   res: Response\r\n ) => {\r\n   try {\r\n-    const id = req.params.id\r\n+    const id = req.params.id;\r\n \r\n-    const user = await findUser({_id:id})\r\n+    const user = await findUser({ _id: id });\r\n \r\n-    if(!user){\r\n-      res.status(404).json({message:\"user doesn't exist\"})\r\n-      return\r\n+    if (!user) {\r\n+      res.status(404).json({ message: \"user doesn't exist\" });\r\n+      return;\r\n     }\r\n \r\n-    const updatedUser = await updateUser({_id:id},{...req.body},{new:true,runva})\r\n+    const updatedUser = await updateUser(\r\n+      { _id: id },\r\n+      { ...req.body },\r\n+      { new: true, runValidators: true }\r\n+    );\r\n+\r\n+    \r\n   } catch (error) {}\r\n };\r\n"
                },
                {
                    "date": 1740881503160,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -171,7 +171,7 @@\n       { ...req.body },\r\n       { new: true, runValidators: true }\r\n     );\r\n \r\n-    \r\n+    res.status(200)\r\n   } catch (error) {}\r\n };\r\n"
                },
                {
                    "date": 1740881511516,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -171,7 +171,7 @@\n       { ...req.body },\r\n       { new: true, runValidators: true }\r\n     );\r\n \r\n-    res.status(200)\r\n+    res.status(200).json({message:\"\"})\r\n   } catch (error) {}\r\n };\r\n"
                },
                {
                    "date": 1740881524232,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -171,7 +171,7 @@\n       { ...req.body },\r\n       { new: true, runValidators: true }\r\n     );\r\n \r\n-    res.status(200).json({message:\"\"})\r\n+    res.status(200).json({message:\"information changed successfully\"})\r\n   } catch (error) {}\r\n };\r\n"
                },
                {
                    "date": 1740881530851,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -171,7 +171,7 @@\n       { ...req.body },\r\n       { new: true, runValidators: true }\r\n     );\r\n \r\n-    res.status(200).json({message:\"information changed successfully\"})\r\n+    res.status(200).json({message:\"information changed successfully\",upda})\r\n   } catch (error) {}\r\n };\r\n"
                },
                {
                    "date": 1740881548507,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -171,7 +171,9 @@\n       { ...req.body },\r\n       { new: true, runValidators: true }\r\n     );\r\n \r\n-    res.status(200).json({message:\"information changed successfully\",upda})\r\n-  } catch (error) {}\r\n+    res.status(200).json({message:\"information changed successfully\",updateUser})\r\n+  } catch (error) {\r\n+    res.status(500).json({message:error.message})\r\n+  }\r\n };\r\n"
                },
                {
                    "date": 1740881721334,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -165,15 +165,16 @@\n       res.status(404).json({ message: \"user doesn't exist\" });\r\n       return;\r\n     }\r\n \r\n+    \r\n     const updatedUser = await updateUser(\r\n       { _id: id },\r\n       { ...req.body },\r\n       { new: true, runValidators: true }\r\n     );\r\n \r\n     res.status(200).json({message:\"information changed successfully\",updateUser})\r\n-  } catch (error) {\r\n+  } catch (error:any) {\r\n     res.status(500).json({message:error.message})\r\n   }\r\n };\r\n"
                },
                {
                    "date": 1740881728500,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -165,15 +165,16 @@\n       res.status(404).json({ message: \"user doesn't exist\" });\r\n       return;\r\n     }\r\n \r\n-    \r\n+\r\n     const updatedUser = await updateUser(\r\n       { _id: id },\r\n       { ...req.body },\r\n       { new: true, runValidators: true }\r\n     );\r\n \r\n+    \r\n     res.status(200).json({message:\"information changed successfully\",updateUser})\r\n   } catch (error:any) {\r\n     res.status(500).json({message:error.message})\r\n   }\r\n"
                },
                {
                    "date": 1740881733677,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -172,9 +172,9 @@\n       { ...req.body },\r\n       { new: true, runValidators: true }\r\n     );\r\n \r\n-    \r\n+    if\r\n     res.status(200).json({message:\"information changed successfully\",updateUser})\r\n   } catch (error:any) {\r\n     res.status(500).json({message:error.message})\r\n   }\r\n"
                },
                {
                    "date": 1740881744177,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -172,9 +172,11 @@\n       { ...req.body },\r\n       { new: true, runValidators: true }\r\n     );\r\n \r\n-    if\r\n+    if(up){\r\n+\r\n+    }\r\n     res.status(200).json({message:\"information changed successfully\",updateUser})\r\n   } catch (error:any) {\r\n     res.status(500).json({message:error.message})\r\n   }\r\n"
                },
                {
                    "date": 1740881753870,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -172,9 +172,9 @@\n       { ...req.body },\r\n       { new: true, runValidators: true }\r\n     );\r\n \r\n-    if(up){\r\n+    if(updateUser. === user){\r\n \r\n     }\r\n     res.status(200).json({message:\"information changed successfully\",updateUser})\r\n   } catch (error:any) {\r\n"
                },
                {
                    "date": 1740881760152,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -172,9 +172,9 @@\n       { ...req.body },\r\n       { new: true, runValidators: true }\r\n     );\r\n \r\n-    if(updateUser. === user){\r\n+    if(updateUser.name === user.na){\r\n \r\n     }\r\n     res.status(200).json({message:\"information changed successfully\",updateUser})\r\n   } catch (error:any) {\r\n"
                },
                {
                    "date": 1740881784939,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -172,11 +172,9 @@\n       { ...req.body },\r\n       { new: true, runValidators: true }\r\n     );\r\n \r\n-    if(updateUser.name === user.na){\r\n-\r\n-    }\r\n+    \r\n     res.status(200).json({message:\"information changed successfully\",updateUser})\r\n   } catch (error:any) {\r\n     res.status(500).json({message:error.message})\r\n   }\r\n"
                },
                {
                    "date": 1740881804009,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -157,8 +157,10 @@\n   res: Response\r\n ) => {\r\n   try {\r\n     const id = req.params.id;\r\n+    const name = req.body.name\r\n+    const occupation = req.body.occupation\r\n \r\n     const user = await findUser({ _id: id });\r\n \r\n     if (!user) {\r\n"
                },
                {
                    "date": 1740881823186,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -175,8 +175,9 @@\n       { new: true, runValidators: true }\r\n     );\r\n \r\n     \r\n+    \r\n     res.status(200).json({message:\"information changed successfully\",updateUser})\r\n   } catch (error:any) {\r\n     res.status(500).json({message:error.message})\r\n   }\r\n"
                },
                {
                    "date": 1740881832422,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -167,17 +167,18 @@\n       res.status(404).json({ message: \"user doesn't exist\" });\r\n       return;\r\n     }\r\n \r\n+    if()\r\n \r\n     const updatedUser = await updateUser(\r\n       { _id: id },\r\n       { ...req.body },\r\n       { new: true, runValidators: true }\r\n     );\r\n \r\n+\r\n     \r\n-    \r\n     res.status(200).json({message:\"information changed successfully\",updateUser})\r\n   } catch (error:any) {\r\n     res.status(500).json({message:error.message})\r\n   }\r\n"
                },
                {
                    "date": 1740881840464,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -167,9 +167,9 @@\n       res.status(404).json({ message: \"user doesn't exist\" });\r\n       return;\r\n     }\r\n \r\n-    if()\r\n+    if(name === user.na)\r\n \r\n     const updatedUser = await updateUser(\r\n       { _id: id },\r\n       { ...req.body },\r\n"
                },
                {
                    "date": 1740881853261,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -167,9 +167,9 @@\n       res.status(404).json({ message: \"user doesn't exist\" });\r\n       return;\r\n     }\r\n \r\n-    if(name === user.na)\r\n+    \r\n \r\n     const updatedUser = await updateUser(\r\n       { _id: id },\r\n       { ...req.body },\r\n"
                },
                {
                    "date": 1740881863127,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -157,10 +157,13 @@\n   res: Response\r\n ) => {\r\n   try {\r\n     const id = req.params.id;\r\n-    const name = req.body.name\r\n-    const occupation = req.body.occupation\r\n+   \r\n+    const data = {\r\n+      const name = req.body.name\r\n+      const occupation = req.body.occupation\r\n+    }\r\n \r\n     const user = await findUser({ _id: id });\r\n \r\n     if (!user) {\r\n"
                },
                {
                    "date": 1740881870411,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -159,10 +159,10 @@\n   try {\r\n     const id = req.params.id;\r\n    \r\n     const data = {\r\n-      const name = req.body.name\r\n-      const occupation = req.body.occupation\r\n+       name : req.body.name\r\n+       occupation : req.body.occupation\r\n     }\r\n \r\n     const user = await findUser({ _id: id });\r\n \r\n"
                },
                {
                    "date": 1740881877531,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -170,10 +170,12 @@\n       res.status(404).json({ message: \"user doesn't exist\" });\r\n       return;\r\n     }\r\n \r\n-    \r\n+    for(const ){\r\n \r\n+    }\r\n+\r\n     const updatedUser = await updateUser(\r\n       { _id: id },\r\n       { ...req.body },\r\n       { new: true, runValidators: true }\r\n"
                },
                {
                    "date": 1740881883165,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -170,9 +170,9 @@\n       res.status(404).json({ message: \"user doesn't exist\" });\r\n       return;\r\n     }\r\n \r\n-    for(const ){\r\n+    for(const [key,value] of ){\r\n \r\n     }\r\n \r\n     const updatedUser = await updateUser(\r\n"
                },
                {
                    "date": 1740881890160,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -170,9 +170,9 @@\n       res.status(404).json({ message: \"user doesn't exist\" });\r\n       return;\r\n     }\r\n \r\n-    for(const [key,value] of ){\r\n+    for(const [key,value] of Object.en){\r\n \r\n     }\r\n \r\n     const updatedUser = await updateUser(\r\n"
                },
                {
                    "date": 1740881897426,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -170,10 +170,10 @@\n       res.status(404).json({ message: \"user doesn't exist\" });\r\n       return;\r\n     }\r\n \r\n-    for(const [key,value] of Object.en){\r\n-\r\n+    for(const [key,value] of Object.entries(data)){\r\n+      \r\n     }\r\n \r\n     const updatedUser = await updateUser(\r\n       { _id: id },\r\n"
                },
                {
                    "date": 1740881902863,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -171,9 +171,9 @@\n       return;\r\n     }\r\n \r\n     for(const [key,value] of Object.entries(data)){\r\n-      \r\n+      if()\r\n     }\r\n \r\n     const updatedUser = await updateUser(\r\n       { _id: id },\r\n"
                },
                {
                    "date": 1740881908400,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -159,10 +159,10 @@\n   try {\r\n     const id = req.params.id;\r\n    \r\n     const data = {\r\n-       name : req.body.name\r\n-       occupation : req.body.occupation\r\n+       name: req.body.name,\r\n+       occupation: req.body.occupation\r\n     }\r\n \r\n     const user = await findUser({ _id: id });\r\n \r\n"
                },
                {
                    "date": 1740881916451,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -171,9 +171,11 @@\n       return;\r\n     }\r\n \r\n     for(const [key,value] of Object.entries(data)){\r\n-      if()\r\n+      if(key){\r\n+\r\n+      }\r\n     }\r\n \r\n     const updatedUser = await updateUser(\r\n       { _id: id },\r\n"
                },
                {
                    "date": 1740881924968,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -171,9 +171,9 @@\n       return;\r\n     }\r\n \r\n     for(const [key,value] of Object.entries(data)){\r\n-      if(key){\r\n+      if(){\r\n \r\n       }\r\n     }\r\n \r\n"
                },
                {
                    "date": 1740881933552,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -171,9 +171,9 @@\n       return;\r\n     }\r\n \r\n     for(const [key,value] of Object.entries(data)){\r\n-      if(){\r\n+      if(value === user[key]){\r\n \r\n       }\r\n     }\r\n \r\n"
                },
                {
                    "date": 1740881991335,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -171,9 +171,9 @@\n       return;\r\n     }\r\n \r\n     for(const [key,value] of Object.entries(data)){\r\n-      if(value === user[key]){\r\n+      if(value === us){\r\n \r\n       }\r\n     }\r\n \r\n"
                },
                {
                    "date": 1740882005883,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -171,9 +171,9 @@\n       return;\r\n     }\r\n \r\n     for(const [key,value] of Object.entries(data)){\r\n-      if(value === us){\r\n+      if(){\r\n \r\n       }\r\n     }\r\n \r\n"
                },
                {
                    "date": 1740882027460,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -171,11 +171,9 @@\n       return;\r\n     }\r\n \r\n     for(const [key,value] of Object.entries(data)){\r\n-      if(){\r\n-\r\n-      }\r\n+      \r\n     }\r\n \r\n     const updatedUser = await updateUser(\r\n       { _id: id },\r\n"
                },
                {
                    "date": 1740882034241,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -171,9 +171,9 @@\n       return;\r\n     }\r\n \r\n     for(const [key,value] of Object.entries(data)){\r\n-      \r\n+      user.ma\r\n     }\r\n \r\n     const updatedUser = await updateUser(\r\n       { _id: id },\r\n"
                },
                {
                    "date": 1740882192215,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -171,9 +171,9 @@\n       return;\r\n     }\r\n \r\n     for(const [key,value] of Object.entries(data)){\r\n-      user.ma\r\n+      if()\r\n     }\r\n \r\n     const updatedUser = await updateUser(\r\n       { _id: id },\r\n"
                },
                {
                    "date": 1740882203212,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -171,9 +171,11 @@\n       return;\r\n     }\r\n \r\n     for(const [key,value] of Object.entries(data)){\r\n-      if()\r\n+      if(user[key] !== value){\r\n+        res.\r\n+      }\r\n     }\r\n \r\n     const updatedUser = await updateUser(\r\n       { _id: id },\r\n"
                },
                {
                    "date": 1740882208996,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -172,9 +172,9 @@\n     }\r\n \r\n     for(const [key,value] of Object.entries(data)){\r\n       if(user[key] !== value){\r\n-        res.\r\n+        res.status(404).js\r\n       }\r\n     }\r\n \r\n     const updatedUser = await updateUser(\r\n"
                },
                {
                    "date": 1740882298445,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -169,15 +169,12 @@\n     if (!user) {\r\n       res.status(404).json({ message: \"user doesn't exist\" });\r\n       return;\r\n     }\r\n+    const isChanged = Object.entries(newData).some(([key, value]) => {\r\n+      return user[key as keyof typeof user] !== value;\r\n+    });\r\n \r\n-    for(const [key,value] of Object.entries(data)){\r\n-      if(user[key] !== value){\r\n-        res.status(404).js\r\n-      }\r\n-    }\r\n-\r\n     const updatedUser = await updateUser(\r\n       { _id: id },\r\n       { ...req.body },\r\n       { new: true, runValidators: true }\r\n"
                },
                {
                    "date": 1740882306565,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -169,9 +169,9 @@\n     if (!user) {\r\n       res.status(404).json({ message: \"user doesn't exist\" });\r\n       return;\r\n     }\r\n-    const isChanged = Object.entries(newData).some(([key, value]) => {\r\n+    const isChanged = Object.entries(data).some(([key, value]) => {\r\n       return user[key as keyof typeof user] !== value;\r\n     });\r\n \r\n     const updatedUser = await updateUser(\r\n"
                },
                {
                    "date": 1740882316918,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -173,8 +173,9 @@\n     const isChanged = Object.entries(data).some(([key, value]) => {\r\n       return user[key as keyof typeof user] !== value;\r\n     });\r\n \r\n+    if(ischa)\r\n     const updatedUser = await updateUser(\r\n       { _id: id },\r\n       { ...req.body },\r\n       { new: true, runValidators: true }\r\n"
                },
                {
                    "date": 1740882324487,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -173,9 +173,11 @@\n     const isChanged = Object.entries(data).some(([key, value]) => {\r\n       return user[key as keyof typeof user] !== value;\r\n     });\r\n \r\n-    if(ischa)\r\n+    if(!isChanged){\r\n+      res.sta\r\n+    }\r\n     const updatedUser = await updateUser(\r\n       { _id: id },\r\n       { ...req.body },\r\n       { new: true, runValidators: true }\r\n"
                },
                {
                    "date": 1740882329672,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -174,9 +174,9 @@\n       return user[key as keyof typeof user] !== value;\r\n     });\r\n \r\n     if(!isChanged){\r\n-      res.sta\r\n+      res.status()\r\n     }\r\n     const updatedUser = await updateUser(\r\n       { _id: id },\r\n       { ...req.body },\r\n"
                },
                {
                    "date": 1740882340181,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -174,9 +174,9 @@\n       return user[key as keyof typeof user] !== value;\r\n     });\r\n \r\n     if(!isChanged){\r\n-      res.status()\r\n+      res.status(400).json({message:\"\"})\r\n     }\r\n     const updatedUser = await updateUser(\r\n       { _id: id },\r\n       { ...req.body },\r\n"
                },
                {
                    "date": 1740882346948,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -174,9 +174,10 @@\n       return user[key as keyof typeof user] !== value;\r\n     });\r\n \r\n     if(!isChanged){\r\n-      res.status(400).json({message:\"\"})\r\n+      res.status(400).json({message:\"no changes\"})\r\n+      return\r\n     }\r\n     const updatedUser = await updateUser(\r\n       { _id: id },\r\n       { ...req.body },\r\n"
                },
                {
                    "date": 1740882395211,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -172,8 +172,9 @@\n     }\r\n     const isChanged = Object.entries(data).some(([key, value]) => {\r\n       return user[key as keyof typeof user] !== value;\r\n     });\r\n+    console.log(isChanged)\r\n \r\n     if(!isChanged){\r\n       res.status(400).json({message:\"no changes\"})\r\n       return\r\n"
                },
                {
                    "date": 1740882417608,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -172,9 +172,9 @@\n     }\r\n     const isChanged = Object.entries(data).some(([key, value]) => {\r\n       return user[key as keyof typeof user] !== value;\r\n     });\r\n-    console.log(isChanged)\r\n+    console.log(data)\r\n \r\n     if(!isChanged){\r\n       res.status(400).json({message:\"no changes\"})\r\n       return\r\n"
                },
                {
                    "date": 1740882456561,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -186,9 +186,9 @@\n     );\r\n \r\n \r\n     \r\n-    res.status(200).json({message:\"information changed successfully\",updateUser})\r\n+    res.status(200).json({message:\"information changed successfully\",updatedUser})\r\n   } catch (error:any) {\r\n     res.status(500).json({message:error.message})\r\n   }\r\n };\r\n"
                },
                {
                    "date": 1740882485917,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -174,9 +174,9 @@\n       return user[key as keyof typeof user] !== value;\r\n     });\r\n     console.log(data)\r\n \r\n-    if(!isChanged){\r\n+    if(isChanged){\r\n       res.status(400).json({message:\"no changes\"})\r\n       return\r\n     }\r\n     const updatedUser = await updateUser(\r\n"
                },
                {
                    "date": 1740882511660,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -169,17 +169,9 @@\n     if (!user) {\r\n       res.status(404).json({ message: \"user doesn't exist\" });\r\n       return;\r\n     }\r\n-    const isChanged = Object.entries(data).some(([key, value]) => {\r\n-      return user[key as keyof typeof user] !== value;\r\n-    });\r\n-    console.log(data)\r\n \r\n-    if(isChanged){\r\n-      res.status(400).json({message:\"no changes\"})\r\n-      return\r\n-    }\r\n     const updatedUser = await updateUser(\r\n       { _id: id },\r\n       { ...req.body },\r\n       { new: true, runValidators: true }\r\n"
                },
                {
                    "date": 1740882536970,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -170,8 +170,9 @@\n       res.status(404).json({ message: \"user doesn't exist\" });\r\n       return;\r\n     }\r\n \r\n+    \r\n     const updatedUser = await updateUser(\r\n       { _id: id },\r\n       { ...req.body },\r\n       { new: true, runValidators: true }\r\n"
                },
                {
                    "date": 1740882542440,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -170,9 +170,9 @@\n       res.status(404).json({ message: \"user doesn't exist\" });\r\n       return;\r\n     }\r\n \r\n-    \r\n+    for()\r\n     const updatedUser = await updateUser(\r\n       { _id: id },\r\n       { ...req.body },\r\n       { new: true, runValidators: true }\r\n"
                },
                {
                    "date": 1740882558322,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -170,9 +170,11 @@\n       res.status(404).json({ message: \"user doesn't exist\" });\r\n       return;\r\n     }\r\n \r\n-    for()\r\n+    for(const [key,value] of Object.entries(data)){\r\n+\r\n+    }\r\n     const updatedUser = await updateUser(\r\n       { _id: id },\r\n       { ...req.body },\r\n       { new: true, runValidators: true }\r\n"
                },
                {
                    "date": 1740882564397,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -171,9 +171,11 @@\n       return;\r\n     }\r\n \r\n     for(const [key,value] of Object.entries(data)){\r\n-\r\n+      if(){\r\n+        \r\n+      }\r\n     }\r\n     const updatedUser = await updateUser(\r\n       { _id: id },\r\n       { ...req.body },\r\n"
                },
                {
                    "date": 1740882570254,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -171,10 +171,10 @@\n       return;\r\n     }\r\n \r\n     for(const [key,value] of Object.entries(data)){\r\n-      if(){\r\n-        \r\n+      if(value === ){\r\n+\r\n       }\r\n     }\r\n     const updatedUser = await updateUser(\r\n       { _id: id },\r\n"
                },
                {
                    "date": 1740882579696,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -171,9 +171,9 @@\n       return;\r\n     }\r\n \r\n     for(const [key,value] of Object.entries(data)){\r\n-      if(value === undefined || ){\r\n+      if(value === undefined || v){\r\n \r\n       }\r\n     }\r\n     const updatedUser = await updateUser(\r\n"
                },
                {
                    "date": 1740924688927,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,196 @@\n+import { NextFunction, Request, Response } from \"express\";\r\n+import {\r\n+  AddAdditionalInterface,\r\n+  ChangeUserInterface,\r\n+  CreateUserInterface,\r\n+} from \"../schemas/user.schema\";\r\n+import { uploadImageToFirebase } from \"../utils/getPresignedUrl\";\r\n+import {\r\n+  createUser,\r\n+  findUser,\r\n+  getAllUsers,\r\n+  updateUser,\r\n+} from \"../services/user.service\";\r\n+import { findCode } from \"../services/code.service\";\r\n+import { UserDocument } from \"../models/user.model\";\r\n+import { keyBy } from \"lodash\";\r\n+\r\n+export const createUserHandler = async (\r\n+  req: Request<{}, {}, CreateUserInterface[\"body\"]>,\r\n+  res: Response,\r\n+  next: NextFunction\r\n+) => {\r\n+  try {\r\n+    console.log(\"Request Body:\", req.body);\r\n+\r\n+    const email = req.body.email;\r\n+    const code = req.body.code;\r\n+\r\n+    // Check if the user already exists\r\n+    const existingUser = await findUser({ email });\r\n+\r\n+    if (existingUser) {\r\n+      res.status(403).json({ message: \"User already exists\" });\r\n+      return;\r\n+    }\r\n+\r\n+    // Check if the code has already been used\r\n+    const usedCode = await findUser({ code });\r\n+\r\n+    if (usedCode) {\r\n+      res.status(409).json({ message: \"This Code is Used\" });\r\n+      return;\r\n+    }\r\n+\r\n+    // Check if the code exists\r\n+    const preCode = await findCode({ code });\r\n+\r\n+    if (!preCode) {\r\n+      res.status(404).json({ message: \"Invalid Code Provided\" });\r\n+      return;\r\n+    }\r\n+\r\n+    preCode.used = true;\r\n+    await preCode.save();\r\n+\r\n+    // Create the user\r\n+    const user = await createUser({ ...req.body, role: preCode.role });\r\n+\r\n+    res.status(201).json({\r\n+      message: \"User registered successfully\",\r\n+      user,\r\n+    });\r\n+  } catch (error: any) {\r\n+    res.status(500).json({ message: error.message });\r\n+  }\r\n+};\r\n+\r\n+export const AddAdditionlHandler = async (\r\n+  req: Request<\r\n+    AddAdditionalInterface[\"params\"],\r\n+    {},\r\n+    AddAdditionalInterface[\"body\"]\r\n+  >,\r\n+  res: Response,\r\n+  next: NextFunction\r\n+) => {\r\n+  try {\r\n+    const id = req.params.id;\r\n+\r\n+    const existingUser = await findUser({ _id: id });\r\n+\r\n+    if (!existingUser) {\r\n+      res.status(404).json({ message: \"user doesn't exist\" });\r\n+      return;\r\n+    }\r\n+    const image = req.file as Express.Multer.File;\r\n+\r\n+    const profileImg = await uploadImageToFirebase({\r\n+      image,\r\n+      path: \"doctors\",\r\n+      userId: existingUser._id as string,\r\n+    });\r\n+\r\n+    const updatedUser = await updateUser(\r\n+      { _id: id },\r\n+      { ...req.body, profileImg: profileImg },\r\n+      { new: true, runValidators: true }\r\n+    );\r\n+\r\n+    res\r\n+      .status(203)\r\n+      .json({ message: \"information added successfully\", updatedUser });\r\n+  } catch (error: any) {\r\n+    res.status(500).json({ message: error.message });\r\n+  }\r\n+};\r\n+\r\n+export const getUser = async (\r\n+  req: Request<AddAdditionalInterface[\"params\"], {}>,\r\n+  res: Response\r\n+) => {\r\n+  try {\r\n+    const existingUser = await findUser({ _id: req.params.id });\r\n+\r\n+    if (!existingUser) {\r\n+      res.status(404).json({ message: \"user doesn't exist\" });\r\n+    }\r\n+\r\n+    res.status(200).json({ existingUser });\r\n+  } catch (error: any) {\r\n+    res.status(500).json({ message: error.message });\r\n+  }\r\n+};\r\n+\r\n+export const getAllUsersHandler = async (req: Request, res: Response) => {\r\n+  try {\r\n+    const user = res.locals.user as UserDocument;\r\n+\r\n+    if (!user) {\r\n+      res.status(403).json({ message: \"forbidden\" });\r\n+      return;\r\n+    }\r\n+    const users = await getAllUsers({\r\n+      _id: { $ne: user._id },\r\n+      role: {\r\n+        $nin: [\r\n+          \"Charge Nurse\",\r\n+          \"Head Nurse\",\r\n+          \"Head Secretary\",\r\n+          \"Charge Secretary\",\r\n+        ],\r\n+      },\r\n+    });\r\n+\r\n+    if (users.length < 1) {\r\n+      res.status(404).json({ message: \"No Doctors\" });\r\n+      return;\r\n+    }\r\n+\r\n+    res.status(200).json({ message: \"success\", users });\r\n+  } catch (error: any) {\r\n+    res.status(500).json({ message: error.message });\r\n+  }\r\n+};\r\n+\r\n+export const ChangeUserInformationHandler = async (\r\n+  req: Request<ChangeUserInterface[\"params\"], {}, ChangeUserInterface[\"body\"]>,\r\n+  res: Response\r\n+) => {\r\n+  try {\r\n+    const id = req.params.id;\r\n+   \r\n+    const data = {\r\n+       name: req.body.name,\r\n+       occupation: req.body.occupation\r\n+    }\r\n+\r\n+    const user = await findUser({ _id: id });\r\n+\r\n+\r\n+    \r\n+    if (!user) {\r\n+      res.status(404).json({ message: \"user doesn't exist\" });\r\n+      return;\r\n+    }\r\n+\r\n+   Object.entries(data).every(([key,value]) => {\r\n+    if(user[key as keyof typeof user] === value){\r\n+      res.status(200).json({message: \"No Changes\",state:true})\r\n+      return\r\n+    }\r\n+   })\r\n+\r\n+    const updatedUser = await updateUser(\r\n+      { _id: id },\r\n+      { ...req.body },\r\n+      { new: true, runValidators: true }\r\n+    );\r\n+\r\n+\r\n+    \r\n+    res.status(200).json({message:\"information changed successfully\",updatedUser})\r\n+  } catch (error:any) {\r\n+    res.status(500).json({message:error.message})\r\n+  }\r\n+};\r\n"
                }
            ],
            "date": 1740834236981,
            "name": "Commit-0",
            "content": "import { NextFunction, Request, Response } from \"express\";\r\nimport {\r\n  AddAdditionalInterface,\r\n  CreateUserInterface,\r\n} from \"../schemas/user.schema\";\r\nimport { uploadImageToFirebase } from \"../utils/getPresignedUrl\";\r\nimport {\r\n  createUser,\r\n  findUser,\r\n  getAllUsers,\r\n  updateUser,\r\n} from \"../services/user.service\";\r\nimport { findCode } from \"../services/code.service\";\r\nimport { UserDocument } from \"../models/user.model\";\r\n\r\nexport const createUserHandler = async (\r\n  req: Request<{}, {}, CreateUserInterface[\"body\"]>,\r\n  res: Response,\r\n  next: NextFunction\r\n) => {\r\n  try {\r\n    console.log(\"Request Body:\", req.body);\r\n\r\n    const email = req.body.email;\r\n    const code = req.body.code;\r\n\r\n    // Check if the user already exists\r\n    const existingUser = await findUser({ email });\r\n\r\n    if (existingUser) {\r\n      res.status(403).json({ message: \"User already exists\" });\r\n      return;\r\n    }\r\n\r\n    // Check if the code has already been used\r\n    const usedCode = await findUser({ code });\r\n\r\n    if (usedCode) {\r\n      res.status(409).json({ message: \"This Code is Used\" });\r\n      return;\r\n    }\r\n\r\n    // Check if the code exists\r\n    const preCode = await findCode({ code });\r\n\r\n    if (!preCode) {\r\n      res.status(404).json({ message: \"Invalid Code Provided\" });\r\n      return;\r\n    }\r\n\r\n    preCode.used = true;\r\n    await preCode.save();\r\n\r\n    // Create the user\r\n    const user = await createUser({ ...req.body, role: preCode.role });\r\n\r\n    res.status(201).json({\r\n      message: \"User registered successfully\",\r\n      user,\r\n    });\r\n  } catch (error: any) {\r\n    res.status(500).json({ message: error.message });\r\n  }\r\n};\r\n\r\nexport const AddAdditionlHandler = async (\r\n  req: Request<\r\n    AddAdditionalInterface[\"params\"],\r\n    {},\r\n    AddAdditionalInterface[\"body\"]\r\n  >,\r\n  res: Response,\r\n  next: NextFunction\r\n) => {\r\n  try {\r\n    const id = req.params.id;\r\n\r\n    const existingUser = await findUser({ _id: id });\r\n\r\n    if (!existingUser) {\r\n      res.status(404).json({ message: \"user doesn't exist\" });\r\n      return;\r\n    }\r\n    const image = req.file as Express.Multer.File;\r\n\r\n    const profileImg = await uploadImageToFirebase({\r\n      image,\r\n      path: \"doctors\",\r\n      userId: existingUser._id as string,\r\n    });\r\n\r\n    const updatedUser = await updateUser(\r\n      { _id: id },\r\n      { ...req.body, profileImg: profileImg },\r\n      { new: true, runValidators: true }\r\n    );\r\n\r\n    res\r\n      .status(203)\r\n      .json({ message: \"information added successfully\", updatedUser });\r\n  } catch (error: any) {\r\n    res.status(500).json({ message: error.message });\r\n  }\r\n};\r\n\r\nexport const getUser = async (\r\n  req: Request<AddAdditionalInterface[\"params\"], {}>,\r\n  res: Response\r\n) => {\r\n  try {\r\n    const exi = await findUser({ _id: req.params.id });\r\n\r\n    if (!user) {\r\n      res.status(404).json({ message: \"user doesn't exist\" });\r\n    }\r\n\r\n    res.status(200).json({ user });\r\n  } catch (error: any) {\r\n    res.status(500).json({ message: error.message });\r\n  }\r\n};\r\n\r\nexport const getAllUsersHandler = async (req: Request, res: Response) => {\r\n  try {\r\n    const user = res.locals.user as UserDocument;\r\n\r\n    if (!user) {\r\n      res.status(403).json({ message: \"forbidden\" });\r\n      return;\r\n    }\r\n    const users = await getAllUsers({\r\n      _id: { $ne: user._id },\r\n      role: {\r\n        $nin: [\r\n          \"Charge Nurse\",\r\n          \"Head Nurse\",\r\n          \"Head Secretary\",\r\n          \"Charge Secretary\"\r\n        ]\r\n      }\r\n    });\r\n\r\n    if (users.length < 1) {\r\n      res.status(404).json({ message: \"No Doctors\" });\r\n      return;\r\n    }\r\n\r\n    res.status(200).json({ message: \"success\", users });\r\n  } catch (error: any) {\r\n    res.status(500).json({ message: error.message });\r\n  }\r\n};\r\n"
        }
    ]
}