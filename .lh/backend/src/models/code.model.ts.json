{
    "sourceFile": "backend/src/models/code.model.ts",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 13,
            "patches": [
                {
                    "date": 1741085027300,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1741085035112,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,7 +1,9 @@\n import mongoose, { Document } from \"mongoose\";\r\n+import { UserDocument } from \"./user.model\";\r\n \r\n export interface CodeInput {\r\n+  user:UserDocument['']\r\n   code: string;\r\n   role:string;\r\n   used?: boolean;\r\n }\r\n"
                },
                {
                    "date": 1741085048197,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,9 +1,9 @@\n import mongoose, { Document } from \"mongoose\";\r\n import { UserDocument } from \"./user.model\";\r\n \r\n export interface CodeInput {\r\n-  user:UserDocument['']\r\n+  user:UserDocument['_id']\r\n   code: string;\r\n   role:string;\r\n   used?: boolean;\r\n }\r\n@@ -16,8 +16,9 @@\n \r\n const codeApprovalSchema = new mongoose.Schema<CodeDocument>(\r\n     {\r\n       code: { type: String, required: true, unique: true },\r\n+      user:{},\r\n       role: {\r\n         type: String,\r\n         enum: [\r\n           \"Admin\",\r\n"
                },
                {
                    "date": 1741085056316,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -16,9 +16,9 @@\n \r\n const codeApprovalSchema = new mongoose.Schema<CodeDocument>(\r\n     {\r\n       code: { type: String, required: true, unique: true },\r\n-      user:{},\r\n+      user:{type:mongoose.},\r\n       role: {\r\n         type: String,\r\n         enum: [\r\n           \"Admin\",\r\n"
                },
                {
                    "date": 1741085062514,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -16,9 +16,9 @@\n \r\n const codeApprovalSchema = new mongoose.Schema<CodeDocument>(\r\n     {\r\n       code: { type: String, required: true, unique: true },\r\n-      user:{type:mongoose.},\r\n+      user:{type:mongoose.sc},\r\n       role: {\r\n         type: String,\r\n         enum: [\r\n           \"Admin\",\r\n"
                },
                {
                    "date": 1741085069877,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -16,9 +16,9 @@\n \r\n const codeApprovalSchema = new mongoose.Schema<CodeDocument>(\r\n     {\r\n       code: { type: String, required: true, unique: true },\r\n-      user:{type:mongoose.sc},\r\n+      user:{type:mongoose.Schema.Types.ObjectId,ref},\r\n       role: {\r\n         type: String,\r\n         enum: [\r\n           \"Admin\",\r\n"
                },
                {
                    "date": 1741085076061,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -16,9 +16,9 @@\n \r\n const codeApprovalSchema = new mongoose.Schema<CodeDocument>(\r\n     {\r\n       code: { type: String, required: true, unique: true },\r\n-      user:{type:mongoose.Schema.Types.ObjectId,ref},\r\n+      user:{type:mongoose.Schema.Types.ObjectId,ref:\"User\"},\r\n       role: {\r\n         type: String,\r\n         enum: [\r\n           \"Admin\",\r\n"
                },
                {
                    "date": 1741085083887,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -16,9 +16,9 @@\n \r\n const codeApprovalSchema = new mongoose.Schema<CodeDocument>(\r\n     {\r\n       code: { type: String, required: true, unique: true },\r\n-      user:{type:mongoose.Schema.Types.ObjectId,ref:\"User\"},\r\n+      user:{type:mongoose.Schema.Types.ObjectId,ref:\"User\",required:true},\r\n       role: {\r\n         type: String,\r\n         enum: [\r\n           \"Admin\",\r\n"
                },
                {
                    "date": 1741085127277,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -2,8 +2,9 @@\n import { UserDocument } from \"./user.model\";\r\n \r\n export interface CodeInput {\r\n   user:UserDocument['_id']\r\n+  expiration\r\n   code: string;\r\n   role:string;\r\n   used?: boolean;\r\n }\r\n"
                },
                {
                    "date": 1741085138986,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -2,9 +2,9 @@\n import { UserDocument } from \"./user.model\";\r\n \r\n export interface CodeInput {\r\n   user:UserDocument['_id']\r\n-  expiration\r\n+  expiration:Date\r\n   code: string;\r\n   role:string;\r\n   used?: boolean;\r\n }\r\n@@ -18,8 +18,9 @@\n const codeApprovalSchema = new mongoose.Schema<CodeDocument>(\r\n     {\r\n       code: { type: String, required: true, unique: true },\r\n       user:{type:mongoose.Schema.Types.ObjectId,ref:\"User\",required:true},\r\n+      ex\r\n       role: {\r\n         type: String,\r\n         enum: [\r\n           \"Admin\",\r\n"
                },
                {
                    "date": 1741085149940,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -18,9 +18,9 @@\n const codeApprovalSchema = new mongoose.Schema<CodeDocument>(\r\n     {\r\n       code: { type: String, required: true, unique: true },\r\n       user:{type:mongoose.Schema.Types.ObjectId,ref:\"User\",required:true},\r\n-      ex\r\n+      expiration:{type:date,},\r\n       role: {\r\n         type: String,\r\n         enum: [\r\n           \"Admin\",\r\n"
                },
                {
                    "date": 1741085161841,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -18,9 +18,9 @@\n const codeApprovalSchema = new mongoose.Schema<CodeDocument>(\r\n     {\r\n       code: { type: String, required: true, unique: true },\r\n       user:{type:mongoose.Schema.Types.ObjectId,ref:\"User\",required:true},\r\n-      expiration:{type:date,},\r\n+      expiration:{type:Date,required:true},\r\n       role: {\r\n         type: String,\r\n         enum: [\r\n           \"Admin\",\r\n"
                },
                {
                    "date": 1741088683691,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,9 +1,9 @@\n import mongoose, { Document } from \"mongoose\";\r\n import { UserDocument } from \"./user.model\";\r\n \r\n export interface CodeInput {\r\n-  user:UserDocument['_id']\r\n+  user?:UserDocument['_id']\r\n   expiration:Date\r\n   code: string;\r\n   role:string;\r\n   used?: boolean;\r\n"
                },
                {
                    "date": 1741088690461,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -17,9 +17,9 @@\n \r\n const codeApprovalSchema = new mongoose.Schema<CodeDocument>(\r\n     {\r\n       code: { type: String, required: true, unique: true },\r\n-      user:{type:mongoose.Schema.Types.ObjectId,ref:\"User\",required:true},\r\n+      user:{type:mongoose.Schema.Types.ObjectId,ref:\"User\"},\r\n       expiration:{type:Date,required:true},\r\n       role: {\r\n         type: String,\r\n         enum: [\r\n"
                }
            ],
            "date": 1741085027300,
            "name": "Commit-0",
            "content": "import mongoose, { Document } from \"mongoose\";\r\n\r\nexport interface CodeInput {\r\n  code: string;\r\n  role:string;\r\n  used?: boolean;\r\n}\r\n\r\nexport interface CodeDocument extends CodeInput, Document {\r\n  createdAt: Date;\r\n  updatedAt: Date;\r\n}\r\n\r\n\r\nconst codeApprovalSchema = new mongoose.Schema<CodeDocument>(\r\n    {\r\n      code: { type: String, required: true, unique: true },\r\n      role: {\r\n        type: String,\r\n        enum: [\r\n          \"Admin\",\r\n          \"Senior Consultant\",\r\n          \"Resident Doctor\",\r\n          \"Intern Doctor\",\r\n          \"Head Secretary\",\r\n          \"Charge Secretary\",\r\n          \"Head Nurse\",\r\n          \"Charge Nurse\",\r\n        ],\r\n        required: true,\r\n      },\r\n      used: { type: Boolean, default: false },\r\n    },\r\n    { timestamps: true }\r\n  );\r\n  \r\n  export const CodeModel = mongoose.model(\"Code\", codeApprovalSchema);\r\n  "
        }
    ]
}