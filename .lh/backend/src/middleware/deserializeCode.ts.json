{
    "sourceFile": "backend/src/middleware/deserializeCode.ts",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 15,
            "patches": [
                {
                    "date": 1741090017793,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1741090031927,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,1 +1,7 @@\n-export const deser\n\\ No newline at end of file\n+export const deserializeCode = async () => {\r\n+    try {\r\n+        \r\n+    } catch (error) {\r\n+        \r\n+    }\r\n+}\n\\ No newline at end of file\n"
                },
                {
                    "date": 1741090039554,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,5 +1,5 @@\n-export const deserializeCode = async () => {\r\n+export const deserializeCode = async (req:Request,res) => {\r\n     try {\r\n         \r\n     } catch (error) {\r\n         \r\n"
                },
                {
                    "date": 1741090049159,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,5 +1,7 @@\n-export const deserializeCode = async (req:Request,res) => {\r\n+import { Response } from \"express\";\r\n+\r\n+export const deserializeCode = async (req:Request,res:Response,next:mext) => {\r\n     try {\r\n         \r\n     } catch (error) {\r\n         \r\n"
                },
                {
                    "date": 1741090059410,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,7 +1,7 @@\n-import { Response } from \"express\";\r\n+import { NextFunction, Response } from \"express\";\r\n \r\n-export const deserializeCode = async (req:Request,res:Response,next:mext) => {\r\n+export const deserializeCode = async (req:Request,res:Response,next:NextFunction) => {\r\n     try {\r\n         \r\n     } catch (error) {\r\n         \r\n"
                },
                {
                    "date": 1741090066281,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,5 +1,5 @@\n-import { NextFunction, Response } from \"express\";\r\n+import { NextFunction, Response ,Request} from \"express\";\r\n \r\n export const deserializeCode = async (req:Request,res:Response,next:NextFunction) => {\r\n     try {\r\n         \r\n"
                },
                {
                    "date": 1741090127116,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,7 +1,7 @@\n import { NextFunction, Response ,Request} from \"express\";\r\n \r\n-export const deserializeCode = async (req:Request,res:Response,next:NextFunction) => {\r\n+export const deserializeCode = async (req:Request<>,res:Response,next:NextFunction) => {\r\n     try {\r\n         \r\n     } catch (error) {\r\n         \r\n"
                },
                {
                    "date": 1741090134199,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,7 +1,8 @@\n import { NextFunction, Response ,Request} from \"express\";\r\n+import { codeSchemaInterface } from \"../schemas/code.schema\";\r\n \r\n-export const deserializeCode = async (req:Request<>,res:Response,next:NextFunction) => {\r\n+export const deserializeCode = async (req:Request<codeSchemaInterface[\"params\"]>,res:Response,next:NextFunction) => {\r\n     try {\r\n         \r\n     } catch (error) {\r\n         \r\n"
                },
                {
                    "date": 1741090150356,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -2,9 +2,9 @@\n import { codeSchemaInterface } from \"../schemas/code.schema\";\r\n \r\n export const deserializeCode = async (req:Request<codeSchemaInterface[\"params\"]>,res:Response,next:NextFunction) => {\r\n     try {\r\n-        \r\n+        const id = req.params.id\r\n     } catch (error) {\r\n         \r\n     }\r\n }\n\\ No newline at end of file\n"
                },
                {
                    "date": 1741090167653,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -2,9 +2,9 @@\n import { codeSchemaInterface } from \"../schemas/code.schema\";\r\n \r\n export const deserializeCode = async (req:Request<codeSchemaInterface[\"params\"]>,res:Response,next:NextFunction) => {\r\n     try {\r\n-        const id = req.params.id\r\n+        const id = res\r\n     } catch (error) {\r\n         \r\n     }\r\n }\n\\ No newline at end of file\n"
                },
                {
                    "date": 1741090180564,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -2,9 +2,9 @@\n import { codeSchemaInterface } from \"../schemas/code.schema\";\r\n \r\n export const deserializeCode = async (req:Request<codeSchemaInterface[\"params\"]>,res:Response,next:NextFunction) => {\r\n     try {\r\n-        const id = res\r\n+        const id = res.locals.user._id\r\n     } catch (error) {\r\n         \r\n     }\r\n }\n\\ No newline at end of file\n"
                },
                {
                    "date": 1741090191565,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -3,8 +3,10 @@\n \r\n export const deserializeCode = async (req:Request<codeSchemaInterface[\"params\"]>,res:Response,next:NextFunction) => {\r\n     try {\r\n         const id = res.locals.user._id\r\n+\r\n+        \r\n     } catch (error) {\r\n         \r\n     }\r\n }\n\\ No newline at end of file\n"
                },
                {
                    "date": 1741090199997,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -4,9 +4,9 @@\n export const deserializeCode = async (req:Request<codeSchemaInterface[\"params\"]>,res:Response,next:NextFunction) => {\r\n     try {\r\n         const id = res.locals.user._id\r\n \r\n-        \r\n+        const \r\n     } catch (error) {\r\n         \r\n     }\r\n }\n\\ No newline at end of file\n"
                },
                {
                    "date": 1741090212307,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,12 +1,13 @@\n import { NextFunction, Response ,Request} from \"express\";\r\n import { codeSchemaInterface } from \"../schemas/code.schema\";\r\n+import { findCode } from \"../services/code.service\";\r\n \r\n export const deserializeCode = async (req:Request<codeSchemaInterface[\"params\"]>,res:Response,next:NextFunction) => {\r\n     try {\r\n         const id = res.locals.user._id\r\n \r\n-        const \r\n+        const code = await findCode({us})\r\n     } catch (error) {\r\n         \r\n     }\r\n }\n\\ No newline at end of file\n"
                },
                {
                    "date": 1741090220789,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -5,9 +5,9 @@\n export const deserializeCode = async (req:Request<codeSchemaInterface[\"params\"]>,res:Response,next:NextFunction) => {\r\n     try {\r\n         const id = res.locals.user._id\r\n \r\n-        const code = await findCode({user:id,used})\r\n+        const code = await findCode({user:id,used:})\r\n     } catch (error) {\r\n         \r\n     }\r\n }\n\\ No newline at end of file\n"
                },
                {
                    "date": 1741090243268,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -8,9 +8,9 @@\n \r\n         const code = await findCode({user:id,used:true})\r\n \r\n         if(!code){\r\n-            return res.status(403)\r\n+            return res.status(403).\r\n         }\r\n     } catch (error) {\r\n         \r\n     }\r\n"
                }
            ],
            "date": 1741090017793,
            "name": "Commit-0",
            "content": "export const deser"
        }
    ]
}