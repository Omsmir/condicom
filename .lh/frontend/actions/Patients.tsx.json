{
    "sourceFile": "frontend/actions/Patients.tsx",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 5,
            "patches": [
                {
                    "date": 1739148515521,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1739148521676,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -3,9 +3,9 @@\n \r\n const baseUrl = process.env.NEXT_API\r\n \r\n \r\n-const \r\n+const axiosInstace = \r\n export const getAllPatients = async () => {\r\n     try {\r\n         const response = await axios.get(`${baseUrl}/patient/`)\r\n \r\n"
                },
                {
                    "date": 1739148531196,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -3,9 +3,9 @@\n \r\n const baseUrl = process.env.NEXT_API\r\n \r\n \r\n-const axiosInstace = \r\n+const axiosInstace = axios.create({baseURL:baseUrl})\r\n export const getAllPatients = async () => {\r\n     try {\r\n         const response = await axios.get(`${baseUrl}/patient/`)\r\n \r\n"
                },
                {
                    "date": 1739148547054,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -4,8 +4,12 @@\n const baseUrl = process.env.NEXT_API\r\n \r\n \r\n const axiosInstace = axios.create({baseURL:baseUrl})\r\n+\r\n+\r\n+\r\n+export const GetAllPatients\r\n export const getAllPatients = async () => {\r\n     try {\r\n         const response = await axios.get(`${baseUrl}/patient/`)\r\n \r\n"
                },
                {
                    "date": 1739148558008,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -7,9 +7,11 @@\n const axiosInstace = axios.create({baseURL:baseUrl})\r\n \r\n \r\n \r\n-export const GetPatients = async ()\r\n+export const GetPatients = async () => {\r\n+  \r\n+}\r\n export const getAllPatients = async () => {\r\n     try {\r\n         const response = await axios.get(`${baseUrl}/patient/`)\r\n \r\n"
                },
                {
                    "date": 1739148584844,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -8,9 +8,9 @@\n \r\n \r\n \r\n export const GetPatients = async () => {\r\n-  return axiosInstace.get<patient[]>(\"patient\")\r\n+  return axiosInstace.get<patient[]>(\"patient/\")\r\n }\r\n export const getAllPatients = async () => {\r\n     try {\r\n         const response = await axios.get(`${baseUrl}/patient/`)\r\n"
                }
            ],
            "date": 1739148515521,
            "name": "Commit-0",
            "content": "import { patient } from \"@/types\"\r\nimport axios, { isAxiosError } from \"axios\"\r\n\r\nconst baseUrl = process.env.NEXT_API\r\n\r\n\r\nconst \r\nexport const getAllPatients = async () => {\r\n    try {\r\n        const response = await axios.get(`${baseUrl}/patient/`)\r\n\r\n        const data = await response.data\r\n\r\n        return data\r\n    } catch (error) {\r\n        if (axios.isAxiosError(error)) {\r\n            if (error.response) {\r\n              throw new Error(error.response.data.message)\r\n            } \r\n          } else if (error instanceof Error) {\r\n            throw new Error(error.message)\r\n\r\n          }\r\n    }\r\n}\r\n\r\nexport const getSpecficPatient = async (id:string) => {\r\n    try {\r\n        const response = await axios.get(`${baseUrl}/patient/${id}`)\r\n\r\n        const data = await response.data.patient as patient | undefined\r\n\r\n        return data\r\n    } catch (error) {\r\n        if (axios.isAxiosError(error)) {\r\n            if (error.response) {\r\n              throw new Error(error.response.data.message)\r\n            } \r\n          } else if (error instanceof Error) {\r\n            throw new Error(error.message)\r\n\r\n          } \r\n    }\r\n}"
        }
    ]
}