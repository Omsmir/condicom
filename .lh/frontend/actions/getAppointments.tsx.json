{
    "sourceFile": "frontend/actions/getAppointments.tsx",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 2,
            "patches": [
                {
                    "date": 1739080036138,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1739080051183,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,8 +1,8 @@\n import { Appointment } from \"@/types\";\r\n import axios from \"axios\";\r\n \r\n-const baseURI = <process className=\"env lo\"></process>\r\n+const baseURI = process.env.lo\r\n \r\n export const getAppointments = async () => {\r\n  try {\r\n     const response = await fetch(\"http://localhost:8080/api/appointments/\");\r\n"
                },
                {
                    "date": 1739080090915,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -3,9 +3,9 @@\n \r\n const baseURI = process.env.NEXT_API\r\n \r\n \r\n-const axiosInstance = axios.create({baseURL:base})\r\n+const axiosInstance = axios.create({baseURL:baseURI})\r\n \r\n export const getAppointments = async () => {\r\n  try {\r\n     const response = await fetch(\"http://localhost:8080/api/appointments/\");\r\n"
                }
            ],
            "date": 1739080036138,
            "name": "Commit-0",
            "content": "import { Appointment } from \"@/types\";\r\nimport axios from \"axios\";\r\n\r\nconst base\r\n\r\nexport const getAppointments = async () => {\r\n try {\r\n    const response = await fetch(\"http://localhost:8080/api/appointments/\");\r\n\r\n    const data = await response.json();\r\n  \r\n  \r\n    const ArrayOfDates = data.Appointments.map((ele: any) => ({\r\n      ...ele,\r\n      startDate: new Date(ele.startDate),\r\n      endDate: new Date(ele.endDate),\r\n    }));\r\n  \r\n    await new Promise((resolve) => setTimeout(resolve, 500));\r\n\r\n    if(ArrayOfDates)\r\n\r\n    return ArrayOfDates;\r\n    \r\n } catch (error) {\r\n    console.log(error);\r\n }\r\n};\r\n\r\n\r\n\r\nexport const getUserAppointments = async (userId:string) => {\r\n   try {\r\n      const response = await axios.get(`http://localhost:8080/api/appointments/${userId}`)\r\n      if(response.status !== 200){\r\n         throw new Error(response.data.message)\r\n      }\r\n      const Appointments = await response.data.userAppointments as Appointment[]\r\n\r\n      return Appointments\r\n   } catch (error:any) {\r\n      console.log(error.message)\r\n   }\r\n}"
        }
    ]
}