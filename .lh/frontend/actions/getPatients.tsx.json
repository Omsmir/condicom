{
    "sourceFile": "frontend/actions/getPatients.tsx",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 32,
            "patches": [
                {
                    "date": 1738511585070,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1738511591586,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,1 +1,7 @@\n-export const getAllPatients = async\n\\ No newline at end of file\n+export const getAllPatients = async () => {\r\n+    try {\r\n+        \r\n+    } catch (error) {\r\n+        \r\n+    }\r\n+}\n\\ No newline at end of file\n"
                },
                {
                    "date": 1738511602715,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,7 +1,7 @@\n export const getAllPatients = async () => {\r\n     try {\r\n-        \r\n+        const response = await axios\r\n     } catch (error) {\r\n         \r\n     }\r\n }\n\\ No newline at end of file\n"
                },
                {
                    "date": 1738511617210,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,7 +1,11 @@\n+import axios from \"axios\"\r\n+\r\n+const baseUrl = \"http://localhost\"\r\n+\r\n export const getAllPatients = async () => {\r\n     try {\r\n-        const response = await axios\r\n+        const response = await axios.get\r\n     } catch (error) {\r\n         \r\n     }\r\n }\n\\ No newline at end of file\n"
                },
                {
                    "date": 1738511624841,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,7 +1,7 @@\n import axios from \"axios\"\r\n \r\n-const baseUrl = \"http://localhost\"\r\n+const baseUrl = process.env.\r\n \r\n export const getAllPatients = async () => {\r\n     try {\r\n         const response = await axios.get\r\n"
                },
                {
                    "date": 1738511631708,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,7 +1,7 @@\n import axios from \"axios\"\r\n \r\n-const baseUrl = process.env.\r\n+const baseUrl = process.env.NEXT_URI\r\n \r\n export const getAllPatients = async () => {\r\n     try {\r\n         const response = await axios.get\r\n"
                },
                {
                    "date": 1738511642438,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,7 +1,7 @@\n import axios from \"axios\"\r\n \r\n-const baseUrl = process.env.NEXT_URI\r\n+const baseUrl = process.env.NEXT_API\r\n \r\n export const getAllPatients = async () => {\r\n     try {\r\n         const response = await axios.get\r\n"
                },
                {
                    "date": 1738511649490,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -3,9 +3,9 @@\n const baseUrl = process.env.NEXT_API\r\n \r\n export const getAllPatients = async () => {\r\n     try {\r\n-        const response = await axios.get\r\n+        const response = await axios.get(``)\r\n     } catch (error) {\r\n         \r\n     }\r\n }\n\\ No newline at end of file\n"
                },
                {
                    "date": 1738511658195,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -3,9 +3,9 @@\n const baseUrl = process.env.NEXT_API\r\n \r\n export const getAllPatients = async () => {\r\n     try {\r\n-        const response = await axios.get(``)\r\n+        const response = await axios.get(`${baseUrl}/`)\r\n     } catch (error) {\r\n         \r\n     }\r\n }\n\\ No newline at end of file\n"
                },
                {
                    "date": 1738511663864,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -3,9 +3,9 @@\n const baseUrl = process.env.NEXT_API\r\n \r\n export const getAllPatients = async () => {\r\n     try {\r\n-        const response = await axios.get(`${baseUrl}/`)\r\n+        const response = await axios.get(`${baseUrl}/patient`)\r\n     } catch (error) {\r\n         \r\n     }\r\n }\n\\ No newline at end of file\n"
                },
                {
                    "date": 1738511675079,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -4,8 +4,10 @@\n \r\n export const getAllPatients = async () => {\r\n     try {\r\n         const response = await axios.get(`${baseUrl}/patient`)\r\n+\r\n+        const \r\n     } catch (error) {\r\n         \r\n     }\r\n }\n\\ No newline at end of file\n"
                },
                {
                    "date": 1738511687262,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -5,9 +5,9 @@\n export const getAllPatients = async () => {\r\n     try {\r\n         const response = await axios.get(`${baseUrl}/patient`)\r\n \r\n-        const \r\n+        const data = await response.data\r\n     } catch (error) {\r\n         \r\n     }\r\n }\n\\ No newline at end of file\n"
                },
                {
                    "date": 1738511693520,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -5,9 +5,9 @@\n export const getAllPatients = async () => {\r\n     try {\r\n         const response = await axios.get(`${baseUrl}/patient`)\r\n \r\n-        const data = await response.data\r\n+        const data = await response.data.patients\r\n     } catch (error) {\r\n         \r\n     }\r\n }\n\\ No newline at end of file\n"
                },
                {
                    "date": 1738511698725,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -7,7 +7,9 @@\n         const response = await axios.get(`${baseUrl}/patient`)\r\n \r\n         const data = await response.data.patients\r\n     } catch (error) {\r\n-        \r\n+        if(){\r\n+            \r\n+        }\r\n     }\r\n }\n\\ No newline at end of file\n"
                },
                {
                    "date": 1738511705249,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -7,9 +7,9 @@\n         const response = await axios.get(`${baseUrl}/patient`)\r\n \r\n         const data = await response.data.patients\r\n     } catch (error) {\r\n-        if(){\r\n-            \r\n+        if(is){\r\n+\r\n         }\r\n     }\r\n }\n\\ No newline at end of file\n"
                },
                {
                    "date": 1738511741208,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,5 +1,5 @@\n-import axios from \"axios\"\r\n+import axios, { isAxiosError } from \"axios\"\r\n \r\n const baseUrl = process.env.NEXT_API\r\n \r\n export const getAllPatients = async () => {\r\n@@ -7,9 +7,31 @@\n         const response = await axios.get(`${baseUrl}/patient`)\r\n \r\n         const data = await response.data.patients\r\n     } catch (error) {\r\n-        if(is){\r\n-\r\n-        }\r\n+        if (axios.isAxiosError(error)) {\r\n+            if (error.response) {\r\n+              api.error({\r\n+                message: `${error.response.data.message}`,\r\n+                description: \"something went wrong\",\r\n+                showProgress: true,\r\n+                pauseOnHover: false,\r\n+              });\r\n+            } else {\r\n+              api.error({\r\n+                message: \"No Response from Server\",\r\n+                description:\r\n+                  \"Please check your network connection or try again later.\",\r\n+                showProgress: true,\r\n+                pauseOnHover: false,\r\n+              });\r\n+            }\r\n+          } else if (error instanceof Error) {\r\n+            api.error({\r\n+              message: \"Unexpected Error\",\r\n+              description: error.message,\r\n+              showProgress: true,\r\n+              pauseOnHover: false,\r\n+            });\r\n+          }\r\n     }\r\n }\n\\ No newline at end of file\n"
                },
                {
                    "date": 1738511766498,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -9,14 +9,9 @@\n         const data = await response.data.patients\r\n     } catch (error) {\r\n         if (axios.isAxiosError(error)) {\r\n             if (error.response) {\r\n-              api.error({\r\n-                message: `${error.response.data.message}`,\r\n-                description: \"something went wrong\",\r\n-                showProgress: true,\r\n-                pauseOnHover: false,\r\n-              });\r\n+              throw new \r\n             } else {\r\n               api.error({\r\n                 message: \"No Response from Server\",\r\n                 description:\r\n"
                },
                {
                    "date": 1738511780105,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -9,9 +9,9 @@\n         const data = await response.data.patients\r\n     } catch (error) {\r\n         if (axios.isAxiosError(error)) {\r\n             if (error.response) {\r\n-              throw new \r\n+              throw new Error(error.response.)\r\n             } else {\r\n               api.error({\r\n                 message: \"No Response from Server\",\r\n                 description:\r\n"
                },
                {
                    "date": 1738511792070,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -9,18 +9,10 @@\n         const data = await response.data.patients\r\n     } catch (error) {\r\n         if (axios.isAxiosError(error)) {\r\n             if (error.response) {\r\n-              throw new Error(error.response.)\r\n-            } else {\r\n-              api.error({\r\n-                message: \"No Response from Server\",\r\n-                description:\r\n-                  \"Please check your network connection or try again later.\",\r\n-                showProgress: true,\r\n-                pauseOnHover: false,\r\n-              });\r\n-            }\r\n+              throw new Error(error.response.data.message)\r\n+            } \r\n           } else if (error instanceof Error) {\r\n             api.error({\r\n               message: \"Unexpected Error\",\r\n               description: error.message,\r\n"
                },
                {
                    "date": 1738511800471,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -12,13 +12,9 @@\n             if (error.response) {\r\n               throw new Error(error.response.data.message)\r\n             } \r\n           } else if (error instanceof Error) {\r\n-            api.error({\r\n-              message: \"Unexpected Error\",\r\n-              description: error.message,\r\n-              showProgress: true,\r\n-              pauseOnHover: false,\r\n-            });\r\n+            throw new Error(error.response.data.message)\r\n+\r\n           }\r\n     }\r\n }\n\\ No newline at end of file\n"
                },
                {
                    "date": 1738511807494,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,20 @@\n+import axios, { isAxiosError } from \"axios\"\r\n+\r\n+const baseUrl = process.env.NEXT_API\r\n+\r\n+export const getAllPatients = async () => {\r\n+    try {\r\n+        const response = await axios.get(`${baseUrl}/patient`)\r\n+\r\n+        const data = await response.data.patients\r\n+    } catch (error) {\r\n+        if (axios.isAxiosError(error)) {\r\n+            if (error.response) {\r\n+              throw new Error(error.response.data.message)\r\n+            } \r\n+          } else if (error instanceof Error) {\r\n+            throw new Error(error.message)\r\n+\r\n+          }\r\n+    }\r\n+}\n\\ No newline at end of file\n"
                },
                {
                    "date": 1738511814162,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -6,8 +6,10 @@\n     try {\r\n         const response = await axios.get(`${baseUrl}/patient`)\r\n \r\n         const data = await response.data.patients\r\n+\r\n+        return data\r\n     } catch (error) {\r\n         if (axios.isAxiosError(error)) {\r\n             if (error.response) {\r\n               throw new Error(error.response.data.message)\r\n@@ -16,25 +18,5 @@\n             throw new Error(error.message)\r\n \r\n           }\r\n     }\r\n-}\n-import axios, { isAxiosError } from \"axios\"\r\n-\r\n-const baseUrl = process.env.NEXT_API\r\n-\r\n-export const getAllPatients = async () => {\r\n-    try {\r\n-        const response = await axios.get(`${baseUrl}/patient`)\r\n-\r\n-        const data = await response.data.patients\r\n-    } catch (error) {\r\n-        if (axios.isAxiosError(error)) {\r\n-            if (error.response) {\r\n-              throw new Error(error.response.data.message)\r\n-            } \r\n-          } else if (error instanceof Error) {\r\n-            throw new Error(error.response.data.message)\r\n-\r\n-          }\r\n-    }\r\n }\n\\ No newline at end of file\n"
                },
                {
                    "date": 1738511825585,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -18,5 +18,7 @@\n             throw new Error(error.message)\r\n \r\n           }\r\n     }\r\n-}\n\\ No newline at end of file\n+}\r\n+\r\n+export const getSpecficPat\n\\ No newline at end of file\n"
                },
                {
                    "date": 1738511831457,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -20,5 +20,5 @@\n           }\r\n     }\r\n }\r\n \r\n-export const getSpecficPat\n\\ No newline at end of file\n+export const getSpecficPatient = async ()\n\\ No newline at end of file\n"
                },
                {
                    "date": 1738511837900,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -20,5 +20,11 @@\n           }\r\n     }\r\n }\r\n \r\n-export const getSpecficPatient = async ()\n\\ No newline at end of file\n+export const getSpecficPatient = async (id:string) => {\r\n+    try {\r\n+        \r\n+    } catch (error) {\r\n+        \r\n+    }\r\n+}\n\\ No newline at end of file\n"
                },
                {
                    "date": 1738511845431,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,37 @@\n+import axios, { isAxiosError } from \"axios\"\r\n+\r\n+const baseUrl = process.env.NEXT_API\r\n+\r\n+export const getAllPatients = async () => {\r\n+    try {\r\n+        const response = await axios.get(`${baseUrl}/patient`)\r\n+\r\n+        const data = await response.data.patients\r\n+\r\n+        return data\r\n+    } catch (error) {\r\n+        if (axios.isAxiosError(error)) {\r\n+            if (error.response) {\r\n+              throw new Error(error.response.data.message)\r\n+            } \r\n+          } else if (error instanceof Error) {\r\n+            throw new Error(error.message)\r\n+\r\n+          }\r\n+    }\r\n+}\r\n+\r\n+export const getSpecficPatient = async (id:string) => {\r\n+    try {\r\n+        \r\n+    } catch (error) {\r\n+        if (axios.isAxiosError(error)) {\r\n+            if (error.response) {\r\n+              throw new Error(error.response.data.message)\r\n+            } \r\n+          } else if (error instanceof Error) {\r\n+            throw new Error(error.message)\r\n+\r\n+          } \r\n+    }\r\n+}\n\\ No newline at end of file\n"
                },
                {
                    "date": 1738511853603,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -22,26 +22,8 @@\n }\r\n \r\n export const getSpecficPatient = async (id:string) => {\r\n     try {\r\n-        \r\n-    } catch (error) {\r\n-        if (axios.isAxiosError(error)) {\r\n-            if (error.response) {\r\n-              throw new Error(error.response.data.message)\r\n-            } \r\n-          } else if (error instanceof Error) {\r\n-            throw new Error(error.message)\r\n-\r\n-          } \r\n-    }\r\n-}\n-import axios, { isAxiosError } from \"axios\"\r\n-\r\n-const baseUrl = process.env.NEXT_API\r\n-\r\n-export const getAllPatients = async () => {\r\n-    try {\r\n         const response = await axios.get(`${baseUrl}/patient`)\r\n \r\n         const data = await response.data.patients\r\n \r\n@@ -53,15 +35,7 @@\n             } \r\n           } else if (error instanceof Error) {\r\n             throw new Error(error.message)\r\n \r\n-          }\r\n+          } \r\n     }\r\n-}\r\n-\r\n-export const getSpecficPatient = async (id:string) => {\r\n-    try {\r\n-        \r\n-    } catch (error) {\r\n-        \r\n-    }\r\n }\n\\ No newline at end of file\n"
                },
                {
                    "date": 1738511860873,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -22,11 +22,11 @@\n }\r\n \r\n export const getSpecficPatient = async (id:string) => {\r\n     try {\r\n-        const response = await axios.get(`${baseUrl}/patient`)\r\n+        const response = await axios.get(`${baseUrl}/patient/${id}`)\r\n \r\n-        const data = await response.data.patients\r\n+        const data = await response.data.patient\r\n \r\n         return data\r\n     } catch (error) {\r\n         if (axios.isAxiosError(error)) {\r\n"
                },
                {
                    "date": 1738512413310,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -2,8 +2,9 @@\n \r\n const baseUrl = process.env.NEXT_API\r\n \r\n export const getAllPatients = async () => {\r\n+  console.log(base)\r\n     try {\r\n         const response = await axios.get(`${baseUrl}/patient`)\r\n \r\n         const data = await response.data.patients\r\n"
                },
                {
                    "date": 1738512451200,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -2,11 +2,11 @@\n \r\n const baseUrl = process.env.NEXT_API\r\n \r\n export const getAllPatients = async () => {\r\n-  console.log(base)\r\n+  console.log(baseUrl)\r\n     try {\r\n-        const response = await axios.get(`${baseUrl}/patient`)\r\n+        const response = await axios.get(`${baseUrl}/patient/`)\r\n \r\n         const data = await response.data.patients\r\n \r\n         return data\r\n"
                },
                {
                    "date": 1738521650108,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -6,9 +6,9 @@\n   console.log(baseUrl)\r\n     try {\r\n         const response = await axios.get(`${baseUrl}/patient/`)\r\n \r\n-        const data = await response.data.patients\r\n+        const data = await response.data\r\n \r\n         return data\r\n     } catch (error) {\r\n         if (axios.isAxiosError(error)) {\r\n@@ -25,9 +25,9 @@\n export const getSpecficPatient = async (id:string) => {\r\n     try {\r\n         const response = await axios.get(`${baseUrl}/patient/${id}`)\r\n \r\n-        const data = await response.data.patient\r\n+        const data = await response.data.patient as patient\r\n \r\n         return data\r\n     } catch (error) {\r\n         if (axios.isAxiosError(error)) {\r\n"
                },
                {
                    "date": 1738521656625,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,4 +1,5 @@\n+import { patient } from \"@/types\"\r\n import axios, { isAxiosError } from \"axios\"\r\n \r\n const baseUrl = process.env.NEXT_API\r\n \r\n"
                },
                {
                    "date": 1738521665980,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -26,9 +26,9 @@\n export const getSpecficPatient = async (id:string) => {\r\n     try {\r\n         const response = await axios.get(`${baseUrl}/patient/${id}`)\r\n \r\n-        const data = await response.data.patient as patient\r\n+        const data = await response.data.patient as patient | undefined\r\n \r\n         return data\r\n     } catch (error) {\r\n         if (axios.isAxiosError(error)) {\r\n"
                }
            ],
            "date": 1738511585070,
            "name": "Commit-0",
            "content": "export const getAllPatients = async"
        }
    ]
}