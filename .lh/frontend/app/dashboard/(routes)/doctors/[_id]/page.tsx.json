{
    "sourceFile": "frontend/app/dashboard/(routes)/doctors/[_id]/page.tsx",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 2,
            "patches": [
                {
                    "date": 1739140529575,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1739209237360,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,9 +1,8 @@\n import React, { Suspense } from \"react\";\r\n import Loading from \"./loading\";\r\n import dynamic from \"next/dynamic\";\r\n import { getUser } from \"@/actions/getUser\";\r\n-import { getUserAppointments } from \"@/actions/Appointments\";\r\n \r\n const DoctorDynamic = dynamic(() => import(\"@/components/doctorProfile/DoctorLayout\"));\r\n \r\n const page = async ({ params }: { params: Promise<{ _id: string }> }) => {\r\n"
                },
                {
                    "date": 1739209249340,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -7,14 +7,13 @@\n \r\n const page = async ({ params }: { params: Promise<{ _id: string }> }) => {\r\n   const id = (await params)._id;\r\n   const user = await getUser(id)\r\n-  const userAppointments = await getUserAppointments(id)\r\n   await new Promise((resolve) => setTimeout(resolve, 500));\r\n \r\n   return (\r\n     <Suspense fallback={<Loading />}>\r\n-      <DoctorDynamic user={user} appointments={userAppointments} />\r\n+      <DoctorDynamic user={user} id={id} />\r\n     </Suspense>\r\n   );\r\n };\r\n \r\n"
                }
            ],
            "date": 1739140529575,
            "name": "Commit-0",
            "content": "import React, { Suspense } from \"react\";\r\nimport Loading from \"./loading\";\r\nimport dynamic from \"next/dynamic\";\r\nimport { getUser } from \"@/actions/getUser\";\r\nimport { getUserAppointments } from \"@/actions/Appointments\";\r\n\r\nconst DoctorDynamic = dynamic(() => import(\"@/components/doctorProfile/DoctorLayout\"));\r\n\r\nconst page = async ({ params }: { params: Promise<{ _id: string }> }) => {\r\n  const id = (await params)._id;\r\n  const user = await getUser(id)\r\n  const userAppointments = await getUserAppointments(id)\r\n  await new Promise((resolve) => setTimeout(resolve, 500));\r\n\r\n  return (\r\n    <Suspense fallback={<Loading />}>\r\n      <DoctorDynamic user={user} appointments={userAppointments} />\r\n    </Suspense>\r\n  );\r\n};\r\n\r\nexport default page;\r\n"
        }
    ]
}