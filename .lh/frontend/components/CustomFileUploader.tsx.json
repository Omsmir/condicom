{
    "sourceFile": "frontend/components/CustomFileUploader.tsx",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 17,
            "patches": [
                {
                    "date": 1738505910333,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1738514619313,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -22,8 +22,15 @@\n     const updatedFiles = fileList.map((file) => file.originFileObj as File);\r\n     onChange(updatedFiles); // Update form state\r\n   };\r\n \r\n+  const uploadButton = (\r\n+    <button style={{ border: 0, background: 'none' }} type=\"button\">\r\n+      <PlusOutlined />\r\n+      <div style={{ marginTop: 8 }}>Upload</div>\r\n+    </button>\r\n+  );\r\n+\r\n   return (\r\n     <Upload\r\n       fileList={fileList}\r\n       listType=\"picture-circle\"\r\n"
                },
                {
                    "date": 1738514626452,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,6 +1,6 @@\n import { Upload, Button, UploadFile } from \"antd\";\r\n-import { UploadOutlined } from \"@ant-design/icons\";\r\n+import { PlusOutlined, UploadOutlined } from \"@ant-design/icons\";\r\n \r\n type CustomFileUploaderProps = {\r\n   files?: File[]; // Accepts optional array of File objects\r\n   onChange: (files: File[]) => void; // Function to update form state\r\n"
                },
                {
                    "date": 1738514641983,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -29,9 +29,9 @@\n       <div style={{ marginTop: 8 }}>Upload</div>\r\n     </button>\r\n   );\r\n \r\n-  return (\r\n+  return (<></>\r\n     <Upload\r\n       fileList={fileList}\r\n       listType=\"picture-circle\"\r\n       beforeUpload={() => false} // ✅ Prevent auto-upload\r\n"
                },
                {
                    "date": 1738514647398,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -29,9 +29,9 @@\n       <div style={{ marginTop: 8 }}>Upload</div>\r\n     </button>\r\n   );\r\n \r\n-  return (<></>\r\n+  return (<>\r\n     <Upload\r\n       fileList={fileList}\r\n       listType=\"picture-circle\"\r\n       beforeUpload={() => false} // ✅ Prevent auto-upload\r\n@@ -39,8 +39,10 @@\n       maxCount={1} // ✅ Only one file allowed\r\n     >\r\n       {fileList.length >= 1 ? null : <Button icon={<UploadOutlined />}>Upload</Button>}\r\n     </Upload>\r\n+    \r\n+    </>\r\n   );\r\n };\r\n \r\n export default CustomFileUploader;\r\n"
                },
                {
                    "date": 1738514666060,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -6,8 +6,10 @@\n   onChange: (files: File[]) => void; // Function to update form state\r\n };\r\n \r\n const CustomFileUploader: React.FC<CustomFileUploaderProps> = ({ files = [], onChange }) => {\r\n+  const [previewOpen, setPreviewOpen] = useState(false);\r\n+  const [previewImage, setPreviewImage] = useState('');\r\n   // ✅ Convert stored files into Ant Design's UploadFile format\r\n   const fileList: UploadFile[] = files\r\n     ? files.map((file, index) => ({\r\n         uid: String(index),\r\n@@ -39,9 +41,19 @@\n       maxCount={1} // ✅ Only one file allowed\r\n     >\r\n       {fileList.length >= 1 ? null : <Button icon={<UploadOutlined />}>Upload</Button>}\r\n     </Upload>\r\n-    \r\n+    {previewImage && (\r\n+        <Image\r\n+          wrapperStyle={{ display: 'none' }}\r\n+          preview={{\r\n+            visible: previewOpen,\r\n+            onVisibleChange: (visible) => setPreviewOpen(visible),\r\n+            afterOpenChange: (visible) => !visible && setPreviewImage(''),\r\n+          }}\r\n+          src={previewImage}\r\n+        />\r\n+      )}\r\n     </>\r\n   );\r\n };\r\n \r\n"
                },
                {
                    "date": 1738514675112,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,6 +1,7 @@\n import { Upload, Button, UploadFile } from \"antd\";\r\n import { PlusOutlined, UploadOutlined } from \"@ant-design/icons\";\r\n+import { useState } from \"react\";\r\n \r\n type CustomFileUploaderProps = {\r\n   files?: File[]; // Accepts optional array of File objects\r\n   onChange: (files: File[]) => void; // Function to update form state\r\n@@ -8,9 +9,8 @@\n \r\n const CustomFileUploader: React.FC<CustomFileUploaderProps> = ({ files = [], onChange }) => {\r\n   const [previewOpen, setPreviewOpen] = useState(false);\r\n   const [previewImage, setPreviewImage] = useState('');\r\n-  // ✅ Convert stored files into Ant Design's UploadFile format\r\n   const fileList: UploadFile[] = files\r\n     ? files.map((file, index) => ({\r\n         uid: String(index),\r\n         name: file.name,\r\n"
                },
                {
                    "date": 1738514726121,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,5 +1,5 @@\n-import { Upload, Button, UploadFile } from \"antd\";\r\n+import { Upload, Button, UploadFile, Image } from \"antd\";\r\n import { PlusOutlined, UploadOutlined } from \"@ant-design/icons\";\r\n import { useState } from \"react\";\r\n \r\n type CustomFileUploaderProps = {\r\n@@ -31,8 +31,16 @@\n       <div style={{ marginTop: 8 }}>Upload</div>\r\n     </button>\r\n   );\r\n \r\n+  const handlePreview = async (file: UploadFile) => {\r\n+    if (!file.url && !file.preview) {\r\n+      file.preview = await getBase64(file.originFileObj as FileType);\r\n+    }\r\n+\r\n+    setPreviewImage(file.url || (file.preview as string));\r\n+    setPreviewOpen(true);\r\n+  };\r\n   return (<>\r\n     <Upload\r\n       fileList={fileList}\r\n       listType=\"picture-circle\"\r\n"
                },
                {
                    "date": 1738514755906,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,8 +1,21 @@\n import { Upload, Button, UploadFile, Image } from \"antd\";\r\n import { PlusOutlined, UploadOutlined } from \"@ant-design/icons\";\r\n import { useState } from \"react\";\r\n+import React, { useState } from 'react';\r\n+import { PlusOutlined } from '@ant-design/icons';\r\n+import { Image, Upload } from 'antd';\r\n+import type { GetProp, UploadFile, UploadProps } from 'antd';\r\n \r\n+type FileType = Parameters<GetProp<UploadProps, 'beforeUpload'>>[0];\r\n+\r\n+const getBase64 = (file: FileType): Promise<string> =>\r\n+  new Promise((resolve, reject) => {\r\n+    const reader = new FileReader();\r\n+    reader.readAsDataURL(file);\r\n+    reader.onload = () => resolve(reader.result as string);\r\n+    reader.onerror = (error) => reject(error);\r\n+  });\r\n type CustomFileUploaderProps = {\r\n   files?: File[]; // Accepts optional array of File objects\r\n   onChange: (files: File[]) => void; // Function to update form state\r\n };\r\n"
                },
                {
                    "date": 1738514762244,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,12 +1,11 @@\n import { Upload, Button, UploadFile, Image } from \"antd\";\r\n import { PlusOutlined, UploadOutlined } from \"@ant-design/icons\";\r\n import { useState } from \"react\";\r\n import React, { useState } from 'react';\r\n-import { PlusOutlined } from '@ant-design/icons';\r\n-import { Image, Upload } from 'antd';\r\n-import type { GetProp, UploadFile, UploadProps } from 'antd';\r\n \r\n+import type { GetProp UploadProps } from 'antd';\r\n+\r\n type FileType = Parameters<GetProp<UploadProps, 'beforeUpload'>>[0];\r\n \r\n const getBase64 = (file: FileType): Promise<string> =>\r\n   new Promise((resolve, reject) => {\r\n"
                },
                {
                    "date": 1738514767654,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,10 +1,9 @@\n import { Upload, Button, UploadFile, Image } from \"antd\";\r\n import { PlusOutlined, UploadOutlined } from \"@ant-design/icons\";\r\n-import { useState } from \"react\";\r\n-import React, { useState } from 'react';\r\n+=import React, { useState } from 'react';\r\n \r\n-import type { GetProp UploadProps } from 'antd';\r\n+import type { GetProp ,UploadProps } from 'antd';\r\n \r\n type FileType = Parameters<GetProp<UploadProps, 'beforeUpload'>>[0];\r\n \r\n const getBase64 = (file: FileType): Promise<string> =>\r\n"
                },
                {
                    "date": 1738514773141,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,7 +1,7 @@\n import { Upload, Button, UploadFile, Image } from \"antd\";\r\n import { PlusOutlined, UploadOutlined } from \"@ant-design/icons\";\r\n-=import React, { useState } from 'react';\r\n+import React, { useState } from 'react';\r\n \r\n import type { GetProp ,UploadProps } from 'antd';\r\n \r\n type FileType = Parameters<GetProp<UploadProps, 'beforeUpload'>>[0];\r\n"
                },
                {
                    "date": 1738514790165,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -56,8 +56,9 @@\n       fileList={fileList}\r\n       listType=\"picture-circle\"\r\n       beforeUpload={() => false} // ✅ Prevent auto-upload\r\n       onChange={handleUploadChange}\r\n+      onPreview={handlePreview}\r\n       maxCount={1} // ✅ Only one file allowed\r\n     >\r\n       {fileList.length >= 1 ? null : <Button icon={<UploadOutlined />}>Upload</Button>}\r\n     </Upload>\r\n"
                },
                {
                    "date": 1738514795546,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -54,12 +54,12 @@\n   return (<>\r\n     <Upload\r\n       fileList={fileList}\r\n       listType=\"picture-circle\"\r\n-      beforeUpload={() => false} // ✅ Prevent auto-upload\r\n+      beforeUpload={() => false}\r\n       onChange={handleUploadChange}\r\n       onPreview={handlePreview}\r\n-      maxCount={1} // ✅ Only one file allowed\r\n+      maxCount={1} \r\n     >\r\n       {fileList.length >= 1 ? null : <Button icon={<UploadOutlined />}>Upload</Button>}\r\n     </Upload>\r\n     {previewImage && (\r\n"
                },
                {
                    "date": 1738514801133,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -25,16 +25,15 @@\n     ? files.map((file, index) => ({\r\n         uid: String(index),\r\n         name: file.name,\r\n         status: \"done\",\r\n-        originFileObj: file as any, // ✅ Ensure correct typing\r\n+        originFileObj: file as any,\r\n       }))\r\n     : [];\r\n \r\n-  // ✅ Handle Upload Change\r\n   const handleUploadChange = ({ fileList }: { fileList: UploadFile[] }) => {\r\n     const updatedFiles = fileList.map((file) => file.originFileObj as File);\r\n-    onChange(updatedFiles); // Update form state\r\n+    onChange(updatedFiles); \r\n   };\r\n \r\n   const uploadButton = (\r\n     <button style={{ border: 0, background: 'none' }} type=\"button\">\r\n"
                },
                {
                    "date": 1738514853466,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -58,9 +58,9 @@\n       onChange={handleUploadChange}\r\n       onPreview={handlePreview}\r\n       maxCount={1} \r\n     >\r\n-      {fileList.length >= 1 ? null : <Button icon={<UploadOutlined />}>Upload</Button>}\r\n+      {fileList.length >= 1 ? null :<upload}\r\n     </Upload>\r\n     {previewImage && (\r\n         <Image\r\n           wrapperStyle={{ display: 'none' }}\r\n"
                },
                {
                    "date": 1738514865369,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -58,9 +58,9 @@\n       onChange={handleUploadChange}\r\n       onPreview={handlePreview}\r\n       maxCount={1} \r\n     >\r\n-      {fileList.length >= 1 ? null :uploadButton />}\r\n+      {fileList.length >= 1 ? null :uploadButton }\r\n     </Upload>\r\n     {previewImage && (\r\n         <Image\r\n           wrapperStyle={{ display: 'none' }}\r\n"
                },
                {
                    "date": 1738516580352,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -35,9 +35,9 @@\n     onChange(updatedFiles); \r\n   };\r\n \r\n   const uploadButton = (\r\n-    <button style={{ border: 0, background: 'none' }} type=\"button\" className=\"dard:text-slate-50\">\r\n+    <button style={{ border: 0, background: 'none' }} type=\"button\" className=\"dar:text-slate-50\">\r\n       <PlusOutlined />\r\n       <div style={{ marginTop: 8 }}>Upload</div>\r\n     </button>\r\n   );\r\n"
                }
            ],
            "date": 1738505910333,
            "name": "Commit-0",
            "content": "import { Upload, Button, UploadFile } from \"antd\";\r\nimport { UploadOutlined } from \"@ant-design/icons\";\r\n\r\ntype CustomFileUploaderProps = {\r\n  files?: File[]; // Accepts optional array of File objects\r\n  onChange: (files: File[]) => void; // Function to update form state\r\n};\r\n\r\nconst CustomFileUploader: React.FC<CustomFileUploaderProps> = ({ files = [], onChange }) => {\r\n  // ✅ Convert stored files into Ant Design's UploadFile format\r\n  const fileList: UploadFile[] = files\r\n    ? files.map((file, index) => ({\r\n        uid: String(index),\r\n        name: file.name,\r\n        status: \"done\",\r\n        originFileObj: file as any, // ✅ Ensure correct typing\r\n      }))\r\n    : [];\r\n\r\n  // ✅ Handle Upload Change\r\n  const handleUploadChange = ({ fileList }: { fileList: UploadFile[] }) => {\r\n    const updatedFiles = fileList.map((file) => file.originFileObj as File);\r\n    onChange(updatedFiles); // Update form state\r\n  };\r\n\r\n  return (\r\n    <Upload\r\n      fileList={fileList}\r\n      listType=\"picture-circle\"\r\n      beforeUpload={() => false} // ✅ Prevent auto-upload\r\n      onChange={handleUploadChange}\r\n      maxCount={1} // ✅ Only one file allowed\r\n    >\r\n      {fileList.length >= 1 ? null : <Button icon={<UploadOutlined />}>Upload</Button>}\r\n    </Upload>\r\n  );\r\n};\r\n\r\nexport default CustomFileUploader;\r\n"
        }
    ]
}