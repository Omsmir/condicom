{
    "sourceFile": "frontend/components/Patients.tsx",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 12,
            "patches": [
                {
                    "date": 1738511395416,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1738511406534,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -6,15 +6,9 @@\n import { medicalSpecialties } from \"@/lib/constants\";\r\n import { Suspense } from \"react\";\r\n import Loading from \"@/app/loading\";\r\n \r\n-async function getData(): Promise<any> {\r\n-  // Fetch data from your API here.\r\n-  const data = CustomerService.getCustomersXLarge();\r\n \r\n-  return (await data).map((ele) => ele);\r\n-}\r\n-\r\n const Doctors = async () => {\r\n   const data = await getAllUsers();\r\n \r\n   await new Promise((resolve) => setTimeout(resolve, 500));\r\n@@ -29,9 +23,9 @@\n \r\n   console.log(doctorUsers);\r\n \r\n   return (\r\n-      <DataTable columns={doctorColumns} data={data.users} patientTableState={false} />\r\n+      <DataTable columns={patien} data={data.users} patientTableState={false} />\r\n   );\r\n };\r\n \r\n export default Doctors;\r\n"
                },
                {
                    "date": 1738511417989,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -5,27 +5,19 @@\n import { UserInformation } from \"@/types\";\r\n import { medicalSpecialties } from \"@/lib/constants\";\r\n import { Suspense } from \"react\";\r\n import Loading from \"@/app/loading\";\r\n+import { patientsColumns } from \"./table/PatientsColumns\";\r\n \r\n \r\n const Doctors = async () => {\r\n   const data = await getAllUsers();\r\n \r\n   await new Promise((resolve) => setTimeout(resolve, 500));\r\n \r\n-  const primary = data.users as UserInformation[];\r\n \r\n-  const doctorUsers = primary.filter((user) =>\r\n-    medicalSpecialties.some(\r\n-      (medicalrole) => medicalrole.specialty === user.occupation\r\n-    )\r\n-  );\r\n-\r\n-  console.log(doctorUsers);\r\n-\r\n   return (\r\n-      <DataTable columns={patien} data={data.users} patientTableState={false} />\r\n+      <DataTable columns={patientsColumns} data={data.users} patientTableState />\r\n   );\r\n };\r\n \r\n export default Doctors;\r\n"
                },
                {
                    "date": 1738511889919,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,17 +1,11 @@\n import { getAllUsers } from \"@/actions/getUser\";\r\n-import { doctorColumns } from \"./table/DoctorColumns\";\r\n import { DataTable } from \"./table/Table\";\r\n-import { CustomerService } from \"./service/Data\";\r\n-import { UserInformation } from \"@/types\";\r\n-import { medicalSpecialties } from \"@/lib/constants\";\r\n-import { Suspense } from \"react\";\r\n-import Loading from \"@/app/loading\";\r\n import { patientsColumns } from \"./table/PatientsColumns\";\r\n \r\n \r\n const Doctors = async () => {\r\n-  const data = await getAllUsers();\r\n+  const data = await get\r\n \r\n   await new Promise((resolve) => setTimeout(resolve, 500));\r\n \r\n \r\n"
                },
                {
                    "date": 1738511895573,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,18 @@\n+import { getAllUsers } from \"@/actions/getUser\";\r\n+import { DataTable } from \"./table/Table\";\r\n+import { patientsColumns } from \"./table/PatientsColumns\";\r\n+import { getAllPatients } from \"@/actions/getPatients\";\r\n+\r\n+\r\n+const Doctors = async () => {\r\n+  const data = await getAllPatients()\r\n+\r\n+  await new Promise((resolve) => setTimeout(resolve, 500));\r\n+\r\n+\r\n+  return (\r\n+      <DataTable columns={patientsColumns} data={data} patientTableState />\r\n+  );\r\n+};\r\n+\r\n+export default Doctors;\r\n"
                },
                {
                    "date": 1738512390766,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -9,8 +9,9 @@\n \r\n   await new Promise((resolve) => setTimeout(resolve, 500));\r\n \r\n \r\n+  console.log(data)\r\n   return (\r\n       <DataTable columns={patientsColumns} data={data} patientTableState />\r\n   );\r\n };\r\n"
                },
                {
                    "date": 1738512464475,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -8,29 +8,11 @@\n   const data = await getAllPatients()\r\n \r\n   await new Promise((resolve) => setTimeout(resolve, 500));\r\n \r\n-\r\n   console.log(data)\r\n   return (\r\n       <DataTable columns={patientsColumns} data={data} patientTableState />\r\n   );\r\n };\r\n \r\n export default Doctors;\r\n-import { getAllUsers } from \"@/actions/getUser\";\r\n-import { DataTable } from \"./table/Table\";\r\n-import { patientsColumns } from \"./table/PatientsColumns\";\r\n-\r\n-\r\n-const Doctors = async () => {\r\n-  const data = await get\r\n-\r\n-  await new Promise((resolve) => setTimeout(resolve, 500));\r\n-\r\n-\r\n-  return (\r\n-      <DataTable columns={patientsColumns} data={data.users} patientTableState />\r\n-  );\r\n-};\r\n-\r\n-export default Doctors;\r\n"
                },
                {
                    "date": 1738512479756,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -10,9 +10,9 @@\n   await new Promise((resolve) => setTimeout(resolve, 500));\r\n \r\n   console.log(data)\r\n   return (\r\n-      <DataTable columns={patientsColumns} data={data} patientTableState />\r\n+      <DataTable columns={patientsColumns} data={data.Patients} patientTableState />\r\n   );\r\n };\r\n \r\n export default Doctors;\r\n"
                },
                {
                    "date": 1738513483050,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -8,11 +8,10 @@\n   const data = await getAllPatients()\r\n \r\n   await new Promise((resolve) => setTimeout(resolve, 500));\r\n \r\n-  console.log(data)\r\n   return (\r\n-      <DataTable columns={patientsColumns} data={data.Patients} patientTableState />\r\n+      <DataTable columns={patientsColumns} data={data.Patients} patientTableState  />\r\n   );\r\n };\r\n \r\n export default Doctors;\r\n"
                },
                {
                    "date": 1738513489300,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -9,9 +9,9 @@\n \r\n   await new Promise((resolve) => setTimeout(resolve, 500));\r\n \r\n   return (\r\n-      <DataTable columns={patientsColumns} data={data.Patients} patientTableState  />\r\n+      <DataTable columns={patientsColumns} data={data.Patients} patientTableState breadCrumbString=\"Patients\" />\r\n   );\r\n };\r\n \r\n export default Doctors;\r\n"
                },
                {
                    "date": 1738513501251,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -9,9 +9,9 @@\n \r\n   await new Promise((resolve) => setTimeout(resolve, 500));\r\n \r\n   return (\r\n-      <DataTable columns={patientsColumns} data={data.Patients} patientTableState breadCrumbString=\"Patients\" />\r\n+      <DataTable columns={patientsColumns} data={data.Patients} patientTableState breadCrumbString=\"Patients\"  />\r\n   );\r\n };\r\n \r\n export default Doctors;\r\n"
                },
                {
                    "date": 1738513509869,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -9,9 +9,9 @@\n \r\n   await new Promise((resolve) => setTimeout(resolve, 500));\r\n \r\n   return (\r\n-      <DataTable columns={patientsColumns} data={data.Patients} patientTableState breadCrumbString=\"Patients\" StatsIcon={<A} />\r\n+      <DataTable columns={patientsColumns} data={data.Patients} patientTableState breadCrumbString=\"Patients\" StatsIcon={<Ac} />\r\n   );\r\n };\r\n \r\n export default Doctors;\r\n"
                },
                {
                    "date": 1738513590022,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -9,9 +9,9 @@\n \r\n   await new Promise((resolve) => setTimeout(resolve, 500));\r\n \r\n   return (\r\n-      <DataTable columns={patientsColumns} data={data.Patients} patientTableState breadCrumbString=\"Patients\" StatsIcon={<Acessab} />\r\n+      <DataTable columns={patientsColumns} data={data.Patients} patientTableState breadCrumbString=\"Patients\" StatsIcon={<AccessibleForward /} />\r\n   );\r\n };\r\n \r\n export default Doctors;\r\n"
                }
            ],
            "date": 1738511395416,
            "name": "Commit-0",
            "content": "import { getAllUsers } from \"@/actions/getUser\";\r\nimport { doctorColumns } from \"./table/DoctorColumns\";\r\nimport { DataTable } from \"./table/Table\";\r\nimport { CustomerService } from \"./service/Data\";\r\nimport { UserInformation } from \"@/types\";\r\nimport { medicalSpecialties } from \"@/lib/constants\";\r\nimport { Suspense } from \"react\";\r\nimport Loading from \"@/app/loading\";\r\n\r\nasync function getData(): Promise<any> {\r\n  // Fetch data from your API here.\r\n  const data = CustomerService.getCustomersXLarge();\r\n\r\n  return (await data).map((ele) => ele);\r\n}\r\n\r\nconst Doctors = async () => {\r\n  const data = await getAllUsers();\r\n\r\n  await new Promise((resolve) => setTimeout(resolve, 500));\r\n\r\n  const primary = data.users as UserInformation[];\r\n\r\n  const doctorUsers = primary.filter((user) =>\r\n    medicalSpecialties.some(\r\n      (medicalrole) => medicalrole.specialty === user.occupation\r\n    )\r\n  );\r\n\r\n  console.log(doctorUsers);\r\n\r\n  return (\r\n      <DataTable columns={doctorColumns} data={data.users} patientTableState={false} />\r\n  );\r\n};\r\n\r\nexport default Doctors;\r\n"
        }
    ]
}