{
    "sourceFile": "frontend/components/settings/settings/change/ChangePassword.tsx",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 4,
            "patches": [
                {
                    "date": 1744372031325,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1744372036940,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -13,11 +13,10 @@\n import CustomFormField, { FormFieldType } from \"@/components/CustomFormField\";\r\n \r\n const ChangePassword = () => {\r\n   const { isLoading ,setResetState} = AccountHook();\r\n-  const { api } = DashboardHook();\r\n-  const { data: session } = useSession();\r\n \r\n+\r\n   const form = useForm<z.infer<typeof ResetPasswordSchema>>({\r\n     resolver: zodResolver(ResetPasswordSchema),\r\n     defaultValues: {},\r\n   });\r\n"
                },
                {
                    "date": 1744372053035,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -11,12 +11,13 @@\n import { useForm } from \"react-hook-form\";\r\n import { zodResolver } from \"@hookform/resolvers/zod\";\r\n import CustomFormField, { FormFieldType } from \"@/components/CustomFormField\";\r\n \r\n-const ChangePassword = () => {\r\n+const ForgetPassword = () => {\r\n   const { isLoading ,setResetState} = AccountHook();\r\n+  const { api } = DashboardHook();\r\n+  const { data: session } = useSession();\r\n \r\n-\r\n   const form = useForm<z.infer<typeof ResetPasswordSchema>>({\r\n     resolver: zodResolver(ResetPasswordSchema),\r\n     defaultValues: {},\r\n   });\r\n@@ -77,5 +78,5 @@\n     </Form>\r\n   );\r\n };\r\n \r\n-export default ChangePassword;\r\n+export default ForgetPassword;\r\n"
                },
                {
                    "date": 1744372112958,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -2,81 +2,155 @@\n import React, { Fragment, useState } from \"react\";\r\n import { z } from \"zod\";\r\n import { Form } from \"@/components/ui/form\";\r\n import SubmitButton from \"@/components/togglers/SubmitButton\";\r\n-import { ResetPasswordSchema } from \"@/lib/vaildation\";\r\n+import { SettingAuthentcationSchema } from \"@/lib/vaildation\";\r\n import { DashboardHook } from \"@/components/context/Dashboardprovider\";\r\n import { AccountHook } from \"@/components/context/AccountProvider\";\r\n import { useSession } from \"next-auth/react\";\r\n import { Button } from \"@/components/ui/button\";\r\n import { useForm } from \"react-hook-form\";\r\n import { zodResolver } from \"@hookform/resolvers/zod\";\r\n import CustomFormField, { FormFieldType } from \"@/components/CustomFormField\";\r\n+import { KeyRound, EyeOff, Eye } from \"lucide-react\";\r\n+import { UseChangePassword } from \"@/actions/mutation\";\r\n+import { useGetUser } from \"@/actions/queries\";\r\n+import { format } from \"date-fns\";\r\n \r\n-const ForgetPassword = () => {\r\n-  const { isLoading ,setResetState} = AccountHook();\r\n+interface AuthenticationDataProps {\r\n+  children: React.ReactNode;\r\n+  innerText: string;\r\n+}\r\n+const ChangePassword = () => {\r\n+  const [oldPasswordShow, setOldPasswordShow] = useState<boolean>(false);\r\n+  const [newPasswordState, setNewPasswordState] = useState<boolean>(false);\r\n+\r\n+  const { isLoading,setResetState } = AccountHook();\r\n   const { api } = DashboardHook();\r\n   const { data: session } = useSession();\r\n \r\n-  const form = useForm<z.infer<typeof ResetPasswordSchema>>({\r\n-    resolver: zodResolver(ResetPasswordSchema),\r\n-    defaultValues: {},\r\n+  const useChange = UseChangePassword(api, session?.user.id);\r\n+\r\n+  const form = useForm<z.infer<typeof SettingAuthentcationSchema>>({\r\n+    resolver: zodResolver(SettingAuthentcationSchema),\r\n+    defaultValues: {\r\n+      password: \"\",\r\n+      newPassword: \"\",\r\n+      newPasswordConfirm: \"\",\r\n+    },\r\n   });\r\n \r\n-  const onSubmit = (values: z.infer<typeof ResetPasswordSchema>) => {\r\n+  const onSubmit = (values: z.infer<typeof SettingAuthentcationSchema>) => {\r\n     const formData = new FormData();\r\n \r\n-    const data = {};\r\n+    const data = {\r\n+      password: values.password,\r\n+      newPassword: values.newPassword,\r\n+      newPasswordConfirm: values.newPasswordConfirm,\r\n+    };\r\n \r\n     Object.entries(data).forEach(([key, value]) => {\r\n       if (value !== undefined && value !== null && value !== \"\") {\r\n         formData.append(key, value as string);\r\n       }\r\n     });\r\n     try {\r\n+      useChange.mutate(formData, {\r\n+        onSuccess: async () => {\r\n+          form.reset();\r\n+        },\r\n+      });\r\n     } catch (error: any) {\r\n-      console.log(`error from Account profile: ${error.message}`);\r\n+      console.log(`error from password change: ${error.message}`);\r\n     }\r\n   };\r\n \r\n+  const ShowPassword = ({\r\n+    state,\r\n+    setState,\r\n+  }: {\r\n+    state: boolean;\r\n+    setState: (value: React.SetStateAction<boolean>) => void;\r\n+  }) => {\r\n+    return (\r\n+      <Fragment>\r\n+        {state ? (\r\n+          <Eye onClick={() => setState(false)} size=\"20px\" cursor=\"pointer\" />\r\n+        ) : (\r\n+          <EyeOff onClick={() => setState(true)} size=\"20px\" cursor=\"pointer\" />\r\n+        )}\r\n+      </Fragment>\r\n+    );\r\n+  };\r\n   return (\r\n     <Form {...form}>\r\n       <form\r\n         onSubmit={form.handleSubmit(onSubmit)}\r\n         className=\"flex flex-col p-8 pb-10 pt-0 w-full space-y-4\"\r\n       >\r\n-        <div className=\"flex items-center mt-4\">\r\n-          <h1 className=\"font-medium mr-1\">Reset Password</h1>\r\n-          <p className=\"text-slate-600 text-sm italic \">note* please write the email you have registerd with</p>\r\n+        <div className=\"flex mt-4\">\r\n+          <h1 className=\"font-medium \">Change Password</h1>\r\n         </div>\r\n         <div className=\"flex flex-col mt-4 space-y-4 px-2\">\r\n           <CustomFormField\r\n+            fieldType={FormFieldType.PASSWORD}\r\n             control={form.control}\r\n-            fieldType={FormFieldType.INPUT}\r\n-            placeholder=\"current email\"\r\n-            name=\"email\"\r\n-            error={form.formState.errors.email}\r\n-            state\r\n-          />\r\n+            name=\"password\"\r\n+            placeholder=\"current password\"\r\n+            type={oldPasswordShow ? \"text\" : \"password\"}\r\n+            error={form.formState.errors.password}\r\n+          >\r\n+            <ShowPassword\r\n+              state={oldPasswordShow}\r\n+              setState={setOldPasswordShow}\r\n+            />\r\n+          </CustomFormField>\r\n+          <CustomFormField\r\n+            fieldType={FormFieldType.PASSWORD}\r\n+            control={form.control}\r\n+            name=\"newPassword\"\r\n+            placeholder=\"new password\"\r\n+            type={newPasswordState ? \"text\" : \"password\"}\r\n+            error={form.formState.errors.newPassword}\r\n+          >\r\n+            <ShowPassword\r\n+              state={newPasswordState}\r\n+              setState={setNewPasswordState}\r\n+            />\r\n+          </CustomFormField>\r\n+          <CustomFormField\r\n+            fieldType={FormFieldType.PASSWORD}\r\n+            control={form.control}\r\n+            name=\"newPasswordConfirm\"\r\n+            placeholder=\"confirm password\"\r\n+            type={newPasswordState ? \"text\" : \"password\"}\r\n+            error={form.formState.errors.password}\r\n+          >\r\n+            <ShowPassword\r\n+              state={newPasswordState}\r\n+              setState={setNewPasswordState}\r\n+            />\r\n+          </CustomFormField>\r\n         </div>\r\n         <div className=\"flex justify-between items-center w-full px-2\">\r\n           <SubmitButton\r\n             className=\"bg-slate-800 text-slate-50 max-h-[25px]\"\r\n             isLoading={isLoading}\r\n             innerText=\" \" // importtant\r\n           >\r\n-            send mail\r\n+            change password\r\n           </SubmitButton>\r\n-          <Button\r\n-            className=\"text-slate-600\"\r\n-            variant=\"link\"\r\n-            onClick={() => setResetState(false)}\r\n-          >\r\n-            return\r\n-          </Button>\r\n+          <div className=\"flex justify-between items-center\">\r\n+            <Button className=\"text-blue-700\" variant=\"link\" onClick={() => setResetState(true)}>\r\n+              forget password\r\n+            </Button>\r\n+            <p className=\"text-slate-600 text-sm\">\r\n+              {format(session?.user.passwordUpdatedAt as Date, \"Pp\")}\r\n+            </p>\r\n+          </div>\r\n         </div>\r\n       </form>\r\n     </Form>\r\n   );\r\n };\r\n \r\n-export default ForgetPassword;\r\n+export default ChangePassword;\r\n"
                },
                {
                    "date": 1744372119274,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -15,12 +15,9 @@\n import { UseChangePassword } from \"@/actions/mutation\";\r\n import { useGetUser } from \"@/actions/queries\";\r\n import { format } from \"date-fns\";\r\n \r\n-interface AuthenticationDataProps {\r\n-  children: React.ReactNode;\r\n-  innerText: string;\r\n-}\r\n+\r\n const ChangePassword = () => {\r\n   const [oldPasswordShow, setOldPasswordShow] = useState<boolean>(false);\r\n   const [newPasswordState, setNewPasswordState] = useState<boolean>(false);\r\n \r\n"
                }
            ],
            "date": 1744372031325,
            "name": "Commit-0",
            "content": "\"use client\";\r\nimport React, { Fragment, useState } from \"react\";\r\nimport { z } from \"zod\";\r\nimport { Form } from \"@/components/ui/form\";\r\nimport SubmitButton from \"@/components/togglers/SubmitButton\";\r\nimport { ResetPasswordSchema } from \"@/lib/vaildation\";\r\nimport { DashboardHook } from \"@/components/context/Dashboardprovider\";\r\nimport { AccountHook } from \"@/components/context/AccountProvider\";\r\nimport { useSession } from \"next-auth/react\";\r\nimport { Button } from \"@/components/ui/button\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { zodResolver } from \"@hookform/resolvers/zod\";\r\nimport CustomFormField, { FormFieldType } from \"@/components/CustomFormField\";\r\n\r\nconst ChangePassword = () => {\r\n  const { isLoading ,setResetState} = AccountHook();\r\n  const { api } = DashboardHook();\r\n  const { data: session } = useSession();\r\n\r\n  const form = useForm<z.infer<typeof ResetPasswordSchema>>({\r\n    resolver: zodResolver(ResetPasswordSchema),\r\n    defaultValues: {},\r\n  });\r\n\r\n  const onSubmit = (values: z.infer<typeof ResetPasswordSchema>) => {\r\n    const formData = new FormData();\r\n\r\n    const data = {};\r\n\r\n    Object.entries(data).forEach(([key, value]) => {\r\n      if (value !== undefined && value !== null && value !== \"\") {\r\n        formData.append(key, value as string);\r\n      }\r\n    });\r\n    try {\r\n    } catch (error: any) {\r\n      console.log(`error from Account profile: ${error.message}`);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Form {...form}>\r\n      <form\r\n        onSubmit={form.handleSubmit(onSubmit)}\r\n        className=\"flex flex-col p-8 pb-10 pt-0 w-full space-y-4\"\r\n      >\r\n        <div className=\"flex items-center mt-4\">\r\n          <h1 className=\"font-medium mr-1\">Reset Password</h1>\r\n          <p className=\"text-slate-600 text-sm italic \">note* please write the email you have registerd with</p>\r\n        </div>\r\n        <div className=\"flex flex-col mt-4 space-y-4 px-2\">\r\n          <CustomFormField\r\n            control={form.control}\r\n            fieldType={FormFieldType.INPUT}\r\n            placeholder=\"current email\"\r\n            name=\"email\"\r\n            error={form.formState.errors.email}\r\n            state\r\n          />\r\n        </div>\r\n        <div className=\"flex justify-between items-center w-full px-2\">\r\n          <SubmitButton\r\n            className=\"bg-slate-800 text-slate-50 max-h-[25px]\"\r\n            isLoading={isLoading}\r\n            innerText=\" \" // importtant\r\n          >\r\n            send mail\r\n          </SubmitButton>\r\n          <Button\r\n            className=\"text-slate-600\"\r\n            variant=\"link\"\r\n            onClick={() => setResetState(false)}\r\n          >\r\n            return\r\n          </Button>\r\n        </div>\r\n      </form>\r\n    </Form>\r\n  );\r\n};\r\n\r\nexport default ChangePassword;\r\n"
        }
    ]
}