{
    "sourceFile": "frontend/components/settings/Profile/account/AccountInfo.tsx",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 2,
            "patches": [
                {
                    "date": 1741036034131,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1741037686362,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -5,9 +5,9 @@\n import SingleInformationRow from \"@/components/patient/SingleInformationRow\";\r\n import CustomSkeleton, { SkeletonType } from \"@/components/CustomSkeleton\";\r\n import { AccountHook } from \"@/components/context/AccountProvider\";\r\n import { EditFilled } from \"@ant-design/icons\";\r\n-import FieldEnumeration from \"../../FieldEnumeration\";\r\n+import FieldEnumeration\r\n import { UseFormReturn } from \"react-hook-form\";\r\n import { z } from \"zod\";\r\n import { AccountSchema } from \"@/lib/vaildation\";\r\n \r\n"
                },
                {
                    "date": 1741039130876,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -5,9 +5,9 @@\n import SingleInformationRow from \"@/components/patient/SingleInformationRow\";\r\n import CustomSkeleton, { SkeletonType } from \"@/components/CustomSkeleton\";\r\n import { AccountHook } from \"@/components/context/AccountProvider\";\r\n import { EditFilled } from \"@ant-design/icons\";\r\n-import FieldEnumeration\r\n+import FieldEnumeration from \"@/components/FieldEnumeration\";\r\n import { UseFormReturn } from \"react-hook-form\";\r\n import { z } from \"zod\";\r\n import { AccountSchema } from \"@/lib/vaildation\";\r\n \r\n@@ -58,9 +58,9 @@\n           {ProfileEdit ? (\r\n             <FieldEnumeration\r\n               form={form}\r\n               name={element.title}\r\n-              value={element.value as string}\r\n+              placeHolder={element.value as string}\r\n             />\r\n           ) : (\r\n             <CustomSkeleton\r\n               SkeletonType={SkeletonType.HEAD}\r\n"
                }
            ],
            "date": 1741036034131,
            "name": "Commit-0",
            "content": "\"use client\";\r\nimport { UserInformation } from \"@/types\";\r\nimport { format } from \"date-fns\";\r\nimport React from \"react\";\r\nimport SingleInformationRow from \"@/components/patient/SingleInformationRow\";\r\nimport CustomSkeleton, { SkeletonType } from \"@/components/CustomSkeleton\";\r\nimport { AccountHook } from \"@/components/context/AccountProvider\";\r\nimport { EditFilled } from \"@ant-design/icons\";\r\nimport FieldEnumeration from \"../../FieldEnumeration\";\r\nimport { UseFormReturn } from \"react-hook-form\";\r\nimport { z } from \"zod\";\r\nimport { AccountSchema } from \"@/lib/vaildation\";\r\n\r\n\r\ninterface AccountInfoProps {\r\n    user:UserInformation | undefined;\r\n    isFetching:boolean;\r\n    form:UseFormReturn<z.infer<typeof AccountSchema>>\r\n}\r\n\r\n\r\nconst AccountInfo = ({\r\n  user,\r\n  isFetching,\r\n  form,\r\n}: AccountInfoProps) => {\r\n  const { ProfileEdit } = AccountHook();\r\n\r\n  const userData = [\r\n    {\r\n      value: user?.name,\r\n      title: \"Account Name\",\r\n      editable: true,\r\n    },\r\n    {\r\n      value: `#${user?._id?.slice(0, 11).toUpperCase()}`,\r\n      title: \"Account Number\",\r\n    },\r\n    {\r\n      value: user?.createdAt && format(user?.createdAt as Date, \"PPpp\"),\r\n      title: \"Date Created\",\r\n    },\r\n    {\r\n      value: user?.updatedAt && format(user?.updatedAt as Date, \"PPpp\"),\r\n      title: \"Last Modified\",\r\n    },\r\n    { value: user?.occupation, editable: true, title: \"occupation\" },\r\n  ];\r\n  return userData.map((element) => {\r\n    if (element.editable) {\r\n      return (\r\n        <SingleInformationRow\r\n          innerText={element.title}\r\n          key={element.title}\r\n          className={`text-sm md:col-span-4 lg:col-span-3 mt-8`}\r\n          editableIcon={<EditFilled className=\"text-[12px] text-blue-800\" />}\r\n        >\r\n          {ProfileEdit ? (\r\n            <FieldEnumeration\r\n              form={form}\r\n              name={element.title}\r\n              value={element.value as string}\r\n            />\r\n          ) : (\r\n            <CustomSkeleton\r\n              SkeletonType={SkeletonType.HEAD}\r\n              innerText={element.value}\r\n              loading={isFetching}\r\n              classname=\"min-w-32 text-sm\"\r\n            />\r\n          )}\r\n        </SingleInformationRow>\r\n      );\r\n    }\r\n    return (\r\n      <SingleInformationRow\r\n        innerText={element.title}\r\n        key={element.title}\r\n        className={`text-sm md:col-span-4 lg:col-span-3 mt-8`}\r\n      >\r\n        <CustomSkeleton\r\n          SkeletonType={SkeletonType.HEAD}\r\n          innerText={element.value}\r\n          loading={isFetching}\r\n          classname=\"min-w-32 text-sm\"\r\n        />\r\n      </SingleInformationRow>\r\n    );\r\n  });\r\n};\r\n\r\nexport default AccountInfo;\r\n"
        }
    ]
}