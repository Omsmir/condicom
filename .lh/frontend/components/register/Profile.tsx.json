{
    "sourceFile": "frontend/components/register/Profile.tsx",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 12,
            "patches": [
                {
                    "date": 1739285776066,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1739285781641,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,18 +1,16 @@\n \"use client\";\r\n-import * as Yup from \"yup\";\r\n import { useForm } from \"react-hook-form\";\r\n import { Form, FormControl } from \"@/components/ui/form\";\r\n import CustomFormField from \"../CustomFormField\";\r\n import { FormFieldType } from \"../CustomFormField\";\r\n import { useState } from \"react\";\r\n-import { User } from \"lucide-react\";\r\n import SubmitButton from \"../togglers/SubmitButton\";\r\n import { PostRegisterSchema } from \"@/lib/vaildation\";\r\n import Swal from \"sweetalert2\";\r\n import { useRouter } from \"next/navigation\";\r\n import Image from \"next/image\";\r\n-import { gender, heigths, medicalSpecialties, weights } from \"@/lib/constants\";\r\n+import { heigths, medicalSpecialties, weights } from \"@/lib/constants\";\r\n import { SelectItem } from \"../ui/select\";\r\n import axios from \"axios\";\r\n import FileUploader from \"../FileUploader\";\r\n import { getSession, signIn, useSession } from \"next-auth/react\";\r\n"
                },
                {
                    "date": 1739285793550,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -19,9 +19,9 @@\n import { UserInformation } from \"@/types\";\r\n \r\n const Profile = () => {\r\n   const router = useRouter();\r\n-  const [isLoading, setIsLoading] = useState(false);\r\n+  \r\n   const { data: session, update } = useSession();\r\n   const { api, contextHolder } = DashboardHook();\r\n   const onSubmit = async (values: Zod.infer<typeof PostRegisterSchema>) => {\r\n     setIsLoading(true);\r\n"
                },
                {
                    "date": 1739285801295,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -21,9 +21,11 @@\n const Profile = () => {\r\n   const router = useRouter();\r\n   \r\n   const { data: session, update } = useSession();\r\n-  const { api, contextHolder } = DashboardHook();\r\n+  const { api, contextHolder ,isLoading} = DashboardHook();\r\n+\r\n+  \r\n   const onSubmit = async (values: Zod.infer<typeof PostRegisterSchema>) => {\r\n     setIsLoading(true);\r\n \r\n     const formData = new FormData();\r\n"
                },
                {
                    "date": 1739285812432,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -23,9 +23,9 @@\n   \r\n   const { data: session, update } = useSession();\r\n   const { api, contextHolder ,isLoading} = DashboardHook();\r\n \r\n-  \r\n+\r\n   const onSubmit = async (values: Zod.infer<typeof PostRegisterSchema>) => {\r\n     setIsLoading(true);\r\n \r\n     const formData = new FormData();\r\n@@ -140,9 +140,8 @@\n           description: \"An unexpected error occurred.\",\r\n         });\r\n       }\r\n     }\r\n-    setIsLoading(false);\r\n   };\r\n   const form = useForm<Zod.infer<typeof PostRegisterSchema>>({\r\n     resolver: zodResolver(PostRegisterSchema),\r\n     defaultValues: {},\r\n"
                },
                {
                    "date": 1739285818126,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -25,9 +25,8 @@\n   const { api, contextHolder ,isLoading} = DashboardHook();\r\n \r\n \r\n   const onSubmit = async (values: Zod.infer<typeof PostRegisterSchema>) => {\r\n-    setIsLoading(true);\r\n \r\n     const formData = new FormData();\r\n \r\n     const data = [\r\n"
                },
                {
                    "date": 1739285824226,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -18,9 +18,8 @@\n import { DashboardHook } from \"../context/Dashboardprovider\";\r\n import { UserInformation } from \"@/types\";\r\n \r\n const Profile = () => {\r\n-  const router = useRouter();\r\n   \r\n   const { data: session, update } = useSession();\r\n   const { api, contextHolder ,isLoading} = DashboardHook();\r\n \r\n@@ -108,9 +107,8 @@\n             },\r\n           }\r\n \r\n         );\r\n-        router.push(\"/dashboard\");\r\n       }\r\n     } catch (error: unknown) {\r\n       if (axios.isAxiosError(error)) {\r\n         if (error.response) {\r\n"
                },
                {
                    "date": 1739285839993,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -85,9 +85,8 @@\n           showConfirmButton: false,\r\n           timer: 2000,\r\n         });\r\n \r\n-        const updatedSession = await getSession();\r\n \r\n         const requiredData = {\r\n           notification:\"newUserHasJoined\",\r\n           user: user\r\n"
                },
                {
                    "date": 1739285848364,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -27,9 +27,9 @@\n   const onSubmit = async (values: Zod.infer<typeof PostRegisterSchema>) => {\r\n \r\n     const formData = new FormData();\r\n \r\n-    const data = [\r\n+    const data = {\r\n       {\r\n         title: \"profileImg\",\r\n         value: values.profileImg[0],\r\n       },\r\n"
                },
                {
                    "date": 1739285859406,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -28,8 +28,9 @@\n \r\n     const formData = new FormData();\r\n \r\n     const data = {\r\n+      profileImg: \r\n       {\r\n         title: \"profileImg\",\r\n         value: values.profileImg[0],\r\n       },\r\n@@ -60,9 +61,9 @@\n       {\r\n         title: \"profileState\",\r\n         value: true,\r\n       },\r\n-    ];\r\n+    }\r\n \r\n     data.map((item: any) => {\r\n       if (item.value) {\r\n         formData.append(item.title, item.value);\r\n"
                },
                {
                    "date": 1739285866200,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -28,9 +28,10 @@\n \r\n     const formData = new FormData();\r\n \r\n     const data = {\r\n-      profileImg: \r\n+      profileImg: values.profileImg[0],\r\n+      \r\n       {\r\n         title: \"profileImg\",\r\n         value: values.profileImg[0],\r\n       },\r\n"
                },
                {
                    "date": 1739285873660,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -29,9 +29,9 @@\n     const formData = new FormData();\r\n \r\n     const data = {\r\n       profileImg: values.profileImg[0],\r\n-      occupation:\r\n+      occupation:val\r\n       {\r\n         title: \"profileImg\",\r\n         value: values.profileImg[0],\r\n       },\r\n"
                },
                {
                    "date": 1739285894858,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -31,9 +31,9 @@\n     const data = {\r\n       profileImg: values.profileImg[0],\r\n       occupation:values.occupation,\r\n       weight:values.weight,\r\n-      height:values.h\r\n+      height:values.height\r\n       {\r\n         title: \"profileImg\",\r\n         value: values.profileImg[0],\r\n       },\r\n"
                }
            ],
            "date": 1739285776066,
            "name": "Commit-0",
            "content": "\"use client\";\r\nimport * as Yup from \"yup\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { Form, FormControl } from \"@/components/ui/form\";\r\nimport CustomFormField from \"../CustomFormField\";\r\nimport { FormFieldType } from \"../CustomFormField\";\r\nimport { useState } from \"react\";\r\nimport { User } from \"lucide-react\";\r\nimport SubmitButton from \"../togglers/SubmitButton\";\r\nimport { PostRegisterSchema } from \"@/lib/vaildation\";\r\nimport Swal from \"sweetalert2\";\r\nimport { useRouter } from \"next/navigation\";\r\nimport Image from \"next/image\";\r\nimport { gender, heigths, medicalSpecialties, weights } from \"@/lib/constants\";\r\nimport { SelectItem } from \"../ui/select\";\r\nimport axios from \"axios\";\r\nimport FileUploader from \"../FileUploader\";\r\nimport { getSession, signIn, useSession } from \"next-auth/react\";\r\nimport { zodResolver } from \"@hookform/resolvers/zod\";\r\nimport { DashboardHook } from \"../context/Dashboardprovider\";\r\nimport { UserInformation } from \"@/types\";\r\n\r\nconst Profile = () => {\r\n  const router = useRouter();\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const { data: session, update } = useSession();\r\n  const { api, contextHolder } = DashboardHook();\r\n  const onSubmit = async (values: Zod.infer<typeof PostRegisterSchema>) => {\r\n    setIsLoading(true);\r\n\r\n    const formData = new FormData();\r\n\r\n    const data = [\r\n      {\r\n        title: \"profileImg\",\r\n        value: values.profileImg[0],\r\n      },\r\n      {\r\n        title: \"occupation\",\r\n        value: values.occupation,\r\n      },\r\n      {\r\n        title: \"weight\",\r\n        value: values.weight,\r\n      },\r\n      {\r\n        title: \"height\",\r\n        value: values.height,\r\n      },\r\n      {\r\n        title: \"address\",\r\n        value: values.address,\r\n      },\r\n      {\r\n        title: \"country\",\r\n        value: `${values.country.label}`,\r\n      },\r\n      {\r\n        title: \"bio\",\r\n        value: values.bio,\r\n      },\r\n      {\r\n        title: \"profileState\",\r\n        value: true,\r\n      },\r\n    ];\r\n\r\n    data.map((item: any) => {\r\n      if (item.value) {\r\n        formData.append(item.title, item.value);\r\n      }\r\n    });\r\n\r\n    try {\r\n      const response = await axios.put(\r\n        `http://localhost:8080/api/auth/${session?.user.id}`,\r\n        formData\r\n      );\r\n\r\n      const user = await response.data.existingUser as UserInformation\r\n      await new Promise((resolve) => setTimeout(resolve, 2000));\r\n\r\n      if (response.status === 200) {\r\n        Swal.fire({\r\n          icon: \"success\",\r\n          title: response.data.msg,\r\n          showConfirmButton: false,\r\n          timer: 2000,\r\n        });\r\n\r\n        const updatedSession = await getSession();\r\n\r\n        const requiredData = {\r\n          notification:\"newUserHasJoined\",\r\n          user: user\r\n        }\r\n\r\n           \r\n        console.log(requiredData)\r\n        await axios.post(\r\n          \"http://localhost:8080/api/notifications/system\",\r\n          {\r\n            notification:\"newUserHasJoined\",\r\n            user:user\r\n          },\r\n          {\r\n            headers: {\r\n              \"Content-Type\": \"application/json\", // Ensures the server reads it as JSON\r\n            },\r\n          }\r\n\r\n        );\r\n        router.push(\"/dashboard\");\r\n      }\r\n    } catch (error: unknown) {\r\n      if (axios.isAxiosError(error)) {\r\n        if (error.response) {\r\n          api.error({\r\n            message: `${error.response.data.msg}`,\r\n            description: \"something went wrong\",\r\n            showProgress: true,\r\n            pauseOnHover: false,\r\n          });\r\n        } else {\r\n          api.error({\r\n            message: \"No Response from Server\",\r\n            description: \"something went wrong\",\r\n            showProgress: true,\r\n            pauseOnHover: false,\r\n          });\r\n        }\r\n      } else if (error instanceof Error) {\r\n        api.error({\r\n          message: \"Unexpected Error\",\r\n          description: \"An unexpected error occurred.\",\r\n        });\r\n      } else {\r\n        api.error({\r\n          message: \"Error: Unknown Error\",\r\n          description: \"An unexpected error occurred.\",\r\n        });\r\n      }\r\n    }\r\n    setIsLoading(false);\r\n  };\r\n  const form = useForm<Zod.infer<typeof PostRegisterSchema>>({\r\n    resolver: zodResolver(PostRegisterSchema),\r\n    defaultValues: {},\r\n  });\r\n\r\n  return (\r\n    <Form {...form}>\r\n      {contextHolder}\r\n      <form\r\n        onSubmit={form.handleSubmit(onSubmit)}\r\n        className=\"flex-1 space-y-12\"\r\n      >\r\n        <div className=\"flex flex-col justify-center items-center\">\r\n          <Image\r\n            src=\"/assets/icons/mark.svg\"\r\n            alt=\"SignIn\"\r\n            width={50}\r\n            height={50}\r\n          />\r\n\r\n          <div className=\"my-4\">\r\n            <h1 className=\"text-2xl font-bold sm:text-4xl text-center capitalize\">\r\n              hello {session?.user.name || \"omar\"}, <br /> Welcome To Profile\r\n            </h1>\r\n          </div>\r\n        </div>\r\n        <div className=\"flex justify-center\">\r\n          <CustomFormField\r\n            control={form.control}\r\n            fieldType={FormFieldType.SKELETON}\r\n            label=\"Select Profile Picture\"\r\n            name=\"profileImg\"\r\n            renderSkeleton={(field) => (\r\n              <FormControl>\r\n                <FileUploader\r\n                  files={field.value}\r\n                  onChange={field.onChange}\r\n                  profileState\r\n                  className=\"flex bg-slate-100 rounded-full size-56 cursor-pointer overflow-hidden\"\r\n                ></FileUploader>\r\n              </FormControl>\r\n            )}\r\n          />\r\n        </div>\r\n        <CustomFormField\r\n          fieldType={FormFieldType.SELECT}\r\n          control={form.control}\r\n          label=\"Occupation\"\r\n          name=\"occupation\"\r\n          placeholder=\"select occupation\"\r\n        >\r\n          {medicalSpecialties.map((value, index) => (\r\n            <SelectItem key={index} value={value.specialty}>\r\n              <div className=\"flex cursor-pointer justify-center items-center\">\r\n                <p className=\"text-md mx-2\">{value.specialty}</p>\r\n              </div>\r\n            </SelectItem>\r\n          ))}\r\n        </CustomFormField>\r\n        <div className=\"flex overflow-hidden\">\r\n          <div className=\"flex-1\">\r\n            <CustomFormField\r\n              fieldType={FormFieldType.SELECT}\r\n              control={form.control}\r\n              label=\"Weight\"\r\n              name=\"weight\"\r\n              placeholder=\"select weight\"\r\n              className=\"max-h-[225px]\"\r\n            >\r\n              {weights.map((value, index) => (\r\n                <SelectItem key={index} value={value.value}>\r\n                  <div className=\"flex cursor-pointer justify-center items-center\">\r\n                    <p className=\"text-md mx-2\">{value.value}</p>\r\n                  </div>\r\n                </SelectItem>\r\n              ))}\r\n            </CustomFormField>\r\n          </div>\r\n          <div className=\"flex-1 ml-1\">\r\n            <CustomFormField\r\n              fieldType={FormFieldType.SELECT}\r\n              control={form.control}\r\n              label=\"Height\"\r\n              name=\"height\"\r\n              placeholder=\"select height\"\r\n              className=\"max-h-[250px]\"\r\n            >\r\n              {heigths.map((value, index) => (\r\n                <SelectItem key={index} value={value}>\r\n                  <div className=\"flex cursor-pointer justify-center items-center\">\r\n                    <p className=\"text-md mx-2\">{value}</p>\r\n                  </div>\r\n                </SelectItem>\r\n              ))}\r\n            </CustomFormField>\r\n          </div>\r\n        </div>\r\n        <div className=\"flex\">\r\n          <div className=\"flex-1\">\r\n            <CustomFormField\r\n              control={form.control}\r\n              fieldType={FormFieldType.INPUT}\r\n              name=\"address\"\r\n              placeholder=\"10 - west lebnone\"\r\n              label=\"Address (Optional)\"\r\n              type=\"text\"\r\n            />\r\n          </div>\r\n          <div className=\"flex-1 ml-1 max-w-[30%]\">\r\n            <CustomFormField\r\n              control={form.control}\r\n              fieldType={FormFieldType.COUNTRY}\r\n              name=\"country\"\r\n              label=\"Country\"\r\n              placeholder=\"select country\"\r\n            />\r\n          </div>\r\n        </div>\r\n        <CustomFormField\r\n          control={form.control}\r\n          fieldType={FormFieldType.TEXTAREA}\r\n          label=\"Biography (Optional)\"\r\n          name=\"bio\"\r\n          placeholder=\"Manages anesthesia during surgeries and pain management.\"\r\n          error={form.formState.errors.bio}\r\n        />\r\n        <SubmitButton\r\n          isLoading={isLoading}\r\n          className=\"bg-[#6366f1] w-full text-slate-50\"\r\n        >\r\n          continue\r\n        </SubmitButton>\r\n      </form>\r\n    </Form>\r\n  );\r\n};\r\n\r\nexport default Profile;\r\n"
        }
    ]
}