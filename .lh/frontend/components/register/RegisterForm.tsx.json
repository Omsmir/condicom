{
    "sourceFile": "frontend/components/register/RegisterForm.tsx",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 10,
            "patches": [
                {
                    "date": 1738694987153,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1738695022802,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -11,9 +11,9 @@\n import { RegisterSchema } from \"@/lib/vaildation\";\r\n import Swal from \"sweetalert2\";\r\n import { useRouter } from \"next/navigation\";\r\n import Image from \"next/image\";\r\n-import { gender } from \"@/lib/constants\";\r\n+import { gender, genders } from \"@/lib/constants\";\r\n import { SelectItem } from \"../ui/select\";\r\n import Link from \"next/link\";\r\n import { QrcodeOutlined } from \"@ant-design/icons\";\r\n import axios from \"axios\";\r\n@@ -257,9 +257,9 @@\n             name=\"gender\"\r\n             placeholder=\"select a gender\"\r\n           >\r\n             {genders.map((value, index) => (\r\n-              <SelectItem key={index} value={value.title} className=\"cursor-pointer transition-colors hover:bg-slate-200\">\r\n+              <SelectItem key={index} value={value} className=\"cursor-pointer transition-colors hover:bg-slate-200\">\r\n                 <div className=\"flex  justify-center items-center \">\r\n                   <Image\r\n                     src={value.image}\r\n                     alt={value.title}\r\n"
                },
                {
                    "date": 1738695028662,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -259,14 +259,9 @@\n           >\r\n             {genders.map((value, index) => (\r\n               <SelectItem key={index} value={value} className=\"cursor-pointer transition-colors hover:bg-slate-200\">\r\n                 <div className=\"flex  justify-center items-center \">\r\n-                  <Image\r\n-                    src={value.image}\r\n-                    alt={value.title}\r\n-                    width={20}\r\n-                    height={20}\r\n-                  />\r\n+                  \r\n                   <p className=\"text-md mx-2\">{value.title}</p>\r\n                 </div>\r\n               </SelectItem>\r\n             ))}\r\n"
                },
                {
                    "date": 1738695043483,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -256,14 +256,19 @@\n             label=\"Gender\"\r\n             name=\"gender\"\r\n             placeholder=\"select a gender\"\r\n           >\r\n-            {genders.map((value, index) => (\r\n-              <SelectItem key={index} value={value} className=\"cursor-pointer transition-colors hover:bg-slate-200\">\r\n-                <div className=\"flex  justify-center items-center \">\r\n-                  \r\n-                  <p className=\"text-md mx-2\">{value.title}</p>\r\n-                </div>\r\n+           {array.map((value, index) => (\r\n+        <SelectItem\r\n+          key={index}\r\n+          value={value}\r\n+          className=\"cursor-pointer transition-colors hover:bg-slate-200 \"\r\n+        >\r\n+          <div className=\"flex justify-center items-center\">\r\n+            <p className=\"text-md text-black mx-2\">{value}</p>\r\n+          </div>\r\n+        </SelectItem>\r\n+      ))}\r\n               </SelectItem>\r\n             ))}\r\n           </CustomFormField>\r\n           <CustomFormField\r\n"
                },
                {
                    "date": 1738695049043,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -256,19 +256,14 @@\n             label=\"Gender\"\r\n             name=\"gender\"\r\n             placeholder=\"select a gender\"\r\n           >\r\n-           {array.map((value, index) => (\r\n-        <SelectItem\r\n-          key={index}\r\n-          value={value}\r\n-          className=\"cursor-pointer transition-colors hover:bg-slate-200 \"\r\n-        >\r\n-          <div className=\"flex justify-center items-center\">\r\n-            <p className=\"text-md text-black mx-2\">{value}</p>\r\n-          </div>\r\n-        </SelectItem>\r\n-      ))}\r\n+            {genders.map((value, index) => (\r\n+              <SelectItem key={index} value={value} className=\"cursor-pointer transition-colors hover:bg-slate-200\">\r\n+                <div className=\"flex  justify-center items-center \">\r\n+                  \r\n+                  <p className=\"text-md mx-2\">{value}</p>\r\n+                </div>\r\n               </SelectItem>\r\n             ))}\r\n           </CustomFormField>\r\n           <CustomFormField\r\n"
                },
                {
                    "date": 1738695056751,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -256,16 +256,19 @@\n             label=\"Gender\"\r\n             name=\"gender\"\r\n             placeholder=\"select a gender\"\r\n           >\r\n-            {genders.map((value, index) => (\r\n-              <SelectItem key={index} value={value} className=\"cursor-pointer transition-colors hover:bg-slate-200\">\r\n-                <div className=\"flex  justify-center items-center \">\r\n-                  \r\n-                  <p className=\"text-md mx-2\">{value}</p>\r\n-                </div>\r\n-              </SelectItem>\r\n-            ))}\r\n+           {array.map((value, index) => (\r\n+        <SelectItem\r\n+          key={index}\r\n+          value={value}\r\n+          className=\"cursor-pointer transition-colors hover:bg-slate-200 \"\r\n+        >\r\n+          <div className=\"flex justify-center items-center\">\r\n+            <p className=\"text-md text-black mx-2\">{value}</p>\r\n+          </div>\r\n+        </SelectItem>\r\n+      ))}\r\n           </CustomFormField>\r\n           <CustomFormField\r\n             control={form.control}\r\n             fieldType={FormFieldType.DATE}\r\n"
                },
                {
                    "date": 1739279852785,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -22,9 +22,9 @@\n const RegisterForm = () => {\r\n   const router = useRouter();\r\n   const [isLoading, setIsLoading] = useState(false);\r\n   const [state, setState] = useState<boolean>(false);\r\n-  const {api,contextHolder} = DashboardHook()\r\n+  const { api, contextHolder } = DashboardHook();\r\n   const onSubmit = async (values: Yup.InferType<typeof RegisterSchema>) => {\r\n     setIsLoading(true);\r\n \r\n     const formData = new FormData();\r\n@@ -81,62 +81,58 @@\n           position: \"center\",\r\n           icon: \"success\",\r\n           title: response.data.msg,\r\n           showConfirmButton: false,\r\n-          timer:2000\r\n-        })\r\n+          timer: 2000,\r\n+        });\r\n \r\n         const email = values.email;\r\n         const password = values.password;\r\n \r\n-        \r\n         const result = await signIn(\"credentials\", {\r\n           redirect: false,\r\n           email,\r\n           password,\r\n         });\r\n-  \r\n+\r\n         if (!result?.ok) {\r\n-         api.error({\r\n-          message: `${result?.error}`,\r\n-          description: \"something went wrong\",\r\n-          showProgress: true,\r\n-          pauseOnHover: false,\r\n-         })\r\n-        } \r\n-         \r\n-          router.push(\"/register/profile\");\r\n-        \r\n-      } \r\n-      \r\n-     \r\n+          api.error({\r\n+            message: `${result?.error}`,\r\n+            description: \"something went wrong\",\r\n+            showProgress: true,\r\n+            pauseOnHover: false,\r\n+          });\r\n+        }\r\n+\r\n+        router.push(\"/register/profile\");\r\n+      }\r\n     } catch (error: unknown) {\r\n       if (axios.isAxiosError(error)) {\r\n         if (error.response) {\r\n           api.error({\r\n-            message: `${error.response.data.msg }`,\r\n+            message: `${error.response.data.msg}`,\r\n             description: \"something went wrong\",\r\n             showProgress: true,\r\n             pauseOnHover: false,\r\n-          })\r\n+          });\r\n         } else {\r\n           api.error({\r\n             message: \"No Response from Server\",\r\n             description: \"something went wrong\",\r\n             showProgress: true,\r\n             pauseOnHover: false,\r\n-          })\r\n+          });\r\n         }\r\n       } else if (error instanceof Error) {\r\n-       api.error({\r\n-        message: \"Unexpected Error\",\r\n-        description: \"An unexpected error occurred.\",\r\n-       })\r\n+        api.error({\r\n+          message: \"Unexpected Error\",\r\n+          description: \"An unexpected error occurred.\",\r\n+        });\r\n       } else {\r\n-       api.error({\r\n-        message: \"Error: Unknown Error\",\r\n-        description: \"An unexpected error occurred.\",\r\n-       })\r\n+        api.error({\r\n+          message: \"Error: Unknown Error\",\r\n+          description: \"An unexpected error occurred.\",\r\n+        });\r\n       }\r\n     }\r\n \r\n     setIsLoading(false);\r\n@@ -256,25 +252,26 @@\n             label=\"Gender\"\r\n             name=\"gender\"\r\n             placeholder=\"select a gender\"\r\n           >\r\n-           {array.map((value, index) => (\r\n-        <SelectItem\r\n-          key={index}\r\n-          value={value}\r\n-          className=\"cursor-pointer transition-colors hover:bg-slate-200 \"\r\n-        >\r\n-          <div className=\"flex justify-center items-center\">\r\n-            <p className=\"text-md text-black mx-2\">{value}</p>\r\n-          </div>\r\n-        </SelectItem>\r\n-      ))}\r\n+            {genders.map((value, index) => (\r\n+              <SelectItem\r\n+                key={index}\r\n+                value={value}\r\n+                className=\"cursor-pointer transition-colors hover:bg-slate-200 \"\r\n+              >\r\n+                <div className=\"flex justify-center items-center\">\r\n+                  <p className=\"text-md text-black mx-2\">{value}</p>\r\n+                </div>\r\n+              </SelectItem>\r\n+            ))}\r\n           </CustomFormField>\r\n           <CustomFormField\r\n             control={form.control}\r\n             fieldType={FormFieldType.DATE}\r\n             label=\"Birthday\"\r\n             name=\"birthDate\"\r\n+            className=\"ml-1\"\r\n           />\r\n         </div>\r\n         <div className=\"flex\">\r\n           <div className=\"w-[70%]\">\r\n"
                },
                {
                    "date": 1739279865315,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -282,9 +282,9 @@\n               name=\"phone\"\r\n               placeholder=\"(+20) 10-1261-5424\"\r\n             />\r\n           </div>\r\n-          <div className=\"ml-2 w-[30%]\">\r\n+          <div className=\"ml-1 w-[30%]\">\r\n             <CustomFormField\r\n               fieldType={FormFieldType.INPUT}\r\n               control={form.control}\r\n               name=\"code\"\r\n"
                },
                {
                    "date": 1739283471228,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,313 @@\n+\"use client\";\r\n+import * as Yup from \"yup\";\r\n+import { yupResolver } from \"@hookform/resolvers/yup\";\r\n+import { useForm } from \"react-hook-form\";\r\n+import { Form } from \"@/components/ui/form\";\r\n+import CustomFormField from \"../CustomFormField\";\r\n+import { FormFieldType } from \"../CustomFormField\";\r\n+import { useState } from \"react\";\r\n+import { User, KeyRound, EyeOff, Eye } from \"lucide-react\";\r\n+import SubmitButton from \"../togglers/SubmitButton\";\r\n+import { RegisterSchema } from \"@/lib/vaildation\";\r\n+import Swal from \"sweetalert2\";\r\n+import { useRouter } from \"next/navigation\";\r\n+import Image from \"next/image\";\r\n+import { gender, genders } from \"@/lib/constants\";\r\n+import { SelectItem } from \"../ui/select\";\r\n+import Link from \"next/link\";\r\n+import { QrcodeOutlined } from \"@ant-design/icons\";\r\n+import axios from \"axios\";\r\n+import { signIn } from \"next-auth/react\";\r\n+import { DashboardHook } from \"../context/Dashboardprovider\";\r\n+const RegisterForm = () => {\r\n+  const router = useRouter();\r\n+  const [isLoading, setIsLoading] = useState(false);\r\n+  const [state, setState] = useState<boolean>(false);\r\n+  const { api, contextHolder } = DashboardHook();\r\n+  const onSubmit = async (values: Yup.InferType<typeof RegisterSchema>) => {\r\n+    setIsLoading(true);\r\n+\r\n+    const formData = new FormData();\r\n+\r\n+    const data = [\r\n+      {\r\n+        title: \"email\",\r\n+        value: values.email,\r\n+      },\r\n+      {\r\n+        title: \"password\",\r\n+        value: values.password,\r\n+      },\r\n+      {\r\n+        title: \"confirmPassword\",\r\n+        value: values.confirmPassword,\r\n+      },\r\n+      {\r\n+        title: \"name\",\r\n+        value: values.name,\r\n+      },\r\n+      {\r\n+        title: \"gender\",\r\n+        value: values.gender,\r\n+      },\r\n+      {\r\n+        title: \"birthDate\",\r\n+        value: values.birthDate,\r\n+      },\r\n+      {\r\n+        title: \"phone\",\r\n+        value: values.phone,\r\n+      },\r\n+      {\r\n+        title: \"code\",\r\n+        value: values.code,\r\n+      },\r\n+    ];\r\n+\r\n+    data.forEach((item: any) => {\r\n+      formData.append(item.title, item.value);\r\n+    });\r\n+\r\n+    console.log(formData);\r\n+\r\n+    try {\r\n+      const response = await axios.post(\r\n+        \"http://localhost:8080/api/auth/register/\",\r\n+        formData\r\n+      );\r\n+\r\n+      if (response.status === 201) {\r\n+    \r\n+\r\n+        const email = values.email;\r\n+        const password = values.password;\r\n+\r\n+        const result = await signIn(\"credentials\", {\r\n+          redirect: false,\r\n+          email,\r\n+          password,\r\n+        });\r\n+\r\n+        if (!result?.ok) {\r\n+          api.error({\r\n+            message: `${result?.error}`,\r\n+            description: \"something went wrong\",\r\n+            showProgress: true,\r\n+            pauseOnHover: false,\r\n+          });\r\n+        }\r\n+\r\n+        router.push(\"/register/profile\");\r\n+      }\r\n+    } catch (error: unknown) {\r\n+      if (axios.isAxiosError(error)) {\r\n+        if (error.response) {\r\n+          api.error({\r\n+            message: `${error.response.data.msg}`,\r\n+            description: \"something went wrong\",\r\n+            showProgress: true,\r\n+            pauseOnHover: false,\r\n+          });\r\n+        } else {\r\n+          api.error({\r\n+            message: \"No Response from Server\",\r\n+            description: \"something went wrong\",\r\n+            showProgress: true,\r\n+            pauseOnHover: false,\r\n+          });\r\n+        }\r\n+      } else if (error instanceof Error) {\r\n+        api.error({\r\n+          message: \"Unexpected Error\",\r\n+          description: \"An unexpected error occurred.\",\r\n+        });\r\n+      } else {\r\n+        api.error({\r\n+          message: \"Error: Unknown Error\",\r\n+          description: \"An unexpected error occurred.\",\r\n+        });\r\n+      }\r\n+    }\r\n+\r\n+    setIsLoading(false);\r\n+  };\r\n+  const form = useForm<Yup.InferType<typeof RegisterSchema>>({\r\n+    resolver: yupResolver(RegisterSchema),\r\n+    defaultValues: {\r\n+      name: \"\",\r\n+      email: \"\",\r\n+      password: \"\",\r\n+      confirmPassword: \"\",\r\n+      code: \"\",\r\n+    },\r\n+  });\r\n+\r\n+  return (\r\n+    <Form {...form}>\r\n+      {contextHolder}\r\n+      <form\r\n+        onSubmit={form.handleSubmit(onSubmit)}\r\n+        className=\"flex-1 space-y-12\"\r\n+      >\r\n+        <div className=\"flex flex-col justify-center items-center\">\r\n+          <Image\r\n+            src=\"/assets/icons/mark.svg\"\r\n+            alt=\"SignIn\"\r\n+            width={50}\r\n+            height={50}\r\n+          />\r\n+\r\n+          <div className=\"my-4\">\r\n+            <h1 className=\"text-2xl font-bold sm:text-4xl text-center\">\r\n+              Welcome To Dashboard\r\n+            </h1>\r\n+          </div>\r\n+        </div>\r\n+        <CustomFormField\r\n+          control={form.control}\r\n+          Lucide={<User className=\"dark:text-dark-600\" />}\r\n+          placeholder=\"username\"\r\n+          label=\"Username\"\r\n+          fieldType={FormFieldType.INPUT}\r\n+          name=\"name\"\r\n+          error={form.formState.errors.name}\r\n+          state\r\n+        />\r\n+        <CustomFormField\r\n+          control={form.control}\r\n+          Lucide={<User className=\"dark:text-dark-600\" />}\r\n+          placeholder=\"enter your email\"\r\n+          label=\"Email address\"\r\n+          fieldType={FormFieldType.INPUT}\r\n+          name=\"email\"\r\n+          error={form.formState.errors.email}\r\n+          state\r\n+        />\r\n+\r\n+        <CustomFormField\r\n+          control={form.control}\r\n+          Lucide={<KeyRound className=\"dark:text-dark-600\" />}\r\n+          placeholder=\"enter password\"\r\n+          label=\"Password\"\r\n+          fieldType={FormFieldType.PASSWORD}\r\n+          type={state ? \"text\" : \"password\"}\r\n+          error={form.formState.errors.password}\r\n+          children={\r\n+            <>\r\n+              {state ? (\r\n+                <Eye\r\n+                  onClick={() => setState(false)}\r\n+                  size=\"20px\"\r\n+                  cursor=\"pointer\"\r\n+                />\r\n+              ) : (\r\n+                <EyeOff\r\n+                  onClick={() => setState(true)}\r\n+                  size=\"20px\"\r\n+                  cursor=\"pointer\"\r\n+                />\r\n+              )}\r\n+            </>\r\n+          }\r\n+          name=\"password\"\r\n+        />\r\n+\r\n+        <CustomFormField\r\n+          control={form.control}\r\n+          Lucide={<KeyRound className=\"dark:text-dark-600\" />}\r\n+          placeholder=\"confirm password\"\r\n+          label=\"Confirm password\"\r\n+          fieldType={FormFieldType.PASSWORD}\r\n+          type={state ? \"text\" : \"password\"}\r\n+          error={form.formState.errors.confirmPassword}\r\n+          children={\r\n+            <>\r\n+              {state ? (\r\n+                <Eye\r\n+                  onClick={() => setState(false)}\r\n+                  size=\"20px\"\r\n+                  cursor=\"pointer\"\r\n+                />\r\n+              ) : (\r\n+                <EyeOff\r\n+                  onClick={() => setState(true)}\r\n+                  size=\"20px\"\r\n+                  cursor=\"pointer\"\r\n+                />\r\n+              )}\r\n+            </>\r\n+          }\r\n+          name=\"confirmPassword\"\r\n+        />\r\n+        <div className=\"flex overflow-hidden\">\r\n+          <CustomFormField\r\n+            fieldType={FormFieldType.SELECT}\r\n+            control={form.control}\r\n+            label=\"Gender\"\r\n+            name=\"gender\"\r\n+            placeholder=\"select a gender\"\r\n+          >\r\n+            {genders.map((value, index) => (\r\n+              <SelectItem\r\n+                key={index}\r\n+                value={value}\r\n+                className=\"cursor-pointer transition-colors hover:bg-slate-200 \"\r\n+              >\r\n+                <div className=\"flex justify-center items-center\">\r\n+                  <p className=\"text-md text-black mx-2\">{value}</p>\r\n+                </div>\r\n+              </SelectItem>\r\n+            ))}\r\n+          </CustomFormField>\r\n+          <CustomFormField\r\n+            control={form.control}\r\n+            fieldType={FormFieldType.DATE}\r\n+            label=\"Birthday\"\r\n+            name=\"birthDate\"\r\n+            className=\"ml-1\"\r\n+          />\r\n+        </div>\r\n+        <div className=\"flex\">\r\n+          <div className=\"w-[70%]\">\r\n+            <CustomFormField\r\n+              fieldType={FormFieldType.PHONE}\r\n+              control={form.control}\r\n+              label=\"Enter Your Phone\"\r\n+              name=\"phone\"\r\n+              placeholder=\"(+20) 10-1261-5424\"\r\n+            />\r\n+          </div>\r\n+          <div className=\"ml-1 w-[30%]\">\r\n+            <CustomFormField\r\n+              fieldType={FormFieldType.INPUT}\r\n+              control={form.control}\r\n+              name=\"code\"\r\n+              placeholder=\"B123C12D\"\r\n+              type=\"text\"\r\n+              label=\"Code\"\r\n+              Lucide={<QrcodeOutlined />}\r\n+              state\r\n+              error={form.formState.errors.code}\r\n+            />\r\n+          </div>\r\n+        </div>\r\n+        <SubmitButton\r\n+          isLoading={isLoading}\r\n+          className=\"bg-[#6366f1] w-full text-slate-50\"\r\n+        >\r\n+          Register\r\n+        </SubmitButton>\r\n+        <div className=\"flex justify-between\">\r\n+          <p className=\"text-sm text-slate-500\">have account?</p>\r\n+          <Link href={\"/\"}>\r\n+            <p className=\"text-sky-700 text-sm hover:underline\">\r\n+              return to login\r\n+            </p>\r\n+          </Link>\r\n+        </div>\r\n+      </form>\r\n+    </Form>\r\n+  );\r\n+};\r\n+\r\n+export default RegisterForm;\r\n"
                },
                {
                    "date": 1739283500771,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -29,9 +29,9 @@\n \r\n     const formData = new FormData();\r\n \r\n     const data = [\r\n-     \r\n+     ema\r\n       {\r\n         title: \"password\",\r\n         value: values.password,\r\n       },\r\n"
                },
                {
                    "date": 1739283562058,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -34,9 +34,9 @@\n      password:values.password,\r\n      confirmPassword:values.confirmPassword,\r\n      name:values.name,\r\n      gender:values.gender,\r\n-     birthDate:values.\r\n+     birthDate:values.b\r\n       {\r\n         title: \"password\",\r\n         value: values.password,\r\n       },\r\n"
                }
            ],
            "date": 1738694987153,
            "name": "Commit-0",
            "content": "\"use client\";\r\nimport * as Yup from \"yup\";\r\nimport { yupResolver } from \"@hookform/resolvers/yup\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { Form } from \"@/components/ui/form\";\r\nimport CustomFormField from \"../CustomFormField\";\r\nimport { FormFieldType } from \"../CustomFormField\";\r\nimport { useState } from \"react\";\r\nimport { User, KeyRound, EyeOff, Eye } from \"lucide-react\";\r\nimport SubmitButton from \"../togglers/SubmitButton\";\r\nimport { RegisterSchema } from \"@/lib/vaildation\";\r\nimport Swal from \"sweetalert2\";\r\nimport { useRouter } from \"next/navigation\";\r\nimport Image from \"next/image\";\r\nimport { gender } from \"@/lib/constants\";\r\nimport { SelectItem } from \"../ui/select\";\r\nimport Link from \"next/link\";\r\nimport { QrcodeOutlined } from \"@ant-design/icons\";\r\nimport axios from \"axios\";\r\nimport { signIn } from \"next-auth/react\";\r\nimport { DashboardHook } from \"../context/Dashboardprovider\";\r\nconst RegisterForm = () => {\r\n  const router = useRouter();\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [state, setState] = useState<boolean>(false);\r\n  const {api,contextHolder} = DashboardHook()\r\n  const onSubmit = async (values: Yup.InferType<typeof RegisterSchema>) => {\r\n    setIsLoading(true);\r\n\r\n    const formData = new FormData();\r\n\r\n    const data = [\r\n      {\r\n        title: \"email\",\r\n        value: values.email,\r\n      },\r\n      {\r\n        title: \"password\",\r\n        value: values.password,\r\n      },\r\n      {\r\n        title: \"confirmPassword\",\r\n        value: values.confirmPassword,\r\n      },\r\n      {\r\n        title: \"name\",\r\n        value: values.name,\r\n      },\r\n      {\r\n        title: \"gender\",\r\n        value: values.gender,\r\n      },\r\n      {\r\n        title: \"birthDate\",\r\n        value: values.birthDate,\r\n      },\r\n      {\r\n        title: \"phone\",\r\n        value: values.phone,\r\n      },\r\n      {\r\n        title: \"code\",\r\n        value: values.code,\r\n      },\r\n    ];\r\n\r\n    data.forEach((item: any) => {\r\n      formData.append(item.title, item.value);\r\n    });\r\n\r\n    console.log(formData);\r\n\r\n    try {\r\n      const response = await axios.post(\r\n        \"http://localhost:8080/api/auth/register/\",\r\n        formData\r\n      );\r\n\r\n      if (response.status === 201) {\r\n        Swal.fire({\r\n          position: \"center\",\r\n          icon: \"success\",\r\n          title: response.data.msg,\r\n          showConfirmButton: false,\r\n          timer:2000\r\n        })\r\n\r\n        const email = values.email;\r\n        const password = values.password;\r\n\r\n        \r\n        const result = await signIn(\"credentials\", {\r\n          redirect: false,\r\n          email,\r\n          password,\r\n        });\r\n  \r\n        if (!result?.ok) {\r\n         api.error({\r\n          message: `${result?.error}`,\r\n          description: \"something went wrong\",\r\n          showProgress: true,\r\n          pauseOnHover: false,\r\n         })\r\n        } \r\n         \r\n          router.push(\"/register/profile\");\r\n        \r\n      } \r\n      \r\n     \r\n    } catch (error: unknown) {\r\n      if (axios.isAxiosError(error)) {\r\n        if (error.response) {\r\n          api.error({\r\n            message: `${error.response.data.msg }`,\r\n            description: \"something went wrong\",\r\n            showProgress: true,\r\n            pauseOnHover: false,\r\n          })\r\n        } else {\r\n          api.error({\r\n            message: \"No Response from Server\",\r\n            description: \"something went wrong\",\r\n            showProgress: true,\r\n            pauseOnHover: false,\r\n          })\r\n        }\r\n      } else if (error instanceof Error) {\r\n       api.error({\r\n        message: \"Unexpected Error\",\r\n        description: \"An unexpected error occurred.\",\r\n       })\r\n      } else {\r\n       api.error({\r\n        message: \"Error: Unknown Error\",\r\n        description: \"An unexpected error occurred.\",\r\n       })\r\n      }\r\n    }\r\n\r\n    setIsLoading(false);\r\n  };\r\n  const form = useForm<Yup.InferType<typeof RegisterSchema>>({\r\n    resolver: yupResolver(RegisterSchema),\r\n    defaultValues: {\r\n      name: \"\",\r\n      email: \"\",\r\n      password: \"\",\r\n      confirmPassword: \"\",\r\n      code: \"\",\r\n    },\r\n  });\r\n\r\n  return (\r\n    <Form {...form}>\r\n      {contextHolder}\r\n      <form\r\n        onSubmit={form.handleSubmit(onSubmit)}\r\n        className=\"flex-1 space-y-12\"\r\n      >\r\n        <div className=\"flex flex-col justify-center items-center\">\r\n          <Image\r\n            src=\"/assets/icons/mark.svg\"\r\n            alt=\"SignIn\"\r\n            width={50}\r\n            height={50}\r\n          />\r\n\r\n          <div className=\"my-4\">\r\n            <h1 className=\"text-2xl font-bold sm:text-4xl text-center\">\r\n              Welcome To Dashboard\r\n            </h1>\r\n          </div>\r\n        </div>\r\n        <CustomFormField\r\n          control={form.control}\r\n          Lucide={<User className=\"dark:text-dark-600\" />}\r\n          placeholder=\"username\"\r\n          label=\"Username\"\r\n          fieldType={FormFieldType.INPUT}\r\n          name=\"name\"\r\n          error={form.formState.errors.name}\r\n          state\r\n        />\r\n        <CustomFormField\r\n          control={form.control}\r\n          Lucide={<User className=\"dark:text-dark-600\" />}\r\n          placeholder=\"enter your email\"\r\n          label=\"Email address\"\r\n          fieldType={FormFieldType.INPUT}\r\n          name=\"email\"\r\n          error={form.formState.errors.email}\r\n          state\r\n        />\r\n\r\n        <CustomFormField\r\n          control={form.control}\r\n          Lucide={<KeyRound className=\"dark:text-dark-600\" />}\r\n          placeholder=\"enter password\"\r\n          label=\"Password\"\r\n          fieldType={FormFieldType.PASSWORD}\r\n          type={state ? \"text\" : \"password\"}\r\n          error={form.formState.errors.password}\r\n          children={\r\n            <>\r\n              {state ? (\r\n                <Eye\r\n                  onClick={() => setState(false)}\r\n                  size=\"20px\"\r\n                  cursor=\"pointer\"\r\n                />\r\n              ) : (\r\n                <EyeOff\r\n                  onClick={() => setState(true)}\r\n                  size=\"20px\"\r\n                  cursor=\"pointer\"\r\n                />\r\n              )}\r\n            </>\r\n          }\r\n          name=\"password\"\r\n        />\r\n\r\n        <CustomFormField\r\n          control={form.control}\r\n          Lucide={<KeyRound className=\"dark:text-dark-600\" />}\r\n          placeholder=\"confirm password\"\r\n          label=\"Confirm password\"\r\n          fieldType={FormFieldType.PASSWORD}\r\n          type={state ? \"text\" : \"password\"}\r\n          error={form.formState.errors.confirmPassword}\r\n          children={\r\n            <>\r\n              {state ? (\r\n                <Eye\r\n                  onClick={() => setState(false)}\r\n                  size=\"20px\"\r\n                  cursor=\"pointer\"\r\n                />\r\n              ) : (\r\n                <EyeOff\r\n                  onClick={() => setState(true)}\r\n                  size=\"20px\"\r\n                  cursor=\"pointer\"\r\n                />\r\n              )}\r\n            </>\r\n          }\r\n          name=\"confirmPassword\"\r\n        />\r\n        <div className=\"flex overflow-hidden\">\r\n          <CustomFormField\r\n            fieldType={FormFieldType.SELECT}\r\n            control={form.control}\r\n            label=\"Gender\"\r\n            name=\"gender\"\r\n            placeholder=\"select a gender\"\r\n          >\r\n            {genders.map((value, index) => (\r\n              <SelectItem key={index} value={value.title} className=\"cursor-pointer transition-colors hover:bg-slate-200\">\r\n                <div className=\"flex  justify-center items-center \">\r\n                  <Image\r\n                    src={value.image}\r\n                    alt={value.title}\r\n                    width={20}\r\n                    height={20}\r\n                  />\r\n                  <p className=\"text-md mx-2\">{value.title}</p>\r\n                </div>\r\n              </SelectItem>\r\n            ))}\r\n          </CustomFormField>\r\n          <CustomFormField\r\n            control={form.control}\r\n            fieldType={FormFieldType.DATE}\r\n            label=\"Birthday\"\r\n            name=\"birthDate\"\r\n          />\r\n        </div>\r\n        <div className=\"flex\">\r\n          <div className=\"w-[70%]\">\r\n            <CustomFormField\r\n              fieldType={FormFieldType.PHONE}\r\n              control={form.control}\r\n              label=\"Enter Your Phone\"\r\n              name=\"phone\"\r\n              placeholder=\"(+20) 10-1261-5424\"\r\n            />\r\n          </div>\r\n          <div className=\"ml-2 w-[30%]\">\r\n            <CustomFormField\r\n              fieldType={FormFieldType.INPUT}\r\n              control={form.control}\r\n              name=\"code\"\r\n              placeholder=\"B123C12D\"\r\n              type=\"text\"\r\n              label=\"Code\"\r\n              Lucide={<QrcodeOutlined />}\r\n              state\r\n              error={form.formState.errors.code}\r\n            />\r\n          </div>\r\n        </div>\r\n        <SubmitButton\r\n          isLoading={isLoading}\r\n          className=\"bg-[#6366f1] w-full text-slate-50\"\r\n        >\r\n          Register\r\n        </SubmitButton>\r\n        <div className=\"flex justify-between\">\r\n          <p className=\"text-sm text-slate-500\">have account?</p>\r\n          <Link href={\"/\"}>\r\n            <p className=\"text-sky-700 text-sm hover:underline\">\r\n              return to login\r\n            </p>\r\n          </Link>\r\n        </div>\r\n      </form>\r\n    </Form>\r\n  );\r\n};\r\n\r\nexport default RegisterForm;\r\n"
        }
    ]
}