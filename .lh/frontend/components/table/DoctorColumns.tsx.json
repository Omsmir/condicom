{
    "sourceFile": "frontend/components/table/DoctorColumns.tsx",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 5,
            "patches": [
                {
                    "date": 1738514246412,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1738514254471,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -21,8 +21,9 @@\n import { Button } from \"../ui/button\";\r\n import clsx from \"clsx\";\r\n import { CheckCircleFilled, CloseCircleFilled } from \"@ant-design/icons\";\r\n import { format } from \"date-fns\";\r\n+import { DeleteHandler } from \"../togglers/Handlers\";\r\n \r\n export type Doctor = {\r\n   _id: string;\r\n   name: string;\r\n@@ -188,9 +189,9 @@\n                 View\r\n               </DropdownMenuItem>\r\n             </Link>\r\n             <DeleteHandler\r\n-                      id={task._id}\r\n+                      id={id}\r\n                       apiString=\"appointment\"\r\n                       messagePopup=\"do you want to delete the appointment\"\r\n                       className=\"absolute text-slate-50 right-0 hidden hover:text-red-800 transition-colors delete\"\r\n                       name=\"x\"\r\n"
                },
                {
                    "date": 1738514270654,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -190,10 +190,10 @@\n               </DropdownMenuItem>\r\n             </Link>\r\n             <DeleteHandler\r\n                       id={id}\r\n-                      apiString=\"appointment\"\r\n-                      messagePopup=\"do you want to delete the appointment\"\r\n+                      apiString=\"patient\"\r\n+                      messagePopup=\"do you want to delete the patient\"\r\n                       className=\"absolute text-slate-50 right-0 hidden hover:text-red-800 transition-colors delete\"\r\n                       name=\"x\"\r\n                     />\r\n           </DropdownMenuContent>\r\n"
                },
                {
                    "date": 1738514279914,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -193,9 +193,9 @@\n                       id={id}\r\n                       apiString=\"patient\"\r\n                       messagePopup=\"do you want to delete the patient\"\r\n                       className=\"absolute text-slate-50 right-0 hidden hover:text-red-800 transition-colors delete\"\r\n-                      name=\"x\"\r\n+                      nam\r\n                     />\r\n           </DropdownMenuContent>\r\n         </DropdownMenu>\r\n       );\r\n"
                },
                {
                    "date": 1738514314415,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -193,9 +193,9 @@\n                       id={id}\r\n                       apiString=\"patient\"\r\n                       messagePopup=\"do you want to delete the patient\"\r\n                       className=\"absolute text-slate-50 right-0 hidden hover:text-red-800 transition-colors delete\"\r\n-                      nam\r\n+                      name=\"delete\"\r\n                     />\r\n           </DropdownMenuContent>\r\n         </DropdownMenu>\r\n       );\r\n"
                },
                {
                    "date": 1738514357591,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -188,15 +188,9 @@\n               <DropdownMenuItem className=\"cursor-pointer hover:bg-slate-200 dark:hover:bg-[var(--sidebar-background)]\">\r\n                 View\r\n               </DropdownMenuItem>\r\n             </Link>\r\n-            <DeleteHandler\r\n-                      id={id}\r\n-                      apiString=\"patient\"\r\n-                      messagePopup=\"do you want to delete the patient\"\r\n-                      className=\"absolute text-slate-50 right-0 hidden hover:text-red-800 transition-colors delete\"\r\n-                      name=\"delete\"\r\n-                    />\r\n+\r\n           </DropdownMenuContent>\r\n         </DropdownMenu>\r\n       );\r\n     },\r\n"
                }
            ],
            "date": 1738514246412,
            "name": "Commit-0",
            "content": "\"use client\";\r\n\r\nimport { ColumnDef } from \"@tanstack/react-table\";\r\nimport Link from \"next/link\";\r\nimport {\r\n  MoreHorizontal,\r\n  ArrowUpDown,\r\n  ClipboardList,\r\n  PenTool,\r\n  UserPen,\r\n  Eye,\r\n  House,\r\n} from \"lucide-react\";\r\nimport Image from \"next/image\";\r\nimport {\r\n  DropdownMenu,\r\n  DropdownMenuContent,\r\n  DropdownMenuItem,\r\n  DropdownMenuTrigger,\r\n} from \"../ui/dropdown-menu\";\r\nimport { Button } from \"../ui/button\";\r\nimport clsx from \"clsx\";\r\nimport { CheckCircleFilled, CloseCircleFilled } from \"@ant-design/icons\";\r\nimport { format } from \"date-fns\";\r\n\r\nexport type Doctor = {\r\n  _id: string;\r\n  name: string;\r\n  role: string;\r\n  email: string;\r\n  verified: boolean;\r\n  activity?: Date;\r\n  birthDate: Date | undefined;\r\n  phone: string;\r\n  profileImg: { url: string };\r\n  occupation: string;\r\n};\r\n\r\nexport const doctorColumns: ColumnDef<Doctor>[] = [\r\n  {\r\n    accessorKey: \"name\",\r\n    header: () => <p className=\"text-slate-500\">USER</p>,\r\n    cell: ({ row }) => {\r\n      const name = row.original.name;\r\n      const occupation = row.original.occupation;\r\n      return (\r\n        <div className=\" flex items-center font-medium\">\r\n        <div className=\"flex size-10 mr-2 rounded-full overflow-hidden \">\r\n          <Image\r\n            src={\r\n              row.original.profileImg?.url || \"/assets/images/dr-peter.png\"\r\n            }\r\n            alt=\"profile\"\r\n            width={34}\r\n            height={34}\r\n            className=\"w-full h-full object-cover object-center\"\r\n          />\r\n          </div>\r\n          <div className=\"flex flex-col justify-center items-start\">\r\n            <h1 className=\"font-medium capitalize\">{name}</h1>\r\n            <p className=\"text-[12px] text-slate-500\">{occupation}</p>\r\n          </div>\r\n        </div>\r\n      );\r\n    },\r\n  },\r\n  {\r\n    accessorKey: \"userRole\",\r\n    header: ({ column }) => {\r\n      return (\r\n        <Button\r\n          className=\"pl-0\"\r\n          onClick={() => column.toggleSorting(column.getIsSorted() === \"asc\")}\r\n        >\r\n          <p className=\"text-[13px] text-slate-500\">USER ROLE</p>\r\n          <ArrowUpDown\r\n            className={clsx(\"ml-2 h-4 w-4\", {\r\n              \"text-blue-900\": column.getIsSorted() === \"asc\",\r\n            })}\r\n          />\r\n        </Button>\r\n      );\r\n    },\r\n    cell: ({ row }) => {\r\n      const role = row.original.role;\r\n      switch (role) {\r\n        case \"Admin\":\r\n          return (\r\n            <div className=\"flex items-center rounded-md py-1 px-2 bg-blue-100 w-fit\">\r\n              <ClipboardList className=\"text-blue-700 mr-1\" size={14} />\r\n              <p className=\"text-blue-700 text-[13px] \">{role}</p>\r\n            </div>\r\n          );\r\n        case \"Senior Consultant\":\r\n          return (\r\n            <div className=\"flex items-center rounded-md py-1 px-2 bg-purple-100 w-fit\">\r\n              <PenTool className=\"text-purple-700 mr-1\" size={14} />\r\n              <p className=\"text-purple-700 text-[13px] \">{role}</p>\r\n            </div>\r\n          );\r\n        case \"Charge Nurse\":\r\n        case \"Head Nurse\":\r\n          return (\r\n            <div className=\"flex items-center rounded-md py-1 px-2 bg-cyan-100 w-fit\">\r\n              <UserPen className=\"text-cyan-700 mr-1\" size={14} />\r\n              <p className=\"text-cyan-700 text-[13px] \">{role}</p>\r\n            </div>\r\n          );\r\n        case \"Resident Doctor\":\r\n        case \"Intern Doctor\":\r\n          return (\r\n            <div className=\"flex items-center rounded-md py-1 px-2 bg-green-100 w-fit\">\r\n              <House className=\"text-green-700 mr-1\" size={14} />\r\n              <p className=\"text-green-700 text-[13px] \">{role}</p>\r\n            </div>\r\n          );\r\n\r\n        case \"Head Secretary\":\r\n        case \"Charge Secretary\":\r\n          return <div className=\"text-indigo-500\">{role}</div>;\r\n        default:\r\n          return (\r\n            <div className=\"flex items-center rounded-md py-1 px-2 bg-slate-100 w-fit\">\r\n              <Eye className=\"text-slate-700 mr-1\" size={14} />\r\n              <p className=\"text-slate-700 text-[11px] \">User</p>\r\n            </div>\r\n          );\r\n      }\r\n    },\r\n  },\r\n  {\r\n    accessorKey: \"email\",\r\n    header: () => <p className=\"text-slate-500\">EMAIL</p>,\r\n    cell: ({ row }) => {\r\n      return <p className=\"text-slate-600\">{row.getValue(\"email\")}</p>;\r\n    },\r\n  },\r\n  {\r\n    accessorKey: \"birthDate\",\r\n    header: () => <p className=\"text-slate-500\">BIRTH</p>,\r\n    cell: ({ row }) => {\r\n      const BirthDate = format(row.original.birthDate as Date, \"P\");\r\n      return <p className=\"text-slate-500\">{BirthDate}</p>;\r\n    },\r\n  },\r\n  {\r\n    accessorKey: \"phone\",\r\n    header: () => <p className=\"text-slate-500\">CONTACT</p>,\r\n    cell: ({ row }) => {\r\n      const phoneNumber = row.original.phone;\r\n      return <p className=\"text-slate-500\">{phoneNumber.split(\"+\")}</p>;\r\n    },\r\n  },\r\n  {\r\n    accessorKey: \"verified\",\r\n    header: () => <p className=\"text-slate-500\">VERIFIED</p>,\r\n    cell: ({ row }) => {\r\n      const verified = row.getValue(\"verified\");\r\n      return verified ? (\r\n        <div className=\"flex items-center justify-between px-4\">\r\n          <CheckCircleFilled className=\"text-green-700\" />\r\n        </div>\r\n      ) : (\r\n        <div className=\"flex items-center justify-between px-4\">\r\n          <CloseCircleFilled className=\"text-red-700\" />\r\n        </div>\r\n      );\r\n    },\r\n  },\r\n  {\r\n    id: \"actions\",\r\n    cell: ({ row }) => {\r\n      const id = row.original._id;\r\n      return (\r\n        <DropdownMenu>\r\n          <DropdownMenuTrigger asChild>\r\n            <Button variant=\"ghost\" className=\"h-8 w-8 p-0\">\r\n              <span className=\"sr-only\">Open menu</span>\r\n              <MoreHorizontal className=\"h-4 w-4\" />\r\n            </Button>\r\n          </DropdownMenuTrigger>\r\n          <DropdownMenuContent\r\n            align=\"end\"\r\n            className=\"bg-slate-100 dark:bg-[var(--sidebar-accent)] p-0 border-0\"\r\n          >\r\n            <Link href={`/dashboard/doctors/${id}`}>\r\n              <DropdownMenuItem className=\"cursor-pointer hover:bg-slate-200 dark:hover:bg-[var(--sidebar-background)]\">\r\n                View\r\n              </DropdownMenuItem>\r\n            </Link>\r\n            <DeleteHandler\r\n                      id={task._id}\r\n                      apiString=\"appointment\"\r\n                      messagePopup=\"do you want to delete the appointment\"\r\n                      className=\"absolute text-slate-50 right-0 hidden hover:text-red-800 transition-colors delete\"\r\n                      name=\"x\"\r\n                    />\r\n          </DropdownMenuContent>\r\n        </DropdownMenu>\r\n      );\r\n    },\r\n  },\r\n];\r\n"
        }
    ]
}