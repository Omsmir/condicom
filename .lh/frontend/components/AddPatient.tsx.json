{
    "sourceFile": "frontend/components/AddPatient.tsx",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 41,
            "patches": [
                {
                    "date": 1738505168621,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1738505268847,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -2,16 +2,16 @@\n import React from \"react\";\r\n import { useForm } from \"react-hook-form\";\r\n import { Form } from \"@/components/ui/form\";\r\n import { useState } from \"react\";\r\n-import SubmitButton\r\n+import SubmitButton from \"./togglers/SubmitButton\";\r\n import { patientSchema } from \"@/lib/vaildation\";\r\n import { useRouter } from \"next/navigation\";\r\n import axios from \"axios\";\r\n import { zodResolver } from \"@hookform/resolvers/zod\";\r\n import { Button } from \"./ui/button\";\r\n import { useSession } from \"next-auth/react\";\r\n-import { DashboardHook } from \"./context/DashboardProvider\";\r\n+import { DashboardHook\r\n import { Drawer } from \"@mui/material\";\r\n import { PatientHook } from \"./context/PatientProvider\";\r\n import { Steps } from \"antd\";\r\n import { lato } from \"@/fonts/fonts\";\r\n"
                },
                {
                    "date": 1738505278100,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -9,16 +9,16 @@\n import axios from \"axios\";\r\n import { zodResolver } from \"@hookform/resolvers/zod\";\r\n import { Button } from \"./ui/button\";\r\n import { useSession } from \"next-auth/react\";\r\n-import { DashboardHook\r\n+import { DashboardHook } from \"./context/Dashboardprovider\";\r\n import { Drawer } from \"@mui/material\";\r\n import { PatientHook } from \"./context/PatientProvider\";\r\n import { Steps } from \"antd\";\r\n import { lato } from \"@/fonts/fonts\";\r\n-import FirstStepForm from \"./patient/createPatient/firstStepForm\";\r\n-import SecondStepForm from \"./patient/createPatient/SecondStepForm\";\r\n-import ThirdStepForm from \"./patient/createPatient/ThirdStepForm\";\r\n+// import FirstStepForm from \"./patient/createPatient/firstStepForm\";\r\n+// import SecondStepForm from \"./patient/createPatient/SecondStepForm\";\r\n+// import ThirdStepForm from \"./patient/createPatient/ThirdStepForm\";\r\n import { OverlayScrollbarsComponent } from \"overlayscrollbars-react\";\r\n import \"overlayscrollbars/overlayscrollbars.css\";\r\n import Swal from \"sweetalert2\";\r\n import { CreateNotification, userRole } from \"./Togglers/TopBarEvents\";\r\n"
                },
                {
                    "date": 1738505286184,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -13,9 +13,9 @@\n import { DashboardHook } from \"./context/Dashboardprovider\";\r\n import { Drawer } from \"@mui/material\";\r\n import { PatientHook } from \"./context/PatientProvider\";\r\n import { Steps } from \"antd\";\r\n-import { lato } from \"@/fonts/fonts\";\r\n+// import { lato } from \"@/fonts/fonts\";\r\n // import FirstStepForm from \"./patient/createPatient/firstStepForm\";\r\n // import SecondStepForm from \"./patient/createPatient/SecondStepForm\";\r\n // import ThirdStepForm from \"./patient/createPatient/ThirdStepForm\";\r\n import { OverlayScrollbarsComponent } from \"overlayscrollbars-react\";\r\n"
                },
                {
                    "date": 1738505292150,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -20,9 +20,9 @@\n // import ThirdStepForm from \"./patient/createPatient/ThirdStepForm\";\r\n import { OverlayScrollbarsComponent } from \"overlayscrollbars-react\";\r\n import \"overlayscrollbars/overlayscrollbars.css\";\r\n import Swal from \"sweetalert2\";\r\n-import { CreateNotification, userRole } from \"./Togglers/TopBarEvents\";\r\n+import { <CreateNotification></CreateNotification>\r\n const AddPatient = () => {\r\n   const [current, setCurrent] = useState(0);\r\n   const [isLoading, setIsLoading] = useState(false);\r\n   const { drawerState, setDrawerState } = PatientHook();\r\n"
                },
                {
                    "date": 1738505363421,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -20,9 +20,9 @@\n // import ThirdStepForm from \"./patient/createPatient/ThirdStepForm\";\r\n import { OverlayScrollbarsComponent } from \"overlayscrollbars-react\";\r\n import \"overlayscrollbars/overlayscrollbars.css\";\r\n import Swal from \"sweetalert2\";\r\n-import { <CreateNotification></CreateNotification>\r\n+import { CreateNotification, userRole } from \"./Togglers/TopBarEvents\";\r\n const AddPatient = () => {\r\n   const [current, setCurrent] = useState(0);\r\n   const [isLoading, setIsLoading] = useState(false);\r\n   const { drawerState, setDrawerState } = PatientHook();\r\n"
                },
                {
                    "date": 1738505376259,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -20,9 +20,9 @@\n // import ThirdStepForm from \"./patient/createPatient/ThirdStepForm\";\r\n import { OverlayScrollbarsComponent } from \"overlayscrollbars-react\";\r\n import \"overlayscrollbars/overlayscrollbars.css\";\r\n import Swal from \"sweetalert2\";\r\n-import { CreateNotification, userRole } from \"./Togglers/TopBarEvents\";\r\n+import { CreateNotification } from \"./Togglers/TopBarEvents\";\r\n const AddPatient = () => {\r\n   const [current, setCurrent] = useState(0);\r\n   const [isLoading, setIsLoading] = useState(false);\r\n   const { drawerState, setDrawerState } = PatientHook();\r\n"
                },
                {
                    "date": 1738505384700,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -20,9 +20,9 @@\n // import ThirdStepForm from \"./patient/createPatient/ThirdStepForm\";\r\n import { OverlayScrollbarsComponent } from \"overlayscrollbars-react\";\r\n import \"overlayscrollbars/overlayscrollbars.css\";\r\n import Swal from \"sweetalert2\";\r\n-import { CreateNotification } from \"./Togglers/TopBarEvents\";\r\n+import { CreateNotification\r\n const AddPatient = () => {\r\n   const [current, setCurrent] = useState(0);\r\n   const [isLoading, setIsLoading] = useState(false);\r\n   const { drawerState, setDrawerState } = PatientHook();\r\n"
                },
                {
                    "date": 1738505396601,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -20,9 +20,9 @@\n // import ThirdStepForm from \"./patient/createPatient/ThirdStepForm\";\r\n import { OverlayScrollbarsComponent } from \"overlayscrollbars-react\";\r\n import \"overlayscrollbars/overlayscrollbars.css\";\r\n import Swal from \"sweetalert2\";\r\n-import { CreateNotification\r\n+import { CreateNotification } from \"./togglers/TopBarEvents\";\r\n const AddPatient = () => {\r\n   const [current, setCurrent] = useState(0);\r\n   const [isLoading, setIsLoading] = useState(false);\r\n   const { drawerState, setDrawerState } = PatientHook();\r\n@@ -177,5 +177,7 @@\n       title: \"Emergency\",\r\n       content: <SecondStepForm form={form} />,\r\n     },\r\n     {\r\n-      title: \"Medical\n\\ No newline at end of file\n+      title: \"Medical\r\n+    }\r\n+  ]\n\\ No newline at end of file\n"
                },
                {
                    "date": 1738505403497,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -179,5 +179,11 @@\n     },\r\n     {\r\n       title: \"Medical\r\n     }\r\n-  ]\n\\ No newline at end of file\n+  ]\r\n+\r\n+  return (\r\n+\r\n+  )\r\n+\r\n+}\n\\ No newline at end of file\n"
                },
                {
                    "date": 1738505409989,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -182,8 +182,8 @@\n     }\r\n   ]\r\n \r\n   return (\r\n-\r\n+\"ok\"\r\n   )\r\n \r\n }\n\\ No newline at end of file\n"
                },
                {
                    "date": 1738505415234,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -174,12 +174,12 @@\n       content: <FirstStepForm form={form} />,\r\n     },\r\n     {\r\n       title: \"Emergency\",\r\n-      content: <SecondStepForm form={form} />,\r\n+      // content: <SecondStepForm form={form} />,\r\n     },\r\n     {\r\n-      title: \"Medical\r\n+      title: \"Medical,\r\n     }\r\n   ]\r\n \r\n   return (\r\n"
                },
                {
                    "date": 1738505421818,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -170,16 +170,16 @@\n \r\n   const steps = [\r\n     {\r\n       title: \"Personal Info\",\r\n-      content: <FirstStepForm form={form} />,\r\n+      // content: <FirstStepForm form={form} />,\r\n     },\r\n     {\r\n       title: \"Emergency\",\r\n       // content: <SecondStepForm form={form} />,\r\n     },\r\n     {\r\n-      title: \"Medical,\r\n+      title: \"Medical\r\n     }\r\n   ]\r\n \r\n   return (\r\n"
                },
                {
                    "date": 1738505435252,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -70,9 +70,9 @@\n     const notificationData = CreateNotification({\r\n       type: \"patient creation\",\r\n       title: \"patient Creation\",\r\n       description: \"created a new patient\",\r\n-      assignedBy: `${userRole(session)} ${session?.user.name}`,\r\n+      assignedBy: ` ${session?.user.name}`,\r\n       user: `${session?.user.id}`,\r\n       eventType: \"creation\",\r\n     });\r\n     const data = {\r\n@@ -177,9 +177,9 @@\n       title: \"Emergency\",\r\n       // content: <SecondStepForm form={form} />,\r\n     },\r\n     {\r\n-      title: \"Medical\r\n+      title: \"Medical\"\r\n     }\r\n   ]\r\n \r\n   return (\r\n"
                },
                {
                    "date": 1738510401841,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -11,9 +11,9 @@\n import { Button } from \"./ui/button\";\r\n import { useSession } from \"next-auth/react\";\r\n import { DashboardHook } from \"./context/Dashboardprovider\";\r\n import { Drawer } from \"@mui/material\";\r\n-import { PatientHook } from \"./context/PatientProvider\";\r\n+import { PatientHook\r\n import { Steps } from \"antd\";\r\n // import { lato } from \"@/fonts/fonts\";\r\n // import FirstStepForm from \"./patient/createPatient/firstStepForm\";\r\n // import SecondStepForm from \"./patient/createPatient/SecondStepForm\";\r\n@@ -70,9 +70,9 @@\n     const notificationData = CreateNotification({\r\n       type: \"patient creation\",\r\n       title: \"patient Creation\",\r\n       description: \"created a new patient\",\r\n-      assignedBy: ` ${session?.user.name}`,\r\n+      assignedBy: ` ${session?.user.name}`, //${userRole(session)}\r\n       user: `${session?.user.id}`,\r\n       eventType: \"creation\",\r\n     });\r\n     const data = {\r\n"
                },
                {
                    "date": 1738510683603,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -11,9 +11,9 @@\n import { Button } from \"./ui/button\";\r\n import { useSession } from \"next-auth/react\";\r\n import { DashboardHook } from \"./context/Dashboardprovider\";\r\n import { Drawer } from \"@mui/material\";\r\n-import { PatientHook\r\n+import { PatientHook } from \"./context/PatientProvider\";\r\n import { Steps } from \"antd\";\r\n // import { lato } from \"@/fonts/fonts\";\r\n // import FirstStepForm from \"./patient/createPatient/firstStepForm\";\r\n // import SecondStepForm from \"./patient/createPatient/SecondStepForm\";\r\n@@ -182,8 +182,17 @@\n     }\r\n   ]\r\n \r\n   return (\r\n-\"ok\"\r\n+<Drawer\r\n+  anchor=\"right\"\r\n+  open={drawerState}\r\n+  onClose={toggleDrawer(false)}\r\n+  PaperProps={{\r\n+    sx: { width: \"50vw\", maxWidth: \"640px\" }, // Apply width correctly\r\n+  }}\r\n+>\r\n+\r\n+\r\n   )\r\n \r\n }\n\\ No newline at end of file\n"
                },
                {
                    "date": 1738510693193,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -190,9 +190,8 @@\n   PaperProps={{\r\n     sx: { width: \"50vw\", maxWidth: \"640px\" }, // Apply width correctly\r\n   }}\r\n >\r\n-\r\n-\r\n+</\r\n   )\r\n \r\n }\n\\ No newline at end of file\n"
                },
                {
                    "date": 1738510721686,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -182,16 +182,71 @@\n     }\r\n   ]\r\n \r\n   return (\r\n-<Drawer\r\n-  anchor=\"right\"\r\n-  open={drawerState}\r\n-  onClose={toggleDrawer(false)}\r\n-  PaperProps={{\r\n-    sx: { width: \"50vw\", maxWidth: \"640px\" }, // Apply width correctly\r\n-  }}\r\n->\r\n-</\r\n+<React.Fragment>\r\n+      {contextHolder}\r\n+      <Button className=\"AppointmentCreate\" onClick={toggleDrawer(true)}>\r\n+        Create Patient\r\n+      </Button>\r\n+      <Drawer\r\n+        anchor={\"right\"}\r\n+        open={drawerState}\r\n+        onClose={toggleDrawer(false)}\r\n+        style={{ zIndex: 10 ,width:\"50vw\",maxWidth:\"640px\"}}\r\n+      >\r\n+        <Form {...form}>\r\n+          <form\r\n+            onSubmit={form.handleSubmit(onSubmit)}\r\n+            className=\"flex flex-col w-full space-y-10  p-4 dark:bg-[var(--sidebar-accent)]\"\r\n+          >\r\n+           <div className=\"flex flex-col justify-start gap-7 \">\r\n+              <h1\r\n+                className={text-slate-800 text-center font-bold text-lg dark:text-slate-50 ${lato.className}}\r\n+              >\r\n+                Create Patient\r\n+              </h1>\r\n+              <Steps\r\n+                type=\"navigation\"\r\n+                responsive\r\n+                className=\"p-4 custom-steps \"\r\n+                current={current}\r\n+                items={items}\r\n+              />\r\n+            </div>\r\n+   \r\n+              {steps[current].content}\r\n+\r\n+            <div className=\"flex w-full\">\r\n+              {current < steps.length - 1 && (\r\n+                <span\r\n+                  className=\"flex-1 cursor-pointer bg-blue-700 text-slate-50 py-2 px-4 rounded-md text-center\"\r\n+                  onClick={() => next()}\r\n+                >\r\n+                  Next\r\n+                </span>\r\n+              )}\r\n+              {current === steps.length - 1 && (\r\n+                <SubmitButton\r\n+                  className=\"bg-[#6366f1] text-slate-50 w-[80%]\"\r\n+                  isLoading={isLoading}\r\n+                  onclick={checkForFormValidation}\r\n+                >\r\n+                  submit\r\n+                </SubmitButton>\r\n+              )}\r\n+              {current > 0 && (\r\n+                <span\r\n+                  onClick={() => prev()}\r\n+                  className=\"cursor-pointer ml-2 bg-slate-200 py-2 px-4 rounded-md \"\r\n+                >\r\n+                  Previous\r\n+                </span>\r\n+              )}\r\n+            </div>\r\n+          </form>\r\n+        </Form>\r\n+      </Drawer>\r\n+    </React.Fragment>\r\n   )\r\n \r\n }\n\\ No newline at end of file\n"
                },
                {
                    "date": 1738510736855,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -200,9 +200,9 @@\n             className=\"flex flex-col w-full space-y-10  p-4 dark:bg-[var(--sidebar-accent)]\"\r\n           >\r\n            <div className=\"flex flex-col justify-start gap-7 \">\r\n               <h1\r\n-                className={text-slate-800 text-center font-bold text-lg dark:text-slate-50 ${lato.className}}\r\n+                className={\"text-slate-800 text-center font-bold text-lg dark:text-slate-50 ${lato.className}}\r\n               >\r\n                 Create Patient\r\n               </h1>\r\n               <Steps\r\n"
                },
                {
                    "date": 1738510744764,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -200,9 +200,9 @@\n             className=\"flex flex-col w-full space-y-10  p-4 dark:bg-[var(--sidebar-accent)]\"\r\n           >\r\n            <div className=\"flex flex-col justify-start gap-7 \">\r\n               <h1\r\n-                className={\"text-slate-800 text-center font-bold text-lg dark:text-slate-50 ${lato.className}}\r\n+                className={`text-slate-800 text-center font-bold text-lg dark:text-slate-50 ${lato.className}`}\r\n               >\r\n                 Create Patient\r\n               </h1>\r\n               <Steps\r\n"
                },
                {
                    "date": 1738510770795,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -188,13 +188,15 @@\n       <Button className=\"AppointmentCreate\" onClick={toggleDrawer(true)}>\r\n         Create Patient\r\n       </Button>\r\n       <Drawer\r\n-        anchor={\"right\"}\r\n-        open={drawerState}\r\n-        onClose={toggleDrawer(false)}\r\n-        style={{ zIndex: 10 ,width:\"50vw\",maxWidth:\"640px\"}}\r\n-      >\r\n+  anchor=\"right\"\r\n+  open={drawerState}\r\n+  onClose={toggleDrawer(false)}\r\n+  PaperProps={{\r\n+    sx: { width: \"50vw\", maxWidth: \"640px\" }, // Apply width correctly\r\n+  }}\r\n+>\r\n         <Form {...form}>\r\n           <form\r\n             onSubmit={form.handleSubmit(onSubmit)}\r\n             className=\"flex flex-col w-full space-y-10  p-4 dark:bg-[var(--sidebar-accent)]\"\r\n"
                },
                {
                    "date": 1738510796584,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -170,9 +170,9 @@\n \r\n   const steps = [\r\n     {\r\n       title: \"Personal Info\",\r\n-      // content: <FirstStepForm form={form} />,\r\n+      content: <FirstStepForm form={form} />,\r\n     },\r\n     {\r\n       title: \"Emergency\",\r\n       // content: <SecondStepForm form={form} />,\r\n@@ -202,9 +202,9 @@\n             className=\"flex flex-col w-full space-y-10  p-4 dark:bg-[var(--sidebar-accent)]\"\r\n           >\r\n            <div className=\"flex flex-col justify-start gap-7 \">\r\n               <h1\r\n-                className={`text-slate-800 text-center font-bold text-lg dark:text-slate-50 ${lato.className}`}\r\n+                className={`text-slate-800 text-center font-bold text-lg dark:text-slate-50 `}\r\n               >\r\n                 Create Patient\r\n               </h1>\r\n               <Steps\r\n"
                },
                {
                    "date": 1738510801949,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -21,8 +21,9 @@\n import { OverlayScrollbarsComponent } from \"overlayscrollbars-react\";\r\n import \"overlayscrollbars/overlayscrollbars.css\";\r\n import Swal from \"sweetalert2\";\r\n import { CreateNotification } from \"./togglers/TopBarEvents\";\r\n+import FirstStepForm from \"./patient/createPatient/FirstStepForm\";\r\n const AddPatient = () => {\r\n   const [current, setCurrent] = useState(0);\r\n   const [isLoading, setIsLoading] = useState(false);\r\n   const { drawerState, setDrawerState } = PatientHook();\r\n"
                },
                {
                    "date": 1738510812484,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -175,9 +175,9 @@\n       content: <FirstStepForm form={form} />,\r\n     },\r\n     {\r\n       title: \"Emergency\",\r\n-      // content: <SecondStepForm form={form} />,\r\n+      content:\"\",\r\n     },\r\n     {\r\n       title: \"Medical\"\r\n     }\r\n"
                },
                {
                    "date": 1738510867893,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -178,9 +178,10 @@\n       title: \"Emergency\",\r\n       content:\"\",\r\n     },\r\n     {\r\n-      title: \"Medical\"\r\n+      title: \"Medical\",\r\n+      con\r\n     }\r\n   ]\r\n \r\n   return (\r\n"
                },
                {
                    "date": 1738510874516,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -179,9 +179,9 @@\n       content:\"\",\r\n     },\r\n     {\r\n       title: \"Medical\",\r\n-      con\r\n+      content:\r\n     }\r\n   ]\r\n \r\n   return (\r\n"
                },
                {
                    "date": 1738510880468,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -22,8 +22,9 @@\n import \"overlayscrollbars/overlayscrollbars.css\";\r\n import Swal from \"sweetalert2\";\r\n import { CreateNotification } from \"./togglers/TopBarEvents\";\r\n import FirstStepForm from \"./patient/createPatient/FirstStepForm\";\r\n+import ThirdStepForm from \"./patient/createPatient/ThirdStepForm\";\r\n const AddPatient = () => {\r\n   const [current, setCurrent] = useState(0);\r\n   const [isLoading, setIsLoading] = useState(false);\r\n   const { drawerState, setDrawerState } = PatientHook();\r\n@@ -179,9 +180,9 @@\n       content:\"\",\r\n     },\r\n     {\r\n       title: \"Medical\",\r\n-      content:\r\n+      content:<ThirdStepForm  form/>\r\n     }\r\n   ]\r\n \r\n   return (\r\n"
                },
                {
                    "date": 1738510958749,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -180,12 +180,29 @@\n       content:\"\",\r\n     },\r\n     {\r\n       title: \"Medical\",\r\n-      content:<ThirdStepForm  form/>\r\n+      content:<ThirdStepForm  form={form} />\r\n     }\r\n   ]\r\n \r\n+  const checkForFormValidation = () => {\r\n+    const isValid = form.formState.isValid; // Get form validation state\r\n+  \r\n+    if (!isValid) {\r\n+      api.error({\r\n+        message: \"Required Fields\",\r\n+        description: \"Please satisfy all the required fields\",\r\n+        showProgress: true,\r\n+        pauseOnHover: false,\r\n+        role: \"status\",\r\n+      });\r\n+    } else {\r\n+      // Optional: If form is valid, you can add a success notification or proceed with the form submission\r\n+      console.log(\"Form is valid, proceed with the action!\");\r\n+    }\r\n+  };\r\n+  \r\n   return (\r\n <React.Fragment>\r\n       {contextHolder}\r\n       <Button className=\"AppointmentCreate\" onClick={toggleDrawer(true)}>\r\n"
                },
                {
                    "date": 1738511093470,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -185,9 +185,9 @@\n     }\r\n   ]\r\n \r\n   const checkForFormValidation = () => {\r\n-    const isValid = form.formState.isValid; // Get form validation state\r\n+    const isValid = form.formState.isValid; \r\n   \r\n     if (!isValid) {\r\n       api.error({\r\n         message: \"Required Fields\",\r\n@@ -196,13 +196,12 @@\n         pauseOnHover: false,\r\n         role: \"status\",\r\n       });\r\n     } else {\r\n-      // Optional: If form is valid, you can add a success notification or proceed with the form submission\r\n       console.log(\"Form is valid, proceed with the action!\");\r\n     }\r\n   };\r\n-  \r\n+  const items = steps.map((item) => ({ key: item.title, title: item.title }));\r\n   return (\r\n <React.Fragment>\r\n       {contextHolder}\r\n       <Button className=\"AppointmentCreate\" onClick={toggleDrawer(true)}>\r\n"
                },
                {
                    "date": 1738511182083,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -269,5 +269,6 @@\n       </Drawer>\r\n     </React.Fragment>\r\n   )\r\n \r\n-}\n\\ No newline at end of file\n+}\r\n+export default AddPatient\n\\ No newline at end of file\n"
                },
                {
                    "date": 1738512870265,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -13,12 +13,8 @@\n import { DashboardHook } from \"./context/Dashboardprovider\";\r\n import { Drawer } from \"@mui/material\";\r\n import { PatientHook } from \"./context/PatientProvider\";\r\n import { Steps } from \"antd\";\r\n-// import { lato } from \"@/fonts/fonts\";\r\n-// import FirstStepForm from \"./patient/createPatient/firstStepForm\";\r\n-// import SecondStepForm from \"./patient/createPatient/SecondStepForm\";\r\n-// import ThirdStepForm from \"./patient/createPatient/ThirdStepForm\";\r\n import { OverlayScrollbarsComponent } from \"overlayscrollbars-react\";\r\n import \"overlayscrollbars/overlayscrollbars.css\";\r\n import Swal from \"sweetalert2\";\r\n import { CreateNotification } from \"./togglers/TopBarEvents\";\r\n"
                },
                {
                    "date": 1738512884963,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -13,10 +13,8 @@\n import { DashboardHook } from \"./context/Dashboardprovider\";\r\n import { Drawer } from \"@mui/material\";\r\n import { PatientHook } from \"./context/PatientProvider\";\r\n import { Steps } from \"antd\";\r\n-import { OverlayScrollbarsComponent } from \"overlayscrollbars-react\";\r\n-import \"overlayscrollbars/overlayscrollbars.css\";\r\n import Swal from \"sweetalert2\";\r\n import { CreateNotification } from \"./togglers/TopBarEvents\";\r\n import FirstStepForm from \"./patient/createPatient/FirstStepForm\";\r\n import ThirdStepForm from \"./patient/createPatient/ThirdStepForm\";\r\n"
                },
                {
                    "date": 1738514943856,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -17,8 +17,10 @@\n import Swal from \"sweetalert2\";\r\n import { CreateNotification } from \"./togglers/TopBarEvents\";\r\n import FirstStepForm from \"./patient/createPatient/FirstStepForm\";\r\n import ThirdStepForm from \"./patient/createPatient/ThirdStepForm\";\r\n+\r\n+\r\n const AddPatient = () => {\r\n   const [current, setCurrent] = useState(0);\r\n   const [isLoading, setIsLoading] = useState(false);\r\n   const { drawerState, setDrawerState } = PatientHook();\r\n@@ -205,9 +207,9 @@\n   anchor=\"right\"\r\n   open={drawerState}\r\n   onClose={toggleDrawer(false)}\r\n   PaperProps={{\r\n-    sx: { width: \"50vw\", maxWidth: \"640px\" }, // Apply width correctly\r\n+    sx: { maxWidth: \"640px\" }, // Apply width correctly\r\n   }}\r\n >\r\n         <Form {...form}>\r\n           <form\r\n"
                },
                {
                    "date": 1738514964373,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -209,8 +209,9 @@\n   onClose={toggleDrawer(false)}\r\n   PaperProps={{\r\n     sx: { maxWidth: \"640px\" }, // Apply width correctly\r\n   }}\r\n+  className=\"min-w-[360px] overflow-hidden\"\r\n >\r\n         <Form {...form}>\r\n           <form\r\n             onSubmit={form.handleSubmit(onSubmit)}\r\n"
                },
                {
                    "date": 1738514975665,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -207,9 +207,9 @@\n   anchor=\"right\"\r\n   open={drawerState}\r\n   onClose={toggleDrawer(false)}\r\n   PaperProps={{\r\n-    sx: { maxWidth: \"640px\" }, // Apply width correctly\r\n+    sx: { w,maxWidth: \"640px\" }, // Apply width correctly\r\n   }}\r\n   className=\"min-w-[360px] overflow-hidden\"\r\n >\r\n         <Form {...form}>\r\n"
                },
                {
                    "date": 1738514983655,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -207,9 +207,9 @@\n   anchor=\"right\"\r\n   open={drawerState}\r\n   onClose={toggleDrawer(false)}\r\n   PaperProps={{\r\n-    sx: { w,maxWidth: \"640px\" }, // Apply width correctly\r\n+    sx: { width:\"500px\",maxWidth: \"640px\" }, // Apply width correctly\r\n   }}\r\n   className=\"min-w-[360px] overflow-hidden\"\r\n >\r\n         <Form {...form}>\r\n"
                },
                {
                    "date": 1738515020263,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -207,9 +207,9 @@\n   anchor=\"right\"\r\n   open={drawerState}\r\n   onClose={toggleDrawer(false)}\r\n   PaperProps={{\r\n-    sx: { width:\"500px\",maxWidth: \"640px\" }, // Apply width correctly\r\n+    sx: { minWidth:\"360px\",maxWidth: \"640px\" }, // Apply width correctly\r\n   }}\r\n   className=\"min-w-[360px] overflow-hidden\"\r\n >\r\n         <Form {...form}>\r\n"
                },
                {
                    "date": 1738515026739,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -207,9 +207,9 @@\n   anchor=\"right\"\r\n   open={drawerState}\r\n   onClose={toggleDrawer(false)}\r\n   PaperProps={{\r\n-    sx: { minWidth:\"360px\",maxWidth: \"640px\" }, // Apply width correctly\r\n+    sx: { : \"640px\" }, // Apply width correctly\r\n   }}\r\n   className=\"min-w-[360px] overflow-hidden\"\r\n >\r\n         <Form {...form}>\r\n"
                },
                {
                    "date": 1738515040478,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -207,11 +207,11 @@\n   anchor=\"right\"\r\n   open={drawerState}\r\n   onClose={toggleDrawer(false)}\r\n   PaperProps={{\r\n-    sx: { : \"640px\" }, // Apply width correctly\r\n+    sx: {maxWidth: \"640px\" }, // Apply width correctly\r\n   }}\r\n-  className=\"min-w-[360px] overflow-hidden\"\r\n+ \r\n >\r\n         <Form {...form}>\r\n           <form\r\n             onSubmit={form.handleSubmit(onSubmit)}\r\n"
                },
                {
                    "date": 1738515080591,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -209,9 +209,9 @@\n   onClose={toggleDrawer(false)}\r\n   PaperProps={{\r\n     sx: {maxWidth: \"640px\" }, // Apply width correctly\r\n   }}\r\n- \r\n+ className=\"min-w-[360px]\"\r\n >\r\n         <Form {...form}>\r\n           <form\r\n             onSubmit={form.handleSubmit(onSubmit)}\r\n"
                },
                {
                    "date": 1738515260146,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -190,9 +190,9 @@\n         description: \"Please satisfy all the required fields\",\r\n         showProgress: true,\r\n         pauseOnHover: false,\r\n         role: \"status\",\r\n-        placement:\"\"\r\n+        placement:\"b\"\r\n       });\r\n     } else {\r\n       console.log(\"Form is valid, proceed with the action!\");\r\n     }\r\n"
                },
                {
                    "date": 1738515843537,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -207,9 +207,9 @@\n       <Drawer\r\n   anchor=\"right\"\r\n   open={drawerState}\r\n   onClose={toggleDrawer(false)}\r\n-  style={{zin}}\r\n+  style={{zIndex}}\r\n   PaperProps={{\r\n     sx: {maxWidth: \"640px\" }, // Apply width correctly\r\n   }}\r\n  className=\"min-w-[360px]\"\r\n"
                }
            ],
            "date": 1738505168621,
            "name": "Commit-0",
            "content": "\"use client\";\r\nimport React from \"react\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { Form } from \"@/components/ui/form\";\r\nimport { useState } from \"react\";\r\nimport SubmitButton\r\nimport { patientSchema } from \"@/lib/vaildation\";\r\nimport { useRouter } from \"next/navigation\";\r\nimport axios from \"axios\";\r\nimport { zodResolver } from \"@hookform/resolvers/zod\";\r\nimport { Button } from \"./ui/button\";\r\nimport { useSession } from \"next-auth/react\";\r\nimport { DashboardHook } from \"./context/DashboardProvider\";\r\nimport { Drawer } from \"@mui/material\";\r\nimport { PatientHook } from \"./context/PatientProvider\";\r\nimport { Steps } from \"antd\";\r\nimport { lato } from \"@/fonts/fonts\";\r\nimport FirstStepForm from \"./patient/createPatient/firstStepForm\";\r\nimport SecondStepForm from \"./patient/createPatient/SecondStepForm\";\r\nimport ThirdStepForm from \"./patient/createPatient/ThirdStepForm\";\r\nimport { OverlayScrollbarsComponent } from \"overlayscrollbars-react\";\r\nimport \"overlayscrollbars/overlayscrollbars.css\";\r\nimport Swal from \"sweetalert2\";\r\nimport { CreateNotification, userRole } from \"./Togglers/TopBarEvents\";\r\nconst AddPatient = () => {\r\n  const [current, setCurrent] = useState(0);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const { drawerState, setDrawerState } = PatientHook();\r\n  const { api, contextHolder } = DashboardHook();\r\n  const { data: session } = useSession();\r\n  const router = useRouter();\r\n\r\n  const next = async () => {\r\n    setCurrent(current + 1);\r\n  };\r\n\r\n  const prev = () => {\r\n    setCurrent(current - 1);\r\n  };\r\n\r\n  const toggleDrawer =\r\n    (open: boolean) => (event: React.KeyboardEvent | React.MouseEvent) => {\r\n      if (\r\n        event.type === \"keydown\" &&\r\n        ((event as React.KeyboardEvent).key === \"Tab\" ||\r\n          (event as React.KeyboardEvent).key === \"Shift\")\r\n      ) {\r\n        return;\r\n      }\r\n      setDrawerState(open);\r\n    };\r\n\r\n  const form = useForm<Zod.infer<typeof patientSchema>>({\r\n    resolver: zodResolver(patientSchema),\r\n    defaultValues: {\r\n      firstName: \"\",\r\n      lastName: \"\",\r\n      email: \"\",\r\n      currentMedications: \"\",\r\n      insuranceProvider: \"\",\r\n      emergencyContactPerson: \"\",\r\n      residentialAddress: \"\",\r\n    },\r\n  });\r\n  const onSubmit = async (values: Zod.infer<typeof patientSchema>) => {\r\n    setIsLoading(true);\r\n\r\n    const formData = new FormData();\r\n\r\n    const notificationData = CreateNotification({\r\n      type: \"patient creation\",\r\n      title: \"patient Creation\",\r\n      description: \"created a new patient\",\r\n      assignedBy: `${userRole(session)} ${session?.user.name}`,\r\n      user: `${session?.user.id}`,\r\n      eventType: \"creation\",\r\n    });\r\n    const data = {\r\n      userId: session?.user.id,\r\n      profileImg: values.profileImg?.[0], // Optional chaining\r\n      firstName: values.firstName,\r\n      lastName: values.lastName,\r\n      birthDate: values.birthDate,\r\n      email: values.email,\r\n      phone: values.phone,\r\n      country: values.country?.label,\r\n      weight: values.weight,\r\n      height: values.height,\r\n      bloodType: values.bloodType,\r\n      gender: values.gender,\r\n      emergencyContactPerson: values.emergencyContactPerson,\r\n      emergencyContactRelationship: values.emergencyContactRelationship,\r\n      emergencyContactNumber: values.emergencyContactNumber,\r\n      residentialAddress: values.residentialAddress,\r\n      insuranceProvider: values.insuranceProvider,\r\n      pastSurgeries: values.pastSurgeries,\r\n      familyMedicalHistory: values.familyMedicalHistory,\r\n      currentMedications: values.currentMedications,\r\n      medicalConditions: values.medicalConditions,\r\n      allergies: values.allergies,\r\n      smoking: values.smoking,\r\n      smokingFrequency: values.smokingFrequency,\r\n      alcohol: values.alcohol,\r\n      alcoholFrequency: values.alcoholFrequency,\r\n    };\r\n\r\n    Object.entries(data).forEach(([key, value]) => {\r\n      if (value !== undefined && value !== null && value !== \"\") {\r\n        formData.append(key, value as string);\r\n      }\r\n    });\r\n\r\n    try {\r\n      const response = await axios.post(\r\n        \"http://localhost:8080/api/patient/create\",\r\n        formData\r\n      );\r\n\r\n      if (response.status === 201)\r\n        Swal.fire({\r\n          position: \"center\",\r\n          icon: \"success\",\r\n          title: response.data.message,\r\n          showConfirmButton: false,\r\n          timer: 1500,\r\n        });\r\n\r\n      await axios.post(\r\n        `http://localhost:8080/api/notifications/create`,\r\n        notificationData\r\n      );\r\n\r\n      setDrawerState(false);\r\n\r\n      setCurrent(0);\r\n\r\n      form.reset();\r\n\r\n      router.refresh();\r\n    } catch (error: unknown) {\r\n      if (axios.isAxiosError(error)) {\r\n        if (error.response) {\r\n          api.error({\r\n            message: `${error.response.data.message}`,\r\n            description: \"something went wrong\",\r\n            showProgress: true,\r\n            pauseOnHover: false,\r\n          });\r\n        } else {\r\n          api.error({\r\n            message: \"No Response from Server\",\r\n            description:\r\n              \"Please check your network connection or try again later.\",\r\n            showProgress: true,\r\n            pauseOnHover: false,\r\n          });\r\n        }\r\n      } else if (error instanceof Error) {\r\n        api.error({\r\n          message: \"Unexpected Error\",\r\n          description: error.message,\r\n          showProgress: true,\r\n          pauseOnHover: false,\r\n        });\r\n      }\r\n    }\r\n\r\n    setIsLoading(false);\r\n  };\r\n\r\n  const steps = [\r\n    {\r\n      title: \"Personal Info\",\r\n      content: <FirstStepForm form={form} />,\r\n    },\r\n    {\r\n      title: \"Emergency\",\r\n      content: <SecondStepForm form={form} />,\r\n    },\r\n    {\r\n      title: \"Medical"
        }
    ]
}