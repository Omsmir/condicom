{
    "sourceFile": "frontend/components/appointments/WeekViewRows.tsx",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 3,
            "patches": [
                {
                    "date": 1738513860604,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1738514141769,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -3,9 +3,9 @@\n import { Appointment } from \"@/types\";\r\n import clsx from \"clsx\";\r\n import { isSameDay, format } from \"date-fns\";\r\n import React from \"react\";\r\n-import { DeleteAppointmentButton, ToggleButton } from \"../Togglers/Handlers\";\r\n+import { DeleteAppointmentButton, ToggleButton } from \"../togglers/Handlers\";\r\n import { CalenderHook } from \"../context/CalenderProvider\";\r\n import { useSession } from \"next-auth/react\";\r\n import { useMediaQuery } from \"react-responsive\";\r\n \r\n"
                },
                {
                    "date": 1738514218141,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -3,9 +3,9 @@\n import { Appointment } from \"@/types\";\r\n import clsx from \"clsx\";\r\n import { isSameDay, format } from \"date-fns\";\r\n import React from \"react\";\r\n-import { DeleteAppointmentButton, ToggleButton } from \"../togglers/Handlers\";\r\n+import { DeleteHandler, ToggleButton } from \"../togglers/Handlers\";\r\n import { CalenderHook } from \"../context/CalenderProvider\";\r\n import { useSession } from \"next-auth/react\";\r\n import { useMediaQuery } from \"react-responsive\";\r\n \r\n"
                },
                {
                    "date": 1738514466806,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -73,13 +73,15 @@\n                         <p className=\"text-[12px] text-slate-400\">\r\n                           {task.description}\r\n                         </p>\r\n                       </div>\r\n-                      <DeleteAppointmentButton\r\n-                        id={task._id}\r\n-                        className=\"absolute text-slate-50 right-0 hidden hover:text-red-800 transition-colors delete\"\r\n-                        name=\"x\"\r\n-                      />\r\n+                      <DeleteHandler\r\n+                      id={task._id}\r\n+                      apiString=\"appointments\"\r\n+                      messagePopup=\"do you want to delete the appointment\"\r\n+                      className=\"absolute text-slate-50 right-0 hidden hover:text-red-800 transition-colors delete\"\r\n+                      name=\"x\"\r\n+                    />\r\n                     </div>\r\n                   ))}\r\n               </div>\r\n             );\r\n"
                }
            ],
            "date": 1738513860604,
            "name": "Commit-0",
            "content": "\"use client\";\r\n\r\nimport { Appointment } from \"@/types\";\r\nimport clsx from \"clsx\";\r\nimport { isSameDay, format } from \"date-fns\";\r\nimport React from \"react\";\r\nimport { DeleteAppointmentButton, ToggleButton } from \"../Togglers/Handlers\";\r\nimport { CalenderHook } from \"../context/CalenderProvider\";\r\nimport { useSession } from \"next-auth/react\";\r\nimport { useMediaQuery } from \"react-responsive\";\r\n\r\nconst WeekViewRows = ({\r\n  appointment,\r\n}: {\r\n  appointment: Appointment[] | undefined;\r\n}) => {\r\n  const { data: session } = useSession();\r\n  const isMobile = useMediaQuery({ query: \"(min-width: 640px)\" });\r\n  const isTablet = useMediaQuery({ query: \"(min-width: 1024px)\" });\r\n  const { DaysOfWeekCalender, DaysOfWeekCalenderForMobileView, theMinutes } =\r\n    CalenderHook();\r\n\r\n  const DaysToMapThrough = () => {\r\n    if (isMobile) {\r\n      return DaysOfWeekCalender;\r\n    } else {\r\n      return DaysOfWeekCalenderForMobileView;\r\n    }\r\n  };\r\n  return (\r\n    <React.Fragment>\r\n      {DaysToMapThrough().map((day, index) => (\r\n        <div className=\"grid border-r py-4 dark:border-slate-700\" key={index}>\r\n          {theMinutes.map((hour, hourIndex) => {\r\n            // Filter tasks for the specific day and hour\r\n            const filteredTasks = appointment?.filter((task) => {\r\n              if (\r\n                isSameDay(task.startDate, day) &&\r\n                format(task.startDate, \"h:mm a\") === format(hour, \"h:mm a\") &&\r\n                session?.user.id === task.user\r\n              ) {\r\n                return task;\r\n              }\r\n            });\r\n\r\n            return (\r\n              <div\r\n                className=\"flex justify-center border-b h-20 relative dark:border-slate-700 \"\r\n                key={hourIndex}\r\n              >\r\n                {filteredTasks &&\r\n                  filteredTasks.length > 0 &&\r\n                  filteredTasks.map((task, taskIndex) => (\r\n                    <div\r\n                      key={taskIndex} // Ensure unique key for each task\r\n                      style={{\r\n                        height: task.interval,\r\n                        backgroundColor: task.color\r\n                \r\n                      }}\r\n                      className={clsx(\r\n                        `flex  w-[95%] rounded-md cursor-pointer z-10 hover:opacity-85 relative main`,\r\n                        { \"opacity-40 hover:opacity-40 \": task.completed }\r\n                      )}\r\n                    >\r\n                      <ToggleButton id={task._id} state={!task.completed} />\r\n                      <div className=\"flex flex-col items-start text-slate-50 p-3 \">\r\n                        <p className=\"font-medium text-[13px]\">\r\n                          {format(task.startDate, \"h:mm a\")}\r\n                        </p>\r\n\r\n                        <p className=\"font-medium text-sm\">{task.task}</p>\r\n                        <p className=\"text-[12px] text-slate-400\">\r\n                          {task.description}\r\n                        </p>\r\n                      </div>\r\n                      <DeleteAppointmentButton\r\n                        id={task._id}\r\n                        className=\"absolute text-slate-50 right-0 hidden hover:text-red-800 transition-colors delete\"\r\n                        name=\"x\"\r\n                      />\r\n                    </div>\r\n                  ))}\r\n              </div>\r\n            );\r\n          })}\r\n        </div>\r\n      ))}\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default WeekViewRows;\r\n"
        }
    ]
}