{
    "sourceFile": "frontend/components/appointments/WeekView.tsx",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 12,
            "patches": [
                {
                    "date": 1738529256152,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1738529267828,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -33,13 +33,11 @@\n   const isMobile = useMediaQuery({ query: \"(min-width: 640px)\" });\r\n   const isTablet = useMediaQuery({ query: \"(min-width: 1024px)\" });\r\n \r\n   DaysOfWeekRows.splice(7);\r\n-  if (isMobile) {\r\n+  if (!isMobile) {\r\n     DaysOfWeekCalender.splice(7);\r\n-  } else if (!isMobile) {\r\n-    DaysOfWeekCalender.splice(7);\r\n-  } else {\r\n+  }  else {\r\n     DaysOfWeekCalender.splice(4);\r\n   }\r\n \r\n   const handleClickForDayMobile = (day: Date) => {\r\n"
                },
                {
                    "date": 1738529275790,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -32,9 +32,8 @@\n   } = CalenderHook();\r\n   const isMobile = useMediaQuery({ query: \"(min-width: 640px)\" });\r\n   const isTablet = useMediaQuery({ query: \"(min-width: 1024px)\" });\r\n \r\n-  DaysOfWeekRows.splice(7);\r\n   if (!isMobile) {\r\n     DaysOfWeekCalender.splice(7);\r\n   }  else {\r\n     DaysOfWeekCalender.splice(4);\r\n"
                },
                {
                    "date": 1738529287158,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -32,9 +32,9 @@\n   } = CalenderHook();\r\n   const isMobile = useMediaQuery({ query: \"(min-width: 640px)\" });\r\n   const isTablet = useMediaQuery({ query: \"(min-width: 1024px)\" });\r\n \r\n-  if (!isMobile) {\r\n+  if (isMobile) {\r\n     DaysOfWeekCalender.splice(7);\r\n   }  else {\r\n     DaysOfWeekCalender.splice(4);\r\n   }\r\n"
                },
                {
                    "date": 1738529338001,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -34,12 +34,9 @@\n   const isTablet = useMediaQuery({ query: \"(min-width: 1024px)\" });\r\n \r\n   if (isMobile) {\r\n     DaysOfWeekCalender.splice(7);\r\n-  }  else {\r\n-    DaysOfWeekCalender.splice(4);\r\n-  }\r\n-\r\n+  } \r\n   const handleClickForDayMobile = (day: Date) => {\r\n     if (getDate(endOfMonth(state)) == getDate(day)) {\r\n       const next = addMonths(currDate, 1);\r\n \r\n"
                },
                {
                    "date": 1738529381018,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -29,14 +29,9 @@\n     DaysOfWeekCalender,\r\n     theHoursOfDay,\r\n     DaysOfWeekRows\r\n   } = CalenderHook();\r\n-  const isMobile = useMediaQuery({ query: \"(min-width: 640px)\" });\r\n-  const isTablet = useMediaQuery({ query: \"(min-width: 1024px)\" });\r\n-\r\n-  if (isMobile) {\r\n-    DaysOfWeekCalender.splice(7);\r\n-  } \r\n+  \r\n   const handleClickForDayMobile = (day: Date) => {\r\n     if (getDate(endOfMonth(state)) == getDate(day)) {\r\n       const next = addMonths(currDate, 1);\r\n \r\n"
                },
                {
                    "date": 1738529386916,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -29,9 +29,14 @@\n     DaysOfWeekCalender,\r\n     theHoursOfDay,\r\n     DaysOfWeekRows\r\n   } = CalenderHook();\r\n-  \r\n+  const isMobile = useMediaQuery({ query: \"(min-width: 640px)\" });\r\n+  const isTablet = useMediaQuery({ query: \"(min-width: 1024px)\" });\r\n+\r\n+  if (isMobile) {\r\n+    DaysOfWeekCalender.splice(7);\r\n+  } \r\n   const handleClickForDayMobile = (day: Date) => {\r\n     if (getDate(endOfMonth(state)) == getDate(day)) {\r\n       const next = addMonths(currDate, 1);\r\n \r\n"
                },
                {
                    "date": 1738529393251,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -30,13 +30,9 @@\n     theHoursOfDay,\r\n     DaysOfWeekRows\r\n   } = CalenderHook();\r\n   const isMobile = useMediaQuery({ query: \"(min-width: 640px)\" });\r\n-  const isTablet = useMediaQuery({ query: \"(min-width: 1024px)\" });\r\n \r\n-  if (isMobile) {\r\n-    DaysOfWeekCalender.splice(7);\r\n-  } \r\n   const handleClickForDayMobile = (day: Date) => {\r\n     if (getDate(endOfMonth(state)) == getDate(day)) {\r\n       const next = addMonths(currDate, 1);\r\n \r\n"
                },
                {
                    "date": 1738529463669,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,108 @@\n+\"use client\";\r\n+\r\n+import React from \"react\";\r\n+import { OverlayScrollbarsComponent } from \"overlayscrollbars-react\";\r\n+import \"overlayscrollbars/overlayscrollbars.css\";\r\n+import { CalenderHook } from \"../context/CalenderProvider\";\r\n+import { inter } from \"@/fonts/fonts\";\r\n+import clsx from \"clsx\";\r\n+import {\r\n+  format,\r\n+  isToday,\r\n+  getDayOfYear,\r\n+  addMonths,\r\n+  endOfMonth,\r\n+  getDate,\r\n+} from \"date-fns\";\r\n+import { useMediaQuery } from \"react-responsive\";\r\n+import { Appointment } from \"@/types\";\r\n+import WeekViewRows from \"./WeekViewRows\";\r\n+import { MotionComponent } from \"../relatedComponents/Motion\";\r\n+\r\n+\r\n+const WeekView = ({appointments}:{appointments: Appointment[] | undefined}) => {\r\n+  const {\r\n+    currDate,\r\n+    setCurrDate,\r\n+    setState,\r\n+    state,\r\n+    DaysOfWeekCalender,\r\n+    theHoursOfDay,\r\n+    DaysOfWeekRows\r\n+  } = CalenderHook();\r\n+  const isMobile = useMediaQuery({ query: \"(min-width: 640px)\" });\r\n+  const isTablet = useMediaQuery({ query: \"(min-width: 1024px)\" });\r\n+\r\n+  if (isMobile) {\r\n+    DaysOfWeekCalender.splice(7);\r\n+  } \r\n+  const handleClickForDayMobile = (day: Date) => {\r\n+    if (getDate(endOfMonth(state)) == getDate(day)) {\r\n+      const next = addMonths(currDate, 1);\r\n+\r\n+      setCurrDate(next);\r\n+      setState(next);\r\n+    }\r\n+    setState(day);\r\n+  };\r\n+\r\n+  return (\r\n+    <React.Fragment>\r\n+      <div className=\"grid grid-cols-12 border-y shadow-md dark:bg-slate-800 dark:border-slate-700\">\r\n+        <div className=\"sm:col-span-1 border-r sm:min-w-[56px] dark:border-slate-700\"></div>\r\n+        <div className=\"grid grid-cols-7 sm:grid-cols-4 lg:grid-cols-7 col-span-12 sm:col-span-10 overflow-hidden\">\r\n+          {DaysOfWeekCalender.map((day, index) => (\r\n+            <div\r\n+              className={clsx(\r\n+                ` flex justify-center items-center sm:border-r ${inter.className} py-3 cursor-pointer hover:bg-slate-100 dark:hover:bg-slate-800  dark:border-slate-700`,\r\n+                {\r\n+                  \"bg-blue-200 dark:bg-[var(--sidebar-background)]\":\r\n+                    getDayOfYear(day) === getDayOfYear(state),\r\n+                }\r\n+              )}\r\n+              key={index}\r\n+              onClick={() => handleClickForDayMobile(day)}\r\n+            >\r\n+              <div className=\"flex flex-col sm:flex-row justify-center items-center text-[13px] p-2 \">\r\n+                <p className=\"font-medium mx-1 text-slate-600\">\r\n+                  {isMobile ? format(day, \"EEE\") : format(day, \"EEE\").at(0)}\r\n+                </p>\r\n+                <p\r\n+                  className={clsx(\r\n+                    \"font-semibold size-6 flex justify-center items-center rounded-full\",\r\n+                    { \"text-slate-50 bg-sky-500\": isToday(day) }\r\n+                  )}\r\n+                >\r\n+                  {format(day, \"d\")}\r\n+                </p>\r\n+              </div>\r\n+            </div>\r\n+          ))}\r\n+        </div>\r\n+        <div className=\"sm:col-span-1\"></div>\r\n+      </div>\r\n+      <OverlayScrollbarsComponent defer>\r\n+        <MotionComponent>\r\n+        <div className=\"grid grid-cols-12\">\r\n+          <div className=\"grid grid-rows col-span-2 sm:col-span-1 \">\r\n+            {theHoursOfDay.map((hour, index) => (\r\n+              <p\r\n+                className=\"text-slate-500 font-md text-[13px] text-center mx-2 dark:text-slate-50\"\r\n+                key={index}\r\n+              >\r\n+                {format(hour, \"ha\")}\r\n+              </p>\r\n+            ))}\r\n+          </div>\r\n+          <div className=\"grid grid-cols-1 border-l sm:grid-cols-4 lg:grid-cols-7 col-span-10 dark:border-slate-700\">\r\n+            <WeekViewRows appointment={appointments} />\r\n+          </div>\r\n+          <div className=\"sm:col-span-1 \"></div>\r\n+        </div>\r\n+        </MotionComponent>\r\n+      </OverlayScrollbarsComponent>\r\n+    </React.Fragment>\r\n+  );\r\n+};\r\n+\r\n+export default WeekView;\r\n"
                },
                {
                    "date": 1738529549748,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -30,13 +30,9 @@\n     theHoursOfDay,\r\n     DaysOfWeekRows\r\n   } = CalenderHook();\r\n   const isMobile = useMediaQuery({ query: \"(min-width: 640px)\" });\r\n-  const isTablet = useMediaQuery({ query: \"(min-width: 1024px)\" });\r\n \r\n-  if (isMobile) {\r\n-    DaysOfWeekCalender.splice(7);\r\n-  } \r\n   const handleClickForDayMobile = (day: Date) => {\r\n     if (getDate(endOfMonth(state)) == getDate(day)) {\r\n       const next = addMonths(currDate, 1);\r\n \r\n@@ -49,9 +45,9 @@\n   return (\r\n     <React.Fragment>\r\n       <div className=\"grid grid-cols-12 border-y shadow-md dark:bg-slate-800 dark:border-slate-700\">\r\n         <div className=\"sm:col-span-1 border-r sm:min-w-[56px] dark:border-slate-700\"></div>\r\n-        <div className=\"grid grid-cols-7 sm:grid-cols-4 lg:grid-cols-7 col-span-12 sm:col-span-10 overflow-hidden\">\r\n+        <div className=\"grid grid-cols-12 sm:grid-cols-4 lg:grid-cols-7 col-span-12 sm:col-span-10 overflow-hidden\">\r\n           {DaysOfWeekCalender.map((day, index) => (\r\n             <div\r\n               className={clsx(\r\n                 ` flex justify-center items-center sm:border-r ${inter.className} py-3 cursor-pointer hover:bg-slate-100 dark:hover:bg-slate-800  dark:border-slate-700`,\r\n@@ -105,108 +101,4 @@\n   );\r\n };\r\n \r\n export default WeekView;\r\n-\"use client\";\r\n-\r\n-import React from \"react\";\r\n-import { OverlayScrollbarsComponent } from \"overlayscrollbars-react\";\r\n-import \"overlayscrollbars/overlayscrollbars.css\";\r\n-import { CalenderHook } from \"../context/CalenderProvider\";\r\n-import { inter } from \"@/fonts/fonts\";\r\n-import clsx from \"clsx\";\r\n-import {\r\n-  format,\r\n-  isToday,\r\n-  getDayOfYear,\r\n-  addMonths,\r\n-  endOfMonth,\r\n-  getDate,\r\n-} from \"date-fns\";\r\n-import { useMediaQuery } from \"react-responsive\";\r\n-import { Appointment } from \"@/types\";\r\n-import WeekViewRows from \"./WeekViewRows\";\r\n-import { MotionComponent } from \"../relatedComponents/Motion\";\r\n-\r\n-\r\n-const WeekView = ({appointments}:{appointments: Appointment[] | undefined}) => {\r\n-  const {\r\n-    currDate,\r\n-    setCurrDate,\r\n-    setState,\r\n-    state,\r\n-    DaysOfWeekCalender,\r\n-    theHoursOfDay,\r\n-    DaysOfWeekRows\r\n-  } = CalenderHook();\r\n-  const isMobile = useMediaQuery({ query: \"(min-width: 640px)\" });\r\n-\r\n-  const handleClickForDayMobile = (day: Date) => {\r\n-    if (getDate(endOfMonth(state)) == getDate(day)) {\r\n-      const next = addMonths(currDate, 1);\r\n-\r\n-      setCurrDate(next);\r\n-      setState(next);\r\n-    }\r\n-    setState(day);\r\n-  };\r\n-\r\n-  return (\r\n-    <React.Fragment>\r\n-      <div className=\"grid grid-cols-12 border-y shadow-md dark:bg-slate-800 dark:border-slate-700\">\r\n-        <div className=\"sm:col-span-1 border-r sm:min-w-[56px] dark:border-slate-700\"></div>\r\n-        <div className=\"grid grid-cols-7 sm:grid-cols-4 lg:grid-cols-7 col-span-12 sm:col-span-10 overflow-hidden\">\r\n-          {DaysOfWeekCalender.map((day, index) => (\r\n-            <div\r\n-              className={clsx(\r\n-                ` flex justify-center items-center sm:border-r ${inter.className} py-3 cursor-pointer hover:bg-slate-100 dark:hover:bg-slate-800  dark:border-slate-700`,\r\n-                {\r\n-                  \"bg-blue-200 dark:bg-[var(--sidebar-background)]\":\r\n-                    getDayOfYear(day) === getDayOfYear(state),\r\n-                }\r\n-              )}\r\n-              key={index}\r\n-              onClick={() => handleClickForDayMobile(day)}\r\n-            >\r\n-              <div className=\"flex flex-col sm:flex-row justify-center items-center text-[13px] p-2 \">\r\n-                <p className=\"font-medium mx-1 text-slate-600\">\r\n-                  {isMobile ? format(day, \"EEE\") : format(day, \"EEE\").at(0)}\r\n-                </p>\r\n-                <p\r\n-                  className={clsx(\r\n-                    \"font-semibold size-6 flex justify-center items-center rounded-full\",\r\n-                    { \"text-slate-50 bg-sky-500\": isToday(day) }\r\n-                  )}\r\n-                >\r\n-                  {format(day, \"d\")}\r\n-                </p>\r\n-              </div>\r\n-            </div>\r\n-          ))}\r\n-        </div>\r\n-        <div className=\"sm:col-span-1\"></div>\r\n-      </div>\r\n-      <OverlayScrollbarsComponent defer>\r\n-        <MotionComponent>\r\n-        <div className=\"grid grid-cols-12\">\r\n-          <div className=\"grid grid-rows col-span-2 sm:col-span-1 \">\r\n-            {theHoursOfDay.map((hour, index) => (\r\n-              <p\r\n-                className=\"text-slate-500 font-md text-[13px] text-center mx-2 dark:text-slate-50\"\r\n-                key={index}\r\n-              >\r\n-                {format(hour, \"ha\")}\r\n-              </p>\r\n-            ))}\r\n-          </div>\r\n-          <div className=\"grid grid-cols-1 border-l sm:grid-cols-4 lg:grid-cols-7 col-span-10 dark:border-slate-700\">\r\n-            <WeekViewRows appointment={appointments} />\r\n-          </div>\r\n-          <div className=\"sm:col-span-1 \"></div>\r\n-        </div>\r\n-        </MotionComponent>\r\n-      </OverlayScrollbarsComponent>\r\n-    </React.Fragment>\r\n-  );\r\n-};\r\n-\r\n-export default WeekView;\r\n"
                },
                {
                    "date": 1738529572686,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -49,9 +49,9 @@\n         <div className=\"grid grid-cols-12 sm:grid-cols-4 lg:grid-cols-7 col-span-12 sm:col-span-10 overflow-hidden\">\r\n           {DaysOfWeekCalender.map((day, index) => (\r\n             <div\r\n               className={clsx(\r\n-                ` flex justify-center items-center sm:border-r ${inter.className} py-3 cursor-pointer hover:bg-slate-100 dark:hover:bg-slate-800  dark:border-slate-700`,\r\n+                `grid-cols-4 flex justify-center items-center sm:border-r ${inter.className} py-3 cursor-pointer hover:bg-slate-100 dark:hover:bg-slate-800  dark:border-slate-700`,\r\n                 {\r\n                   \"bg-blue-200 dark:bg-[var(--sidebar-background)]\":\r\n                     getDayOfYear(day) === getDayOfYear(state),\r\n                 }\r\n"
                },
                {
                    "date": 1738529578681,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -49,9 +49,9 @@\n         <div className=\"grid grid-cols-12 sm:grid-cols-4 lg:grid-cols-7 col-span-12 sm:col-span-10 overflow-hidden\">\r\n           {DaysOfWeekCalender.map((day, index) => (\r\n             <div\r\n               className={clsx(\r\n-                `col-span flex justify-center items-center sm:border-r ${inter.className} py-3 cursor-pointer hover:bg-slate-100 dark:hover:bg-slate-800  dark:border-slate-700`,\r\n+                `col-span-4 flex justify-center items-center sm:border-r ${inter.className} py-3 cursor-pointer hover:bg-slate-100 dark:hover:bg-slate-800  dark:border-slate-700`,\r\n                 {\r\n                   \"bg-blue-200 dark:bg-[var(--sidebar-background)]\":\r\n                     getDayOfYear(day) === getDayOfYear(state),\r\n                 }\r\n"
                },
                {
                    "date": 1738529645104,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -45,9 +45,9 @@\n   return (\r\n     <React.Fragment>\r\n       <div className=\"grid grid-cols-12 border-y shadow-md dark:bg-slate-800 dark:border-slate-700\">\r\n         <div className=\"sm:col-span-1 border-r sm:min-w-[56px] dark:border-slate-700\"></div>\r\n-        <div className=\"grid grid-cols-12 sm:grid-cols-4 lg:grid-cols-7 col-span-12 sm:col-span-10 overflow-hidden bg-[var-]\">\r\n+        <div className=\"grid grid-cols-12 sm:grid-cols-4 lg:grid-cols-7 col-span-12 sm:col-span-10 overflow-hidden bg-[var]\">\r\n           {DaysOfWeekCalender.map((day, index) => (\r\n             <div\r\n               className={clsx(\r\n                 `col-span-3 sm:col-auto flex justify-center items-center sm:border-r ${inter.className} py-3 cursor-pointer hover:bg-slate-100 dark:hover:bg-slate-800  dark:border-slate-700`,\r\n"
                }
            ],
            "date": 1738529256152,
            "name": "Commit-0",
            "content": "\"use client\";\r\n\r\nimport React from \"react\";\r\nimport { OverlayScrollbarsComponent } from \"overlayscrollbars-react\";\r\nimport \"overlayscrollbars/overlayscrollbars.css\";\r\nimport { CalenderHook } from \"../context/CalenderProvider\";\r\nimport { inter } from \"@/fonts/fonts\";\r\nimport clsx from \"clsx\";\r\nimport {\r\n  format,\r\n  isToday,\r\n  getDayOfYear,\r\n  addMonths,\r\n  endOfMonth,\r\n  getDate,\r\n} from \"date-fns\";\r\nimport { useMediaQuery } from \"react-responsive\";\r\nimport { Appointment } from \"@/types\";\r\nimport WeekViewRows from \"./WeekViewRows\";\r\nimport { MotionComponent } from \"../relatedComponents/Motion\";\r\n\r\n\r\nconst WeekView = ({appointments}:{appointments: Appointment[] | undefined}) => {\r\n  const {\r\n    currDate,\r\n    setCurrDate,\r\n    setState,\r\n    state,\r\n    DaysOfWeekCalender,\r\n    theHoursOfDay,\r\n    DaysOfWeekRows\r\n  } = CalenderHook();\r\n  const isMobile = useMediaQuery({ query: \"(min-width: 640px)\" });\r\n  const isTablet = useMediaQuery({ query: \"(min-width: 1024px)\" });\r\n\r\n  DaysOfWeekRows.splice(7);\r\n  if (isMobile) {\r\n    DaysOfWeekCalender.splice(7);\r\n  } else if (!isMobile) {\r\n    DaysOfWeekCalender.splice(7);\r\n  } else {\r\n    DaysOfWeekCalender.splice(4);\r\n  }\r\n\r\n  const handleClickForDayMobile = (day: Date) => {\r\n    if (getDate(endOfMonth(state)) == getDate(day)) {\r\n      const next = addMonths(currDate, 1);\r\n\r\n      setCurrDate(next);\r\n      setState(next);\r\n    }\r\n    setState(day);\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <div className=\"grid grid-cols-12 border-y shadow-md dark:bg-slate-800 dark:border-slate-700\">\r\n        <div className=\"sm:col-span-1 border-r sm:min-w-[56px] dark:border-slate-700\"></div>\r\n        <div className=\"grid grid-cols-7 sm:grid-cols-4 lg:grid-cols-7 col-span-12 sm:col-span-10 overflow-hidden\">\r\n          {DaysOfWeekCalender.map((day, index) => (\r\n            <div\r\n              className={clsx(\r\n                ` flex justify-center items-center sm:border-r ${inter.className} py-3 cursor-pointer hover:bg-slate-100 dark:hover:bg-slate-800  dark:border-slate-700`,\r\n                {\r\n                  \"bg-blue-200 dark:bg-[var(--sidebar-background)]\":\r\n                    getDayOfYear(day) === getDayOfYear(state),\r\n                }\r\n              )}\r\n              key={index}\r\n              onClick={() => handleClickForDayMobile(day)}\r\n            >\r\n              <div className=\"flex flex-col sm:flex-row justify-center items-center text-[13px] p-2 \">\r\n                <p className=\"font-medium mx-1 text-slate-600\">\r\n                  {isMobile ? format(day, \"EEE\") : format(day, \"EEE\").at(0)}\r\n                </p>\r\n                <p\r\n                  className={clsx(\r\n                    \"font-semibold size-6 flex justify-center items-center rounded-full\",\r\n                    { \"text-slate-50 bg-sky-500\": isToday(day) }\r\n                  )}\r\n                >\r\n                  {format(day, \"d\")}\r\n                </p>\r\n              </div>\r\n            </div>\r\n          ))}\r\n        </div>\r\n        <div className=\"sm:col-span-1\"></div>\r\n      </div>\r\n      <OverlayScrollbarsComponent defer>\r\n        <MotionComponent>\r\n        <div className=\"grid grid-cols-12\">\r\n          <div className=\"grid grid-rows col-span-2 sm:col-span-1 \">\r\n            {theHoursOfDay.map((hour, index) => (\r\n              <p\r\n                className=\"text-slate-500 font-md text-[13px] text-center mx-2 dark:text-slate-50\"\r\n                key={index}\r\n              >\r\n                {format(hour, \"ha\")}\r\n              </p>\r\n            ))}\r\n          </div>\r\n          <div className=\"grid grid-cols-1 border-l sm:grid-cols-4 lg:grid-cols-7 col-span-10 dark:border-slate-700\">\r\n            <WeekViewRows appointment={appointments} />\r\n          </div>\r\n          <div className=\"sm:col-span-1 \"></div>\r\n        </div>\r\n        </MotionComponent>\r\n      </OverlayScrollbarsComponent>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default WeekView;\r\n"
        }
    ]
}