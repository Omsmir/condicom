{
    "sourceFile": "frontend/components/appointments/CalenderRow.tsx",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 2,
            "patches": [
                {
                    "date": 1738529133075,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1738529141031,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -66,9 +66,9 @@\n     setView(\"Week'view\");\r\n   }, []);\r\n \r\n   const setCurrentDay = () => {\r\n-    set\r\n+    setState(day)\r\n   }\r\n   return (\r\n     <div\r\n       className={clsx(\r\n@@ -78,8 +78,9 @@\n             dayToCompare(day).day === stateTocompare().day,\r\n         },\r\n         className\r\n       )}\r\n+      onc\r\n     >\r\n       <div className=\"flex justify-end md:justify-start mb-2\">\r\n         <div\r\n           className={clsx(\r\n"
                },
                {
                    "date": 1738529149403,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -78,9 +78,9 @@\n             dayToCompare(day).day === stateTocompare().day,\r\n         },\r\n         className\r\n       )}\r\n-      onc\r\n+      onClick={setCurrentDay}\r\n     >\r\n       <div className=\"flex justify-end md:justify-start mb-2\">\r\n         <div\r\n           className={clsx(\r\n"
                }
            ],
            "date": 1738529133075,
            "name": "Commit-0",
            "content": "import clsx from \"clsx\";\r\nimport { format, isToday, getYear, getDayOfYear, isSameDay } from \"date-fns\";\r\nimport { useMediaQuery } from \"react-responsive\";\r\nimport { CalenderHook } from \"../context/CalenderProvider\";\r\nimport { useCallback } from \"react\";\r\nimport { Appointment } from \"@/types\";\r\n\r\nimport { useSession } from \"next-auth/react\";\r\ninterface Calender {\r\n  day: Date;\r\n  className?: string;\r\n  classname?: string;\r\n  appointment: Appointment[] | undefined;\r\n}\r\n\r\nconst CalenderRow: React.FC<Calender> = ({\r\n  day,\r\n  className,\r\n  classname,\r\n  appointment,\r\n}) => {\r\n  const isMobile = useMediaQuery({ query: \"(max-width: 768px)\" });\r\n  const { data: session } = useSession();\r\n\r\n  const {\r\n    state,\r\n    setState,\r\n    setViewPort,\r\n    setView,\r\n    setWeekView,\r\n    setMonthView,\r\n    setDayView,\r\n  } = CalenderHook();\r\n\r\n  const dayToCompare = (day: Date) => {\r\n    const yearOfDayToCompare = getYear(day);\r\n    const dayOfYearToCompare = getDayOfYear(day);\r\n\r\n    const obj = {\r\n      year: yearOfDayToCompare,\r\n      day: dayOfYearToCompare,\r\n    };\r\n\r\n    return obj;\r\n  };\r\n  const stateTocompare = () => {\r\n    const yearOfDayToCompare = getYear(state);\r\n    const dayOfYearToCompare = getDayOfYear(state);\r\n\r\n    const obj = {\r\n      year: yearOfDayToCompare,\r\n      day: dayOfYearToCompare,\r\n    };\r\n    return obj;\r\n  };\r\n\r\n  const handleClick = useCallback((day: Date) => {\r\n    setState(day);\r\n\r\n    setViewPort(2);\r\n\r\n    setWeekView(true);\r\n    setMonthView(false);\r\n    setDayView(false);\r\n\r\n    setView(\"Week'view\");\r\n  }, []);\r\n\r\n  const setCurrentDay = () => {\r\n    set\r\n  }\r\n  return (\r\n    <div\r\n      className={clsx(\r\n        \"flex flex-col border-b h-32 p-2 cursor-pointer dark:border-slate-700\",\r\n        {\r\n          \"bg-[var(--sidebar-background)]\":\r\n            dayToCompare(day).day === stateTocompare().day,\r\n        },\r\n        className\r\n      )}\r\n    >\r\n      <div className=\"flex justify-end md:justify-start mb-2\">\r\n        <div\r\n          className={clsx(\r\n            \"flex size-7 rounded-full \",\r\n            {\r\n              \"bg-blue-700 text-slate-100 items-center justify-center\":\r\n                isToday(day),\r\n            },\r\n            classname\r\n          )}\r\n        >\r\n          <p className=\"text-[12px]\">{format(day, \"d\")}</p>\r\n        </div>\r\n      </div>\r\n      <div className=\"flex flex-col overflow-y-auto\">\r\n        {!isMobile ? (\r\n          <div className=\"flex flex-col justify-between group \">\r\n            {appointment?.map((task, index) => {\r\n              if (\r\n                isSameDay(task.startDate, day) &&\r\n                session?.user.id === task.user\r\n              ) {\r\n                return (\r\n                  <div\r\n                    onClick={() => handleClick(day)}\r\n                    key={index}\r\n                    style={{ background: task.color }}\r\n                    className={`flex justify-between items-center px-2 py-1 my-1 text-sm text-slate-50 font-medium rounded-sm`}\r\n                  >\r\n                    {format(task.startDate, \"h:mm a\")} {task.task}\r\n                  </div>\r\n                );\r\n              }\r\n            })}\r\n          </div>\r\n        ) : (\r\n          <div className=\"flex \">\r\n            {appointment?.map((task, index) => {\r\n              if (\r\n                isSameDay(task.startDate, day) &&\r\n                session?.user.id === task.user\r\n              ) {\r\n                return (\r\n                  <div\r\n                    key={index}\r\n                    style={{ background: task.color }}\r\n                    className={`flex justify-center items-center mx-1 text-sm text-slate-50 font-medium rounded-sm  `}\r\n                  >\r\n                    {task.task}\r\n                  </div>\r\n                );\r\n              }\r\n            })}\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CalenderRow;\r\n"
        }
    ]
}